<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="model_8py" kind="file" language="Python">
    <compoundname>model.py</compoundname>
    <innerclass refid="classsrc_1_1model_1_1_single_twist_model" prot="public">src::model::SingleTwistModel</innerclass>
    <innerclass refid="classsrc_1_1model_1_1_single_twist_collection_model" prot="public">src::model::SingleTwistCollectionModel</innerclass>
    <innernamespace refid="namespacesrc">src</innernamespace>
    <innernamespace refid="namespacesrc_1_1model">src::model</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesrc_1_1model" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.nn<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>nn</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.optim<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>optim</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch.nn.functional<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>F<sp/><sp/></highlight><highlight class="comment">#<sp/>Correct<sp/>import<sp/>for<sp/>relu,<sp/>softmax,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>torch.utils.data<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DataLoader,<sp/>Dataset</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.graph_objects<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>go</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pd</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>itertools</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>tqdm<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tqdm</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.SphericalTwist<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SphericalTwist</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.CoherentSheaf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LineBundle</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.LocalP2<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LePotier</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>dotenv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_dotenv</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Load<sp/>.env<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">load_dotenv()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">IMPLEMENTED_CATAGORIES<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&quot;IMPLEMENTED_CATAGORIES&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>[&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>&apos;K3&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">__CURRENT_DOUBLE_TWIST_IMPLEMENTED__<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&quot;CURRENT_DOUBLE_TWIST_IMPLEMENTED&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>[&apos;K3&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">NN_MODEL_MODES<sp/>=<sp/>os.getenv(</highlight><highlight class="stringliteral">&quot;NN_MODEL_MODES&quot;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>[&apos;mass&apos;,<sp/>&apos;disc&apos;]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classsrc_1_1model_1_1_single_twist_model" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model" kindref="compound">SingleTwistModel</ref>():</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>implements<sp/>the<sp/>functionality<sp/>required<sp/>to<sp/>train<sp/>a<sp/>neural<sp/>network<sp/>model<sp/>to<sp/>predict<sp/>the<sp/>mass<sp/>or<sp/>the<sp/>discrete<sp/>Laplacian<sp/>of<sp/>a<sp/>single<sp/>spherical<sp/>twist,</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>PyTorch<sp/>does<sp/>not<sp/>directly<sp/>need<sp/>to<sp/>be<sp/>imported<sp/>into<sp/>the<sp/>main<sp/>application<sp/>file<sp/>for<sp/>the<sp/>Flask<sp/>app.<sp/>The<sp/>SingleTwistModel<sp/>class</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>acts<sp/>as<sp/>a<sp/>wrapper<sp/>for<sp/>a<sp/>general<sp/>PyTorch<sp/>neural<sp/>network<sp/>model,<sp/>and<sp/>saves<sp/>the<sp/>training<sp/>data<sp/>as<sp/>a<sp/>member<sp/>variabe.<sp/>The<sp/>class<sp/>also<sp/>provides</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>methods<sp/>to<sp/>train<sp/>the<sp/>model,<sp/>save<sp/>the<sp/>model,<sp/>load<sp/>the<sp/>model,<sp/>and<sp/>plot<sp/>the<sp/>predictions<sp/>of<sp/>the<sp/>model<sp/>using<sp/>Plotly.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1a11f29edc9ceb1fccfbbe2746feb0eaf8" kindref="member">__init__</ref>(self,<sp/>line_bundle_1,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_bundle_2,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catagory,<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree=1,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=-5,<sp/>x_max=5,<sp/>y_min=0,<sp/>y_max=5,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_size=20000,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=&apos;mass&apos;,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_granularity=0.1,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_granularity=0.05):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>constructor<sp/>for<sp/>the<sp/>SingleTwistModel<sp/>class.<sp/>The<sp/>constructor<sp/>initializes<sp/>the<sp/>model,<sp/>the<sp/>training<sp/>data,<sp/>and<sp/>the<sp/>model<sp/>mode.</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>default,<sp/>the<sp/>model<sp/>mode<sp/>is<sp/>set<sp/>to<sp/>&apos;mass&apos;,<sp/>which<sp/>means<sp/>that<sp/>the<sp/>model<sp/>is<sp/>trained<sp/>to<sp/>predict<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>spherical<sp/>twist.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>model<sp/>mode<sp/>can<sp/>also<sp/>be<sp/>set<sp/>to<sp/>&apos;disc&apos;,<sp/>which<sp/>means<sp/>that<sp/>the<sp/>model<sp/>is<sp/>trained<sp/>to<sp/>predict<sp/>the<sp/>discrete<sp/>Laplacian<sp/>of<sp/>the<sp/>spherical<sp/>twist.<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>constructor<sp/>also<sp/>checks<sp/>the<sp/>validity<sp/>of<sp/>the<sp/>input<sp/>arguments<sp/>and<sp/>raises<sp/>a<sp/>ValueError<sp/>if<sp/>any<sp/>of<sp/>the<sp/>input<sp/>arguments<sp/>are<sp/>invalid</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>catagory<sp/>The<sp/>catagory<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>or<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface;<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>the<sp/>catagory<sp/>is<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>x_min<sp/>The<sp/>minimum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>x_max<sp/>The<sp/>maximum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>y_min<sp/>The<sp/>minimum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>y_max<sp/>The<sp/>maximum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>data_size<sp/>The<sp/>number<sp/>of<sp/>data<sp/>points<sp/>to<sp/>generate<sp/>for<sp/>the<sp/>training<sp/>data</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>mode<sp/>The<sp/>mode<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;mass&apos;<sp/>for<sp/>when<sp/>the<sp/>model<sp/>should<sp/>be<sp/>predicting<sp/>the<sp/>mass,<sp/>or<sp/>&apos;disc&apos;<sp/>for<sp/>when<sp/>the<sp/>model<sp/>should<sp/>be<sp/>predicting<sp/>the<sp/>discrete<sp/>Laplacian</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>x_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>x<sp/>values<sp/>for<sp/>the<sp/>discrete<sp/>Laplacian;<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>the<sp/>mode<sp/>is<sp/>&apos;disc&apos;</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>y_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>y<sp/>values<sp/>for<sp/>the<sp/>discrete<sp/>Laplacian;<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>the<sp/>mode<sp/>is<sp/>&apos;disc&apos;</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>IMPLEMENTED_CATAGORIES:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&apos;Invalid<sp/>catagory.<sp/>Choose<sp/>from<sp/>{IMPLEMENTED_CATAGORIES}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_min<sp/>&gt;=<sp/>x_max:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>x_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y_min<sp/>&gt;=<sp/>y_max:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>y_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data_size<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;data_size<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree,<sp/>int):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;degree<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>int):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>int):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(x_min,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_min<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(x_max,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_max<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(y_min,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_min<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(y_max,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_max<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(data_size,<sp/>int):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;data_size<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>y_min<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>NN_MODEL_MODES:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&apos;Invalid<sp/>mode.<sp/>Choose<sp/>from<sp/>{NN_MODEL_MODES}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a18944c3cb3cd921fefd35d49b34a7379" kindref="member">mode</ref><sp/>=<sp/>mode<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref><sp/>=<sp/>catagory<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref><sp/>=<sp/>degree<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref><sp/>=<sp/>catagory<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a8dba0c5610085964a6adb8deb4e2b9f8" kindref="member">x_min</ref><sp/>=<sp/>x_min<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a2213d430a538104f0b5e837747d406dc" kindref="member">x_max</ref><sp/>=<sp/>x_max<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad8518961fae89a1cc4d47fb8e45be248" kindref="member">y_min</ref><sp/>=<sp/>y_min<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad8c3d5984b717a0d222f56ea6a0e5948" kindref="member">y_max</ref><sp/>=<sp/>y_max<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>the<sp/>xy-input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_train,<sp/>y_train<sp/>=<sp/><ref refid="namespacesrc_1_1model_1a606f0a55cd3826daac9e76e88d630eed" kindref="member">_generate_xy_grid</ref>(x_min,<sp/>x_max,<sp/>y_min,<sp/>y_max,<sp/>catagory=catagory,<sp/>data_size=data_size,<sp/>random_dist=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_tensor<sp/>=<sp/>torch.tensor(x_train,<sp/>dtype=torch.float32).unsqueeze(1)<sp/></highlight><highlight class="comment">#<sp/>shape<sp/>(N,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_tensor<sp/>=<sp/>torch.tensor(y_train,<sp/>dtype=torch.float32).unsqueeze(1)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sph<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1,<sp/>catagory=catagory),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_2,<sp/>catagory=catagory),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree=degree)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;mass&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Standard<sp/>mode,<sp/>create<sp/>output<sp/>tensor<sp/>for<sp/>mass<sp/>prediction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>K3<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(x_train[i],</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_train[i],</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)])</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad80da39d87df5c78cc2c1f5780f89089" kindref="member">output_tensor</ref><sp/>=<sp/>torch.tensor(z_train,<sp/>dtype=torch.float32)<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1acc6e13cc905d1d832bcc063a0357b5d8" kindref="member">input_tensor</ref><sp/>=<sp/>torch.cat([x_tensor,<sp/>y_tensor],<sp/>dim=1)<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>P2<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(x_train[i],<sp/>y_train[i])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)])</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad80da39d87df5c78cc2c1f5780f89089" kindref="member">output_tensor</ref><sp/>=<sp/>torch.tensor(z_train,<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1acc6e13cc905d1d832bcc063a0357b5d8" kindref="member">input_tensor</ref><sp/>=<sp/>torch.cat([x_tensor,<sp/>y_tensor],<sp/>dim=1)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>P1<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(complex(x_train[i],<sp/>y_train[i]))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)])</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad80da39d87df5c78cc2c1f5780f89089" kindref="member">output_tensor</ref><sp/>=<sp/>torch.tensor(z_train,<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1acc6e13cc905d1d832bcc063a0357b5d8" kindref="member">input_tensor</ref><sp/>=<sp/>torch.cat([x_tensor,<sp/>y_tensor],<sp/>dim=1)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Somehow<sp/>an<sp/>invalid<sp/>catagory<sp/>was<sp/>passed<sp/>to<sp/>generate_training_data_single_twist;<sp/>this<sp/>should<sp/>have<sp/>been<sp/>caught<sp/>earlier&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;disc&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_disc_Lapl(x,<sp/>y):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>discrete<sp/>Laplacian<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>at<sp/>a<sp/>given<sp/>point<sp/>(x,<sp/>y)</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sph.mass(x<sp/>+<sp/>x_granularity,<sp/>y)<sp/>+<sp/>sph.mass(x<sp/>-<sp/>x_granularity,<sp/>y)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>+<sp/>y_granularity)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>-<sp/>y_granularity)<sp/>-<sp/>4*sph.mass(x,<sp/>y)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sph.mass(complex(x<sp/>+<sp/>x_granularity,<sp/>y))<sp/>+<sp/>sph.mass(complex(x<sp/>-<sp/>x_granularity,<sp/>y))<sp/>+<sp/>sph.mass(complex(x,<sp/>y<sp/>+<sp/>y_granularity))<sp/>+<sp/>sph.mass(complex(x,<sp/>y<sp/>-<sp/>y_granularity))<sp/>-<sp/>4*sph.mass(complex(x,<sp/>y))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sph.mass(x<sp/>+<sp/>x_granularity,<sp/>y,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref>)<sp/>+<sp/>sph.mass(x<sp/>-<sp/>x_granularity,<sp/>y,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref>)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>+<sp/>y_granularity,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref>)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>-<sp/>y_granularity,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref>)<sp/>-<sp/>4*sph.mass(x,<sp/>y,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a921c2f0d57fa5a239607341025683ec6" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>catagory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Discrete<sp/>Laplacian<sp/>mode,<sp/>create<sp/>output<sp/>tensor<sp/>for<sp/>discrete<sp/>Laplacian<sp/>prediction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([_disc_Lapl(x_train[i],<sp/>y_train[i])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad80da39d87df5c78cc2c1f5780f89089" kindref="member">output_tensor</ref><sp/>=<sp/>torch.tensor(z_train,<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1acc6e13cc905d1d832bcc063a0357b5d8" kindref="member">input_tensor</ref><sp/>=<sp/>torch.cat([x_tensor,<sp/>y_tensor],<sp/>dim=1)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Somehow<sp/>an<sp/>invalid<sp/>mode<sp/>was<sp/>passed<sp/>to<sp/>generate_training_data_single_twist;<sp/>this<sp/>should<sp/>have<sp/>been<sp/>caught<sp/>earlier&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FNN_model_3(nn.Module):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>PyTorch<sp/>neural<sp/>network<sp/>model<sp/>for<sp/>the<sp/>SingleTwistModel<sp/>class.<sp/>The<sp/>model<sp/>is<sp/>a<sp/>simple<sp/>feedforward<sp/>neural<sp/>network<sp/>with<sp/>3<sp/>layers.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1a11f29edc9ceb1fccfbbe2746feb0eaf8" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>with<sp/>3<sp/>layers.<sp/>The<sp/>input<sp/>layer<sp/>has<sp/>2<sp/>nodes,<sp/>the<sp/>hidden<sp/>layer<sp/>has<sp/>64<sp/>nodes,<sp/>and<sp/>the<sp/>output<sp/>layer<sp/>has<sp/>1<sp/>node.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>activation<sp/>function<sp/>used<sp/>is<sp/>the<sp/>SiLU<sp/>activation<sp/>function,<sp/>which<sp/>is<sp/>the<sp/>Sigmoid-weighted<sp/>Linear<sp/>Unit<sp/>activation<sp/>function.</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FNN_model_3,<sp/>self).<ref refid="classsrc_1_1model_1_1_single_twist_model_1a11f29edc9ceb1fccfbbe2746feb0eaf8" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref><sp/>=<sp/>nn.Sequential(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(2,<sp/>64),<sp/><sp/></highlight><highlight class="comment">#<sp/>Input:<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>64),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">forward(self,<sp/>xy):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>forward<sp/>method<sp/>of<sp/>the<sp/>neural<sp/>network<sp/>model.<sp/>This<sp/>method<sp/>takes<sp/>the<sp/>input<sp/>tensor<sp/>xy<sp/>and<sp/>passes<sp/>it<sp/>through<sp/>the<sp/>neural<sp/>network<sp/>model.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>(xy)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref><sp/>=<sp/>FNN_model_3()<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1aeb4778059b8403db41537bf8c71d8ce2" kindref="member">train</ref>(self,<sp/>num_epochs):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>train<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>for<sp/>the<sp/>SingleTwistModel<sp/>class.<sp/>The<sp/>method<sp/>uses<sp/>the<sp/>Adam<sp/>optimizer<sp/>and<sp/>the<sp/>Mean<sp/>Squared<sp/>Error<sp/>loss<sp/>function.</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>method<sp/>also<sp/>uses<sp/>a<sp/>learning<sp/>rate<sp/>scheduler<sp/>to<sp/>adjust<sp/>the<sp/>learning<sp/>rate<sp/>during<sp/>training.<sp/>The<sp/>method<sp/>prints<sp/>the<sp/>loss<sp/>every<sp/>10%<sp/>of<sp/>the<sp/>total<sp/>number<sp/>of<sp/>epochs.</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>num_epochs<sp/>The<sp/>number<sp/>of<sp/>epochs<sp/>to<sp/>train<sp/>the<sp/>model<sp/>for</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>loss<sp/>function<sp/>and<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criterion<sp/>=<sp/>nn.MSELoss()<sp/><sp/></highlight><highlight class="comment">#<sp/>Mean<sp/>Squared<sp/>Error<sp/>loss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer<sp/>=<sp/>optim.Adam(self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>.parameters(),<sp/>lr=0.01)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>learning<sp/>rate<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheduler<sp/>=<sp/>optim.lr_scheduler.ReduceLROnPlateau(optimizer,<sp/>mode=</highlight><highlight class="stringliteral">&apos;min&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor=0.5,<sp/>patience=20,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>verbose=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_loss_num<sp/>=<sp/>int(num_epochs<sp/>/<sp/>10)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_progress<sp/>=<sp/>tqdm(range(num_epochs),<sp/>desc=</highlight><highlight class="stringliteral">&quot;Training<sp/>Progress&quot;</highlight><highlight class="normal">,<sp/>unit=</highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>epoch<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outer_progress:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Training<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.zero_grad()</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Forward<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>(self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1acc6e13cc905d1d832bcc063a0357b5d8" kindref="member">input_tensor</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>loss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>=<sp/>criterion(pred,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad80da39d87df5c78cc2c1f5780f89089" kindref="member">output_tensor</ref>.view(-1,<sp/>1))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Backward<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss.backward()</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.step()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Step<sp/>the<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheduler.step(loss)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>loss<sp/>occasionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>epoch<sp/>%<sp/>print_loss_num<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;Epoch<sp/>{epoch},<sp/>Loss:<sp/>{loss.item():.6f}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1ad100356b600526964a2183e70fa8036c" kindref="member">save_model</ref>(self,<sp/>filename):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>save<sp/>the<sp/>PyTorch<sp/>neural<sp/>network&apos;s<sp/>state<sp/>to<sp/>a<sp/>file<sp/>specified<sp/>by<sp/>the<sp/>filename<sp/>argument.<sp/>This<sp/>simply<sp/>calls<sp/>the<sp/>torch.save<sp/>method</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>model&apos;s<sp/>state<sp/>dictionary<sp/>and<sp/>the<sp/>filename<sp/>argument.</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>save<sp/>the<sp/>model&apos;s<sp/>state<sp/>to</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torch.save(self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>.state_dict(),<sp/>filename)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1a958d3fe65a9a1357eb759d863cd4a732" kindref="member">load_model</ref>(self,<sp/>filename):</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>load<sp/>the<sp/>PyTorch<sp/>neural<sp/>network&apos;s<sp/>state<sp/>from<sp/>a<sp/>file<sp/>specified<sp/>by<sp/>the<sp/>filename<sp/>argument.<sp/>This<sp/>simply<sp/>calls<sp/>the<sp/>torch.load<sp/>method</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>filename<sp/>argument<sp/>and<sp/>sets<sp/>the<sp/>model&apos;s<sp/>state<sp/>dictionary<sp/>to<sp/>the<sp/>loaded<sp/>state<sp/>dictionary.</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>load<sp/>the<sp/>model&apos;s<sp/>state<sp/>from</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>.load_state_dict(torch.load(filename))</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_model_1ab9485c6d3eca6678afbdb471cc6bae8b" kindref="member">predictions_to_plotly</ref>(self,<sp/>color_scale=&apos;viridis&apos;):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>plot<sp/>the<sp/>predictions<sp/>of<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>using<sp/>Plotly.<sp/>The<sp/>method<sp/>generates<sp/>a<sp/>grid<sp/>of<sp/>x<sp/>and<sp/>y<sp/>values<sp/>and<sp/>passes<sp/>them</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>through<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>to<sp/>get<sp/>the<sp/>predicted<sp/>z<sp/>values.<sp/>The<sp/>method<sp/>then<sp/>creates<sp/>a<sp/>Plotly<sp/>3D<sp/>scatter<sp/>plot<sp/>of<sp/>the<sp/>predicted<sp/>z<sp/>values</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>x<sp/>and<sp/>y<sp/>values<sp/>as<sp/>the<sp/>x<sp/>and<sp/>y<sp/>coordinates.<sp/>The<sp/>method<sp/>returns<sp/>the<sp/>Plotly<sp/>figure<sp/>object.</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>color_scale<sp/>The<sp/>color<sp/>scale<sp/>to<sp/>use<sp/>for<sp/>the<sp/>Plotly<sp/>3D<sp/>scatter<sp/>plot;<sp/>the<sp/>default<sp/>is<sp/>&apos;viridis&apos;</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>The<sp/>Plotly<sp/>figure<sp/>object<sp/>of<sp/>the<sp/>3D<sp/>scatter<sp/>plot<sp/>of<sp/>the<sp/>predicted<sp/>z<sp/>values</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals,<sp/>y_vals<sp/>=<sp/><ref refid="namespacesrc_1_1model_1a606f0a55cd3826daac9e76e88d630eed" kindref="member">_generate_xy_grid</ref>(self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a8dba0c5610085964a6adb8deb4e2b9f8" kindref="member">x_min</ref>,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a2213d430a538104f0b5e837747d406dc" kindref="member">x_max</ref>,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad8518961fae89a1cc4d47fb8e45be248" kindref="member">y_min</ref>,<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1ad8c3d5984b717a0d222f56ea6a0e5948" kindref="member">y_max</ref>,<sp/>catagory=self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a4374efbc6eaec60a713a341a2b09a0cb" kindref="member">catagory</ref>,<sp/>data_size=20000,<sp/>random_dist=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>x<sp/>and<sp/>y<sp/>values<sp/>to<sp/>tensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals_tensor<sp/>=<sp/>torch.tensor(x_vals,<sp/>dtype=torch.float32).reshape(-1,<sp/>1)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals_tensor<sp/>=<sp/>torch.tensor(y_vals,<sp/>dtype=torch.float32).reshape(-1,<sp/>1)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xy_vals_tensor<sp/>=<sp/>torch.cat([x_vals_tensor,<sp/>y_vals_tensor],<sp/>dim=1)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>model<sp/>to<sp/>evaluation<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>.eval()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Disable<sp/>gradient<sp/>tracking<sp/>for<sp/>faster<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>torch.no_grad():</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals_tensor<sp/>=<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_model_1a1ca3cbc6fdddd71263e4b9f9fe333dee" kindref="member">model</ref>(xy_vals_tensor)<sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>predictions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals_tensor.numpy().flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>NumPy<sp/>and<sp/>flatten</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=z_vals,<sp/>colorscale=color_scale))])</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_layout(</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autosize=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin=dict(l=0,<sp/>r=0,<sp/>b=0,<sp/>t=30),</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene=dict(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Changes<sp/>the<sp/>3D<sp/>plot<sp/>background<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,),</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fig</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classsrc_1_1model_1_1_single_twist_collection_model" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_collection_model" kindref="compound">SingleTwistCollectionModel</ref>():</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>implements<sp/>the<sp/>functionality<sp/>required<sp/>to<sp/>train<sp/>a<sp/>neural<sp/>network<sp/>model<sp/>to<sp/>predict<sp/>the<sp/>mass<sp/>or<sp/>the<sp/>discrete<sp/>Laplacian<sp/>of<sp/>a<sp/>collection<sp/>of<sp/>single<sp/>spherical<sp/>twists,</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>so<sp/>that<sp/>PyTorch<sp/>does<sp/>not<sp/>directly<sp/>need<sp/>to<sp/>be<sp/>imported<sp/>into<sp/>the<sp/>main<sp/>application<sp/>file<sp/>for<sp/>the<sp/>Flask<sp/>app.<sp/>The<sp/>SingleTwistCollectionModel<sp/>class</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>acts<sp/>as<sp/>a<sp/>wrapper<sp/>for<sp/>a<sp/>general<sp/>PyTorch<sp/>neural<sp/>network<sp/>model,<sp/>and<sp/>saves<sp/>the<sp/>training<sp/>data<sp/>as<sp/>a<sp/>member<sp/>variabe.<sp/>The<sp/>class<sp/>also<sp/>provides</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>methods<sp/>to<sp/>train<sp/>the<sp/>model,<sp/>save<sp/>the<sp/>model,<sp/>load<sp/>the<sp/>model,<sp/>and<sp/>plot<sp/>the<sp/>predictions<sp/>of<sp/>the<sp/>model<sp/>using<sp/>Plotly.<sp/>Unlike<sp/>the<sp/>SingleTwistModel,<sp/>this</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>class<sp/>does<sp/>not<sp/>actually<sp/>create<sp/>any<sp/>of<sp/>the<sp/>data,<sp/>but<sp/>instead<sp/>takes<sp/>in<sp/>a<sp/>filename<sp/>to<sp/>a<sp/>CSV<sp/>file<sp/>that<sp/>contains<sp/>the<sp/>training<sp/>data.<sp/>The<sp/>format<sp/>of<sp/>the<sp/>CSV</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>file<sp/>should<sp/>be<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>x,<sp/>y,<sp/>line<sp/>bundle<sp/>1,<sp/>line<sp/>bundle<sp/>2,<sp/>(optional)<sp/>degree,<sp/>mass</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/><sp/>create_training_data_single_twist_collection<sp/>method<sp/>in<sp/>the<sp/>SphericalTwist<sp/>module<sp/>can<sp/>be<sp/>used<sp/>to<sp/>generate<sp/>the<sp/>training<sp/>data<sp/>and<sp/>save<sp/>it<sp/>to<sp/>a<sp/>CSV<sp/>file.</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ac5108d2c6613d35ffd62592fa9af9658" kindref="member">__init__</ref>(self,<sp/>filename,<sp/>catagory):</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>the<sp/>SingleTwistCollectionModel<sp/>object<sp/>with<sp/>the<sp/>specified<sp/>filename<sp/>and<sp/>catagory.<sp/>The<sp/>constructor<sp/>reads<sp/>the<sp/>CSV<sp/>file<sp/>and<sp/>creates<sp/>a<sp/>PyTorch<sp/>Dataset</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>DataLoader<sp/>object<sp/>from<sp/>the<sp/>data.<sp/>The<sp/>constructor<sp/>also<sp/>initializes<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>with<sp/>the<sp/>specified<sp/>catagory.</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>CSV<sp/>file<sp/>that<sp/>contains<sp/>the<sp/>training<sp/>data</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>catagory<sp/>The<sp/>catagory<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>or<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataClass(Dataset):</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>PyTorch<sp/>neural<sp/>network<sp/>model<sp/>for<sp/>the<sp/>SingleTwistModel<sp/>class.<sp/>The<sp/>model<sp/>is<sp/>a<sp/>simple<sp/>feedforward<sp/>neural<sp/>network<sp/>with<sp/>3<sp/>layers.</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ac5108d2c6613d35ffd62592fa9af9658" kindref="member">__init__</ref>(self,<sp/>csv_file):</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a1944b9a7311de2def2e5920f89a2fef4" kindref="member">csv_file</ref><sp/>=<sp/>csv_file<sp/><sp/></highlight><highlight class="comment">#<sp/>Just<sp/>store<sp/>the<sp/>filename,<sp/>NOT<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1afe95899010562e277c07975542e1c252" kindref="member">total_samples</ref><sp/>=<sp/>sum(1<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>open(csv_file))<sp/>-<sp/>1<sp/><sp/></highlight><highlight class="comment">#<sp/>Count<sp/>lines<sp/>(excluding<sp/>header)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__len__(self):</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1afe95899010562e277c07975542e1c252" kindref="member">total_samples</ref><sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>number<sp/>of<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__getitem__(self,<sp/>index):</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Read<sp/>only<sp/>the<sp/>required<sp/>row<sp/>using<sp/>`skiprows`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>pd.read_csv(self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a1944b9a7311de2def2e5920f89a2fef4" kindref="member">csv_file</ref>,<sp/>skiprows=index+1,<sp/>nrows=1).iloc[0]</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explicitly<sp/>use<sp/>`.iloc[]`<sp/>to<sp/>avoid<sp/>FutureWarning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features<sp/>=<sp/>torch.tensor(row.iloc[:-1].values,<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>torch.tensor(row.iloc[-1],<sp/>dtype=torch.float32)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>features,<sp/>label</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataset<sp/>=<sp/>DataClass(filename)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>DataLoader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad198e020606ed968ca6554d03ea44794" kindref="member">dataloader</ref><sp/>=<sp/>DataLoader(dataset,<sp/>batch_size=64,<sp/>shuffle=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>num_workers=4,<sp/>pin_memory=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FNN_model_3(nn.Module):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>PyTorch<sp/>neural<sp/>network<sp/>model<sp/>for<sp/>the<sp/>SingleTwistModel<sp/>class.<sp/>The<sp/>model<sp/>is<sp/>a<sp/>simple<sp/>feedforward<sp/>neural<sp/>network<sp/>with<sp/>3<sp/>layers.</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>input<sp/>size<sp/>of<sp/>the<sp/>model<sp/>is<sp/>determined<sp/>by<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>model.</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ac5108d2c6613d35ffd62592fa9af9658" kindref="member">__init__</ref>(self,<sp/>catagory):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a83c4c80b9a0d77ea7226797cbb5ccf6e" kindref="member">_input_size</ref><sp/>=<sp/>5</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a83c4c80b9a0d77ea7226797cbb5ccf6e" kindref="member">_input_size</ref><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a83c4c80b9a0d77ea7226797cbb5ccf6e" kindref="member">_input_size</ref><sp/>=<sp/>4</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Invalid<sp/>catagory&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FNN_model_3,<sp/>self).<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ac5108d2c6613d35ffd62592fa9af9658" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad644e6c38407d668840d1542826851bb" kindref="member">model</ref><sp/>=<sp/>nn.Sequential(</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a83c4c80b9a0d77ea7226797cbb5ccf6e" kindref="member">_input_size</ref>,<sp/>64),<sp/><sp/></highlight><highlight class="comment">#<sp/>Input:<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>64),</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Output:<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">forward(self,<sp/>xy):</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad644e6c38407d668840d1542826851bb" kindref="member">model</ref>(xy)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a7d6bb984923b9dae218b41f946f015d4" kindref="member">catagory</ref><sp/>=<sp/>catagory<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad644e6c38407d668840d1542826851bb" kindref="member">model</ref><sp/>=<sp/>FNN_model_3(catagory)<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1a43412b2faed87d2ca4fb33f9aeca9d5f" kindref="member">train</ref>(self,<sp/>num_epochs=50):</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>train<sp/>the<sp/>neural<sp/>network<sp/>model<sp/>for<sp/>the<sp/>SingleTwistCollectionModel<sp/>class.<sp/>The<sp/>method<sp/>uses<sp/>the<sp/>Adam<sp/>optimizer<sp/>and<sp/>the<sp/>Mean<sp/>Squared<sp/>Error<sp/>loss<sp/>function.</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>method<sp/>also<sp/>uses<sp/>a<sp/>learning<sp/>rate<sp/>scheduler<sp/>to<sp/>adjust<sp/>the<sp/>learning<sp/>rate<sp/>during<sp/>training.<sp/>The<sp/>method<sp/>prints<sp/>the<sp/>loss<sp/>every<sp/>10%<sp/>of<sp/>the<sp/>total<sp/>number<sp/>of<sp/>epochs.</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>num_epochs<sp/>The<sp/>number<sp/>of<sp/>epochs<sp/>to<sp/>train<sp/>the<sp/>model<sp/>for<sp/>(default<sp/>is<sp/>50)</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Define<sp/>loss<sp/>function<sp/>and<sp/>optimizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>criterion<sp/>=<sp/>nn.MSELoss()<sp/><sp/></highlight><highlight class="comment">#<sp/>Mean<sp/>Squared<sp/>Error<sp/>loss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer<sp/>=<sp/>optim.Adam(self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad644e6c38407d668840d1542826851bb" kindref="member">model</ref>.parameters(),<sp/>lr=0.01)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Use<sp/>learning<sp/>rate<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheduler<sp/>=<sp/>optim.lr_scheduler.ReduceLROnPlateau(optimizer,<sp/>mode=</highlight><highlight class="stringliteral">&apos;min&apos;</highlight><highlight class="normal">,<sp/>factor=0.5,<sp/>patience=20,<sp/>verbose=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print_rounds<sp/>=<sp/>int(num_epochs<sp/>/<sp/>10)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outer_progress<sp/>=<sp/>tqdm(range(num_epochs),<sp/>desc=</highlight><highlight class="stringliteral">&quot;Training<sp/>Progress&quot;</highlight><highlight class="normal">,<sp/>unit=</highlight><highlight class="stringliteral">&quot;epoch&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>epoch<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>outer_progress:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_progress<sp/>=<sp/>tqdm(self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad198e020606ed968ca6554d03ea44794" kindref="member">dataloader</ref>,<sp/>desc=f</highlight><highlight class="stringliteral">&quot;Epoch<sp/>{epoch+1}/{num_epochs}&quot;</highlight><highlight class="normal">,<sp/>unit=</highlight><highlight class="stringliteral">&quot;batch&quot;</highlight><highlight class="normal">,<sp/>leave=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>batch<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inner_progress:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_tensor,<sp/>output_tensor<sp/>=<sp/>batch</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.zero_grad()</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Forward<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred<sp/>=<sp/>self.<ref refid="classsrc_1_1model_1_1_single_twist_collection_model_1ad644e6c38407d668840d1542826851bb" kindref="member">model</ref>(input_tensor)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Compute<sp/>loss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss<sp/>=<sp/>criterion(pred,<sp/>output_tensor.view(-1,<sp/>1))</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Backward<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loss.backward()</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optimizer.step()</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Step<sp/>the<sp/>scheduler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scheduler.step(loss)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>loss<sp/>occasionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>epoch<sp/>%<sp/>print_rounds<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;Epoch<sp/>{epoch},<sp/>Loss:<sp/>{loss.item():.6f}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1model_1a9492c028e6cc55675f69d0dffdc9c963" kindref="member">create_training_data_single_twist_collection</ref>(filename,<sp/>catagory,<sp/>degree=1,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=-10,<sp/>x_max=10,<sp/>y_min=0,<sp/>y_max=10,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb_1_min=-2,<sp/>lb_1_max=2,<sp/>lb_2_min=-3,<sp/>lb_2_max=3,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_size=5000):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>construct<sp/>a<sp/>CSV<sp/>file<sp/>with<sp/>training<sp/>data<sp/>for<sp/>a<sp/>collection<sp/>of<sp/>single<sp/>spherical<sp/>twists.<sp/>The<sp/>method<sp/>generates<sp/>data<sp/>for<sp/>all<sp/>possible<sp/>combinations</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>of<sp/>line<sp/>bundles<sp/>lb_1<sp/>and<sp/>lb_2<sp/>in<sp/>the<sp/>specified<sp/>ranges.<sp/>The<sp/>method<sp/>generates<sp/>data<sp/>for<sp/>the<sp/>specified<sp/>catagory<sp/>and<sp/>degree,<sp/>and<sp/>saves<sp/>the<sp/>data<sp/>to<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>filename.<sp/>The<sp/>method<sp/>uses<sp/>the<sp/>_append_training_data_to_CSV_single_twist<sp/>method<sp/>to<sp/>append<sp/>the<sp/>training<sp/>data<sp/>to<sp/>the<sp/>CSV<sp/>file.</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>WARNING:<sp/>Every<sp/>iteration<sp/>of<sp/>append_training_data_to_CSV_single_twist<sp/>with<sp/>the<sp/>default<sp/>20,000<sp/>samples</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>makes<sp/>a<sp/>file<sp/>that<sp/>is<sp/>roughly<sp/>1.5MB<sp/>and<sp/>takes<sp/>about<sp/>1.83s<sp/>(on<sp/>8<sp/>Intel<sp/>I9<sp/>cores).<sp/>Thus,<sp/>ranging<sp/>over</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>all<sp/>spherical<sp/>twists<sp/>Tw_a<sp/>O(b)<sp/><sp/>with<sp/>-5≤<sp/>a<sp/>≤<sp/>5<sp/>and<sp/>-5<sp/>≤<sp/>b<sp/>≤<sp/>5<sp/>will<sp/>produce<sp/>a<sp/>file<sp/>that<sp/>is<sp/>roughly<sp/>150MB<sp/>and</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>will<sp/>take<sp/>roughly<sp/>3<sp/>and<sp/>a<sp/>half<sp/>minutes<sp/>(on<sp/>8<sp/>Intel<sp/>I9<sp/>cores).</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>CSV<sp/>file<sp/>to<sp/>save<sp/>the<sp/>training<sp/>data<sp/>to</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>catagory<sp/>The<sp/>catagory<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>or<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface;<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>the<sp/>catagory<sp/>is<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_min<sp/>The<sp/>minimum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_max<sp/>The<sp/>maximum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data<sp/></highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_min<sp/>The<sp/>minimum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="498"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_max<sp/>The<sp/>maximum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="499"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>lb_1_min<sp/>The<sp/>minimum<sp/>value<sp/>for<sp/>the<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="500"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>lb_1_max<sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>the<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="501"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>lb_2_min<sp/>The<sp/>minimum<sp/>value<sp/>for<sp/>the<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="502"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>lb_2_max<sp/>The<sp/>maximum<sp/>value<sp/>for<sp/>the<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="503"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>data_size<sp/>The<sp/>number<sp/>of<sp/>data<sp/>points<sp/>to<sp/>generate<sp/>for<sp/>the<sp/>training<sp/>data</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>IMPLEMENTED_CATAGORIES:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&apos;Invalid<sp/>catagory.<sp/>Choose<sp/>from<sp/>{IMPLEMENTED_CATAGORIES}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_min<sp/>&gt;=<sp/>x_max:</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>x_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y_min<sp/>&gt;=<sp/>y_max:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>y_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data_size<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;data_size<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree,<sp/>int):</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;degree<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(lb_1_min,<sp/>int):</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;lb_1_min<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(lb_1_max,<sp/>int):</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;lb_1_max<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(lb_2_min,<sp/>int):</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;lb_2_min<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(lb_2_max,<sp/>int):</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;lb_2_max<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(x_min,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_min<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(x_max,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_max<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(y_min,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_min<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(y_max,<sp/>(int,<sp/>float)):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_max<sp/>must<sp/>be<sp/>a<sp/>number&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(data_size,<sp/>int):</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;data_size<sp/>must<sp/>be<sp/>an<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>y_min<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>lb_1_range<sp/>=<sp/>range(lb_1_min,<sp/>lb_1_max+1)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>lb_2_range<sp/>=<sp/>range(lb_2_min,<sp/>lb_2_max+1)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>total_iterations<sp/>=<sp/>len(lb_1_range)<sp/>*<sp/>len(lb_2_range)<sp/><sp/></highlight><highlight class="comment">#<sp/>Total<sp/>combinations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lb_1,<sp/>lb_2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tqdm(itertools.product(lb_1_range,<sp/>lb_2_range),<sp/>total=total_iterations,<sp/>desc=</highlight><highlight class="stringliteral">&quot;Generating<sp/>Data&quot;</highlight><highlight class="normal">,<sp/>unit=</highlight><highlight class="stringliteral">&quot;pair&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesrc_1_1model_1a6db1376bab86fc9b39269a1c6b75d81b" kindref="member">_append_training_data_to_CSV_single_twist</ref>(filename,<sp/>line_bundle_1=lb_1,<sp/>line_bundle_2=lb_2,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catagory=catagory,<sp/>degree=degree,<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=x_min,<sp/>x_max=x_max,<sp/>y_min=y_min,<sp/>y_max=y_max,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_size=data_size)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">#<sp/>class<sp/>FNN_model_1(nn.Module):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>catagory):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>catagory<sp/>==<sp/>&apos;K3&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P1&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&apos;Invalid<sp/>catagory&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FNN_model_1,<sp/>self).__init__()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model<sp/>=<sp/>nn.Sequential(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(self._input_size,<sp/>64),<sp/><sp/>#<sp/>Input:<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.ReLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>64),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.ReLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>1)<sp/><sp/>#<sp/>Output:<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>forward(self,<sp/>xy):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.model(xy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">#<sp/>class<sp/>FNN_model_2(nn.Module):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>catagory):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>catagory<sp/>==<sp/>&apos;K3&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P1&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&apos;Invalid<sp/>catagory&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FNN_model_2,<sp/>self).__init__()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model<sp/>=<sp/>nn.Sequential(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(self._input_size,<sp/>128),<sp/><sp/>#<sp/>Input:<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),<sp/><sp/>#<sp/>Swish<sp/>activation<sp/>(better<sp/>than<sp/>ReLU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(128,<sp/>128),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.BatchNorm1d(128),<sp/><sp/>#<sp/>Normalization<sp/>for<sp/>stable<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(128,<sp/>128),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Dropout(0.2),<sp/><sp/>#<sp/>Prevent<sp/>overfitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(128,<sp/>1)<sp/><sp/>#<sp/>Output:<sp/>predicted<sp/>z<sp/>(mass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>forward(self,<sp/>xy):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.model(xy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">#<sp/>class<sp/>FNN_model_3(nn.Module):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>__init__(self,<sp/>catagory):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>catagory<sp/>==<sp/>&apos;K3&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P1&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._input_size<sp/>=<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&apos;Invalid<sp/>catagory&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(FNN_model_3,<sp/>self).__init__()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model<sp/>=<sp/>nn.Sequential(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(self._input_size,<sp/>64),<sp/><sp/>#<sp/>Input:<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>64),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.SiLU(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn.Linear(64,<sp/>1)<sp/><sp/>#<sp/>Output:<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>def<sp/>forward(self,<sp/>xy):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>self.model(xy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1model_1a606f0a55cd3826daac9e76e88d630eed" kindref="member">_generate_xy_grid</ref>(x_min,<sp/>x_max,<sp/>y_min,<sp/>y_max,<sp/>catagory,<sp/>random_dist<sp/>=<sp/>True,<sp/>data_size=20000):</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>create<sp/>a<sp/>grid<sp/>of<sp/>x<sp/>and<sp/>y<sp/>values<sp/>for<sp/>the<sp/>input<sp/>data.<sp/>The<sp/>function<sp/>generates<sp/>the<sp/>x<sp/>and<sp/>y<sp/>values</highlight></codeline>
<codeline lineno="648"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>either<sp/>randomly<sp/>or<sp/>from<sp/>a<sp/>linear<sp/>grid,<sp/>depending<sp/>on<sp/>the<sp/>value<sp/>of<sp/>the<sp/>random_dist<sp/>argument.<sp/>The<sp/>function<sp/>also<sp/>checks</highlight></codeline>
<codeline lineno="649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>validity<sp/>of<sp/>the<sp/>input<sp/>arguments<sp/>and<sp/>raises<sp/>a<sp/>ValueError<sp/>if<sp/>any<sp/>of<sp/>the<sp/>input<sp/>arguments<sp/>are<sp/>invalid</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_min<sp/>The<sp/>minimum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_max<sp/>The<sp/>maximum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_min<sp/>The<sp/>minimum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_max<sp/>The<sp/>maximum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="655"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>catagory<sp/>The<sp/>catagory<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>or<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="656"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>random_dist<sp/>A<sp/>boolean<sp/>flag<sp/>to<sp/>determine<sp/>whether<sp/>the<sp/>x<sp/>and<sp/>y<sp/>values<sp/>should<sp/>be<sp/>generated<sp/>randomly<sp/>or<sp/>from<sp/>a<sp/>linear<sp/>grid</highlight></codeline>
<codeline lineno="657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>data_size<sp/>The<sp/>number<sp/>of<sp/>data<sp/>points<sp/>to<sp/>generate<sp/>for<sp/>the<sp/>training<sp/>data</highlight></codeline>
<codeline lineno="658"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="659"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>x_vals<sp/>The<sp/>x<sp/>values<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>y_vals<sp/>The<sp/>y<sp/>values<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>IMPLEMENTED_CATAGORIES:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&apos;Invalid<sp/>catagory.<sp/>Choose<sp/>from<sp/>{IMPLEMENTED_CATAGORIES}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_min<sp/>&gt;=<sp/>x_max:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;x_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>x_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y_min<sp/>&gt;=<sp/>y_max:</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;y_min<sp/>must<sp/>be<sp/>less<sp/>than<sp/>y_max&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>data_size<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;data_size<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Can<sp/>create<sp/>data<sp/>from<sp/>random<sp/>points<sp/>on<sp/>the<sp/>upper<sp/>half<sp/>plane.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>random_dist:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Randomly<sp/>create<sp/>x<sp/>and<sp/>y<sp/>values<sp/>from<sp/>uniform<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.random.uniform(x_min,<sp/>x_max,<sp/>size=(data_size,<sp/>))</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.random.uniform(y_min,<sp/>y_max,<sp/>size=(data_size,<sp/>))</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_vals,<sp/>y_vals</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>x<sp/>and<sp/>y<sp/>values<sp/>are<sp/>not<sp/>random,<sp/>but<sp/>are<sp/>generated<sp/>from<sp/>a<sp/>grid<sp/>that<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>be<sp/>linearly<sp/>spaced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>int(np.sqrt(data_size))</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(x_min,<sp/>x_max,<sp/>N)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>N)<sp/><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>N)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>N<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_vals,<sp/>y_vals</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DLP<sp/>=<sp/><ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref>()</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>random_dist:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_abs_x<sp/>=<sp/>max(abs(x_min),<sp/>abs(x_max))</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>max(y_max,<sp/>DLP.curve_estimate(largest_abs_x))</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals,<sp/>y_vals<sp/>=<sp/>[],<sp/>[]</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(x_vals)<sp/>&lt;<sp/>data_size:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.random.uniform(x_min,<sp/>x_max)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.random.uniform(-1,<sp/>y_max)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>DLP.is_above_curve(x,<sp/>y):</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals.append(x)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_vals,<sp/>y_vals</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>x<sp/>and<sp/>y<sp/>values<sp/>are<sp/>not<sp/>random,<sp/>but<sp/>are<sp/>generated<sp/>from<sp/>a<sp/>grid<sp/>that<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>be<sp/>linearly<sp/>spaced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_abs_x<sp/>=<sp/>max(abs(x_min),<sp/>abs(x_max))</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>max(y_max,<sp/>DLP.curve_estimate(largest_abs_x))<sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>that<sp/>the<sp/>values<sp/>are<sp/>large<sp/>enough<sp/>to<sp/>cover<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>int(np.sqrt(data_size))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(x_min,<sp/>x_max,<sp/>N)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_start<sp/>=<sp/>max(DLP.curve_estimate(x),<sp/>y_min)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_start,<sp/>y_max,<sp/>N)<sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>N)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_vals,<sp/>y_vals</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1model_1a6db1376bab86fc9b39269a1c6b75d81b" kindref="member">_append_training_data_to_CSV_single_twist</ref>(filename,<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>catagory,<sp/>degree=1,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=-5,<sp/>x_max=5,<sp/>y_min=0,<sp/>y_max=10,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_size=20000):</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>append<sp/>training<sp/>data<sp/>for<sp/>a<sp/>single<sp/>spherical<sp/>twist<sp/>to<sp/>a<sp/>CSV<sp/>file.<sp/>The<sp/>function<sp/>generates<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>the<sp/>output<sp/>data<sp/>for<sp/>the<sp/>spherical<sp/>twist<sp/>and<sp/>appends<sp/>the<sp/>data<sp/>to<sp/>the<sp/>CSV<sp/>file.<sp/>The<sp/>function<sp/>checks<sp/>the<sp/>validity<sp/>of<sp/>the<sp/>input</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>arguments<sp/>and<sp/>raises<sp/>a<sp/>ValueError<sp/>if<sp/>any<sp/>of<sp/>the<sp/>input<sp/>arguments<sp/>are<sp/>invalid.<sp/>The<sp/>function<sp/>uses<sp/>the<sp/>SphericalTwist<sp/>class<sp/>to<sp/>compute</highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>mass<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>at<sp/>each<sp/>point<sp/>in<sp/>the<sp/>grid<sp/>specified<sp/>by<sp/>the<sp/>input<sp/>data.</highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="757"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>CSV<sp/>file<sp/>to<sp/>save<sp/>the<sp/>training<sp/>data<sp/>to</highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>spherical<sp/>twist<sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>catagory<sp/>The<sp/>catagory<sp/>of<sp/>the<sp/>model;<sp/>this<sp/>is<sp/>either<sp/>&apos;P1&apos;,<sp/>&apos;P2&apos;,<sp/>or<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="761"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface;<sp/>this<sp/>is<sp/>only<sp/>used<sp/>when<sp/>the<sp/>catagory<sp/>is<sp/>&apos;K3&apos;</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_min<sp/>The<sp/>minimum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>x_max<sp/>The<sp/>maximum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_min<sp/>The<sp/>minimum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>y_max<sp/>The<sp/>maximum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>input<sp/>data</highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>data_size<sp/>The<sp/>number<sp/>of<sp/>data<sp/>points<sp/>to<sp/>generate<sp/>for<sp/>the<sp/>training<sp/>data<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>IMPLEMENTED_CATAGORIES:</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&apos;Invalid<sp/>catagory.<sp/>Choose<sp/>from<sp/>{IMPLEMENTED_CATAGORIES}&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Construct<sp/>the<sp/>xy-input<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>x_train,<sp/>y_train<sp/>=<sp/><ref refid="namespacesrc_1_1model_1a606f0a55cd3826daac9e76e88d630eed" kindref="member">_generate_xy_grid</ref>(x_min,<sp/>x_max,<sp/>y_min,<sp/>y_max,<sp/>catagory=catagory,<sp/>data_size=data_size,<sp/>random_dist=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Constant<sp/>columns<sp/>for<sp/>the<sp/>line<sp/>bundle<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>line_bundle_1_col<sp/>=<sp/>np.full((len(x_train),<sp/>1),<sp/>line_bundle_1,<sp/>dtype=np.int32)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>line_bundle_2_col<sp/>=<sp/>np.full((len(x_train),<sp/>1),<sp/>line_bundle_2,<sp/>dtype=np.int32)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>sph<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1,<sp/>catagory=catagory),</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_2,<sp/>catagory=catagory),</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree=degree)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>K3<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(x_train[i,<sp/>0],</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_train[i,<sp/>0],</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)])</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree_col<sp/>=<sp/>np.full((len(x_train),<sp/>1),<sp/>degree,<sp/>dtype=np.int32)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sample<sp/>DataFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.DataFrame({</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/>x_train.flatten(),</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:<sp/>y_train.flatten(),</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB1&apos;</highlight><highlight class="normal">:<sp/>line_bundle_1_col.flatten(),</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB2&apos;</highlight><highlight class="normal">:<sp/>line_bundle_2_col.flatten(),</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Degree&apos;</highlight><highlight class="normal">:<sp/>degree_col.flatten(),</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Mass&apos;</highlight><highlight class="normal">:<sp/>z_train.flatten()</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_exists<sp/>=<sp/>os.path.isfile(filename)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>DataFrame<sp/>to<sp/>CSV<sp/>(or<sp/>create<sp/>a<sp/>new<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.to_csv(filename,<sp/>mode=</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>header=</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>file_exists,<sp/>index=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>data<sp/>to<sp/>CSV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>P1<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(complex(x_train[i,<sp/>0],<sp/>y_train[i,<sp/>0]))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)]),</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sample<sp/>DataFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.DataFrame({</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/>x_train.flatten(),</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:<sp/>y_train.flatten(),</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB1&apos;</highlight><highlight class="normal">:<sp/>line_bundle_1_col.flatten(),</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB2&apos;</highlight><highlight class="normal">:<sp/>line_bundle_2_col.flatten(),</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Mass&apos;</highlight><highlight class="normal">:<sp/>z_train.flatten()</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_exists<sp/>=<sp/>os.path.isfile(filename)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>DataFrame<sp/>to<sp/>CSV<sp/>(or<sp/>create<sp/>a<sp/>new<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.to_csv(filename,<sp/>mode=</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>header=</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>file_exists,<sp/>index=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>data<sp/>to<sp/>CSV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>input<sp/>data<sp/>for<sp/>P2<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>np.array([sph.mass(x_train[i,<sp/>0],<sp/>y_train[i,<sp/>0])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(data_size)]),</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_train<sp/>=<sp/>z_train.reshape(-1,<sp/>1)<sp/><sp/></highlight><highlight class="comment">#<sp/>Converts<sp/>(1000,)<sp/>→<sp/>(1000,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Sample<sp/>DataFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df<sp/>=<sp/>pd.DataFrame({</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:<sp/>x_train.flatten(),</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:<sp/>y_train.flatten(),</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB1&apos;</highlight><highlight class="normal">:<sp/>line_bundle_1_col.flatten(),</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LB2&apos;</highlight><highlight class="normal">:<sp/>line_bundle_2_col.flatten(),</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Mass&apos;</highlight><highlight class="normal">:<sp/>z_train.flatten()</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_exists<sp/>=<sp/>os.path.isfile(filename)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>DataFrame<sp/>to<sp/>CSV<sp/>(or<sp/>create<sp/>a<sp/>new<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.to_csv(filename,<sp/>mode=</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/>header=</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>file_exists,<sp/>index=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)<sp/><sp/></highlight><highlight class="comment">#<sp/>Append<sp/>data<sp/>to<sp/>CSV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;Somehow<sp/>an<sp/>invalid<sp/>catagory<sp/>was<sp/>passed<sp/>to<sp/>generate_training_data_single_twist;<sp/>this<sp/>should<sp/>have<sp/>been<sp/>caught<sp/>earlier&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>lb_1_range<sp/>=<sp/>range(-1,<sp/>15+1)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>lb_2_range<sp/>=<sp/>range(-15,<sp/>15+1)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>lb1,<sp/>lb2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>itertools.product(lb_1_range,<sp/>lb_2_range):</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n\n\n\n---------------------------------------------&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&apos;Traning<sp/>model<sp/>for<sp/>discontinuities<sp/>of<sp/>Tw_{lb1}<sp/>O({lb2})&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;---------------------------------------------\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_model<sp/>=<sp/><ref refid="classsrc_1_1model_1_1_single_twist_model" kindref="compound">SingleTwistModel</ref>(line_bundle_1=lb1,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_bundle_2=lb2,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_size=25000,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;disc&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=-10,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_max=10,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min=0,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max=10)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_model.train(num_epochs=5000)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><sp/>os.path.abspath(os.path.join(os.path.dirname(__file__),<sp/>f</highlight><highlight class="stringliteral">&apos;../app/models/disc_K3_deg{1}_{lb1}_{lb2}.pth&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Saving<sp/>model<sp/>at<sp/>{filename}<sp/>.............&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st_model.save_model(filename)</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;Model<sp/>saved<sp/>successfully!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n\n\n\n---------------------------------------------&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>training<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>filename<sp/>=<sp/><sp/>os.path.abspath(os.path.join(os.path.dirname(__file__),<sp/>&apos;../data/training_data_K3.csv&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create_K3_training_data_single_twist(filename)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="src/model.py"/>
  </compounddef>
</doxygen>
