<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_projective_c_y_8py" kind="file" language="Python">
    <compoundname>ProjectiveCY.py</compoundname>
    <innerclass refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber" prot="public">src::ProjectiveCY::K3GeometricChamber</innerclass>
    <innernamespace refid="namespacesrc">src</innernamespace>
    <innernamespace refid="namespacesrc_1_1_projective_c_y">src::ProjectiveCY</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesrc_1_1_projective_c_y" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cmath</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>matplotlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>animation</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>matplotlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cm</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cmath</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.graph_objects<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>go</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceplotly_1_1graph__objs" kindref="compound">plotly.graph_objs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.utils</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numbers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Number</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.SphericalTwist<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SphericalTwist</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.CoherentSheaf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LineBundle</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber" kindref="compound">K3GeometricChamber</ref>():</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>represents<sp/>the<sp/>geometric<sp/>chamber<sp/>of<sp/>a<sp/>general<sp/>projective<sp/>K3<sp/>surface<sp/>of<sp/>picard<sp/>rank<sp/>1.<sp/>Since<sp/>the<sp/>geometric<sp/>chamber<sp/>consists<sp/>of<sp/>a<sp/>Cantor-set<sp/>of<sp/>walls<sp/>associated<sp/>to<sp/>the<sp/>spherical<sp/>vector<sp/>bundles<sp/>on<sp/>it,<sp/>there<sp/>is<sp/>no<sp/>accurate<sp/>way<sp/>to<sp/>simultaneously<sp/>represent<sp/>all<sp/>walls<sp/>at<sp/>once.<sp/>Thus,<sp/>this<sp/>class<sp/>provides<sp/>a<sp/>method<sp/>to<sp/>plot<sp/>such<sp/>walls<sp/>in<sp/>the<sp/>(α,β)<sp/>plane<sp/>up<sp/>to<sp/>some<sp/>accuracy<sp/>(i.e.<sp/>granularity).</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1aaad23c5efdf2a72fb851ddba4efde53e" kindref="member">__init__</ref>(self,<sp/>degree=1,<sp/>granularity=15):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>for<sp/>the<sp/>K3GeometricChamber<sp/>class.<sp/>This<sp/>class<sp/>represents<sp/>the<sp/>geometric<sp/>chamber<sp/>of<sp/>a<sp/>general<sp/>projective<sp/>K3<sp/>surface<sp/>of<sp/>picard<sp/>rank<sp/>1.<sp/>Since<sp/>the<sp/>geometric<sp/>chamber<sp/>consists<sp/>of<sp/>a<sp/>Cantor-set<sp/>of<sp/>walls<sp/>associated<sp/>to<sp/>the<sp/>spherical<sp/>vector<sp/>bundles<sp/>on<sp/>it,<sp/>there<sp/>is<sp/>no<sp/>accurate<sp/>way<sp/>to<sp/>simultaneously<sp/>represent<sp/>all<sp/>walls<sp/>at<sp/>once.<sp/>Thus,<sp/>this<sp/>class<sp/>provides<sp/>a<sp/>method<sp/>to<sp/>plot<sp/>such<sp/>walls<sp/>in<sp/>the<sp/>(α,β)<sp/>plane<sp/>up<sp/>to<sp/>some<sp/>accuracy<sp/>(i.e.<sp/>granularity).</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>walls<sp/>to<sp/>be<sp/>plotted<sp/>in<sp/>the<sp/>the<sp/>(α,β)<sp/>plane</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>degree<sp/>is<sp/>not<sp/>a<sp/>positive<sp/>integer</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree,<sp/>int):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Degree<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>degree<sp/>&lt;<sp/>1:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Degree<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a7b4aa8fe6cd0abb1ef8ba1a79b0c464f" kindref="member">degree</ref><sp/>=<sp/>degree<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a60be867150a669c555447d3b9f6be07b" kindref="member">granularity</ref><sp/>=<sp/>granularity<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1add32d6d1a97f246e8e6918eb847d6fea" kindref="member">create_mukai_vectors</ref>(self):</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>create<sp/>the<sp/>mukai<sp/>vectors<sp/>of<sp/>a<sp/>spherical<sp/>vector<sp/>bundle<sp/>on<sp/>a<sp/>K3<sp/>surface<sp/>of<sp/>degree<sp/>d.</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>mukai<sp/>vectors<sp/>to<sp/>be<sp/>computed.<sp/>This<sp/>roughly<sp/>indicates<sp/>how<sp/>close<sp/>the<sp/>mukai<sp/>vectors<sp/>should<sp/>get<sp/>to<sp/>integer<sp/>points<sp/>on<sp/>the<sp/>real<sp/>axis</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>list<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>representing<sp/>the<sp/>mukai<sp/>vectors<sp/>of<sp/>the<sp/>spherical<sp/>vector<sp/>bundles</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mukai_vectors<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a60be867150a669c555447d3b9f6be07b" kindref="member">granularity</ref>,<sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a60be867150a669c555447d3b9f6be07b" kindref="member">granularity</ref>):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerator<sp/>=<sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a7b4aa8fe6cd0abb1ef8ba1a79b0c464f" kindref="member">degree</ref>*n**2<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divisors<sp/>=<sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1adcc689c9e14e3e110eeeee6393d03db1" kindref="member">_npDivs</ref>(numerator)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>div<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>divisors:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>div</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>numerator<sp/>//<sp/>div</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mukai_vectors.append((r,<sp/>n,<sp/>s))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mukai_vectors</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a741e4fb172003d853178d82f95501a54" kindref="member">plot_alpha_beta_plane</ref>(self,<sp/>return_json=False):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>plot<sp/>the<sp/>walls<sp/>of<sp/>the<sp/>geometric<sp/>chamber<sp/>of<sp/>a<sp/>K3<sp/>surface<sp/>in<sp/>the<sp/>(α,β)<sp/>plane.<sp/>As<sp/>this<sp/>method<sp/>is<sp/>quite<sp/>computationally<sp/>intensive<sp/>at<sp/>the<sp/>standard<sp/>granularity<sp/>of<sp/>15,<sp/>we<sp/>only<sp/>plot<sp/>the<sp/>walls<sp/>between<sp/>-1.6<sp/>and<sp/>1.6<sp/>in<sp/>the<sp/>α<sp/>direction<sp/>and<sp/>between<sp/>0<sp/>and<sp/>√d<sp/>in<sp/>the<sp/>β<sp/>direction.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>return_json<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string<sp/>or<sp/>displayed<sp/>in<sp/>the<sp/>browser</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mukai_vectors<sp/>=<sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1add32d6d1a97f246e8e6918eb847d6fea" kindref="member">create_mukai_vectors</ref>()</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r,<sp/>l,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mukai_vectors:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,<sp/>beta<sp/>=<sp/>self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a13de70e3968963ac29cc7c07009cf3c3" kindref="member">_convert_to_alpha_beta</ref>(r,<sp/>l,<sp/>s)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals.append(alpha)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(beta)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals.append(alpha+1)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(beta)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals.append(alpha-1)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(beta)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter(x=x_vals,<sp/>y=y_vals,<sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Add<sp/>vertical<sp/>lines<sp/>from<sp/>x-axis<sp/>to<sp/>each<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x_val,<sp/>y_val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(x_vals,<sp/>y_vals):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_shape(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=</highlight><highlight class="stringliteral">&quot;line&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x0=x_val,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y0=0,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1=x_val,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y1=y_val,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&quot;LightSeaGreen&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width=1</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_layout(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&quot;Mukai<sp/>Vectors&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis_title=</highlight><highlight class="stringliteral">&quot;α&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis_title=</highlight><highlight class="stringliteral">&quot;β&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_xaxes(range=[-1.6,<sp/>1.6])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_yaxes(range=[-0.2,<sp/>math.sqrt(self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a7b4aa8fe6cd0abb1ef8ba1a79b0c464f" kindref="member">degree</ref>)+0.2])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>return_json:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.dumps(fig,<sp/>cls=plotly.utils.PlotlyJSONEncoder)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1adcc689c9e14e3e110eeeee6393d03db1" kindref="member">_npDivs</ref>(self,<sp/>N):</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>divisors<sp/>of<sp/>a<sp/>number<sp/>N.</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>N<sp/>The<sp/>number<sp/>whose<sp/>divisors<sp/>are<sp/>to<sp/>be<sp/>computed</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>numpy.ndarray<sp/>An<sp/>array<sp/>of<sp/>divisors<sp/>of<sp/>N</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divs<sp/>=<sp/>np.arange(1,int(N**0.5)+1)<sp/><sp/></highlight><highlight class="comment">#<sp/>potential<sp/>divisors<sp/>up<sp/>to<sp/>√N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divs<sp/>=<sp/>divs[N<sp/>%<sp/>divs==0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>divisors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>N//divs[::-1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>complement<sp/>quotients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>np.concatenate((divs,comp[divs[-1]==comp[0]:]))<sp/></highlight><highlight class="comment">#<sp/>combined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a13de70e3968963ac29cc7c07009cf3c3" kindref="member">_convert_to_alpha_beta</ref>(self,<sp/>r,<sp/>l,<sp/>s):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>coordinates<sp/>of<sp/>a<sp/>hole<sp/>in<sp/>the<sp/>(α,β)<sp/>plane<sp/>corresponding<sp/>to<sp/>a<sp/>mukai<sp/>vector.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Suppose<sp/>(r,<sp/>lH,<sp/>s)<sp/>is<sp/>the<sp/>mukai<sp/>vector<sp/>of<sp/>a<sp/>spherical<sp/>vector<sp/>bundle<sp/>on<sp/>a<sp/>degree<sp/>d<sp/>K3<sp/>surface<sp/>(H^2<sp/>=<sp/>2d).<sp/>Then</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>dl^2<sp/>-<sp/>rs<sp/>=<sp/>-1.<sp/>For<sp/>a<sp/>corresponding<sp/>hole<sp/>in<sp/>the<sp/>(α,β)<sp/>plane,<sp/>we<sp/>must<sp/>have<sp/>the<sp/>real<sp/>and<sp/>imaginary<sp/>part<sp/>of<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>&lt;<sp/>exp(αΗ<sp/>+<sp/>ι<sp/>βΗ)<sp/>,<sp/>(r,<sp/>lH,<sp/>s)<sp/>&gt;<sp/>vanish.<sp/>This<sp/>gives</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>=<sp/>&lt;(1,<sp/>αH,<sp/>(α^2<sp/>-<sp/>β^2)d),<sp/>(r,<sp/>lH,<sp/>s)&gt;<sp/>=<sp/>2dal<sp/>-<sp/>s<sp/>-<sp/>rd(α^2<sp/>-<sp/>β^2)</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>=<sp/>&lt;(0,<sp/>βΗ,<sp/>2αβd),<sp/>(r,<sp/>lH,<sp/>s)&gt;<sp/>=<sp/>2βdl<sp/>-<sp/>2rdαβ<sp/>=<sp/>2dβ(l<sp/>-<sp/>rα)</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>second<sp/>equation<sp/>gives<sp/>β<sp/>=<sp/>0<sp/>or<sp/>l<sp/>=<sp/>rα.<sp/>Since<sp/>βΗ<sp/>is<sp/>necessarily<sp/>ample,<sp/>we<sp/>must<sp/>have<sp/>β<sp/>&gt;<sp/>0.</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Therefore,<sp/>l<sp/>=<sp/>rα.<sp/>Substituting<sp/>into<sp/>the<sp/>first<sp/>equation<sp/>simplifies<sp/>to</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dl^2<sp/>-<sp/>rs<sp/>+<sp/>dr^2<sp/>β^2<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Using<sp/>dl^2<sp/>-<sp/>rs<sp/>=<sp/>-1,<sp/>we<sp/>find<sp/>that<sp/>β<sp/>=<sp/>1/r√d.<sp/></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>r<sp/>The<sp/>first<sp/>component<sp/>of<sp/>the<sp/>mukai<sp/>vector</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>l<sp/>The<sp/>second<sp/>component<sp/>of<sp/>the<sp/>mukai<sp/>vector</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>s<sp/>The<sp/>third<sp/>component<sp/>of<sp/>the<sp/>mukai<sp/>vector</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>The<sp/>coordinates<sp/>of<sp/>the<sp/>hole<sp/>in<sp/>the<sp/>(α,β)<sp/>plane</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>float(l)<sp/>/<sp/>r</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>float(1<sp/>/<sp/>r*math.sqrt(self.<ref refid="classsrc_1_1_projective_c_y_1_1_k3_geometric_chamber_1a7b4aa8fe6cd0abb1ef8ba1a79b0c464f" kindref="member">degree</ref>))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha,<sp/>beta</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a39d571956330fa6f279661f1b91ba167" kindref="member">_calcZ1</ref>(x,<sp/>y,<sp/>k,<sp/>n):</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>a<sp/>single<sp/>component<sp/>of<sp/>the<sp/>complex<sp/>hypersurface<sp/>in<sp/>the<sp/>(x,y)<sp/>plane.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x<sp/>The<sp/>x-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y<sp/>The<sp/>y-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>k<sp/>The<sp/>index<sp/>of<sp/>the<sp/>component</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>n<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>hypersurface</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>complex<sp/>The<sp/>k-th<sp/>component<sp/>of<sp/>the<sp/>hypersurface<sp/>at<sp/>the<sp/>point<sp/>(x,y)</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmath.exp(1j*(2*cmath.pi*k/n))<sp/>*<sp/>(cmath.cos(x+y*1j)**(2/n))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a2db5a8aacda64885e275d3f7793e6fa7" kindref="member">_calcZ2</ref>(x,<sp/>y,<sp/>k,<sp/>n):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Computes<sp/>a<sp/>single<sp/>component<sp/>of<sp/>the<sp/>complex<sp/>hypersurface<sp/>in<sp/>the<sp/>(x,y)<sp/>plane.</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x<sp/>The<sp/>x-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y<sp/>The<sp/>y-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>k<sp/>The<sp/>index<sp/>of<sp/>the<sp/>component</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>n<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>hypersurface</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>complex<sp/>The<sp/>k-th<sp/>component<sp/>of<sp/>the<sp/>hypersurface<sp/>at<sp/>the<sp/>point<sp/>(x,y)</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmath.exp(1j*(2*cmath.pi*k/n))<sp/>*<sp/>(cmath.sin(x+y*1j)**(2/n))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a331c9adbbb19c1823efa42e532207e3d" kindref="member">_calcZ1Real</ref>(x,<sp/>y,<sp/>k,<sp/>n):</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespacesrc_1_1_projective_c_y_1a39d571956330fa6f279661f1b91ba167" kindref="member">_calcZ1</ref>(x,<sp/>y,<sp/>k,<sp/>n)).real</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a1e077488e7376b64e1db5fd401aab0ef" kindref="member">_calcZ2Real</ref>(x,<sp/>y,<sp/>k,<sp/>n):</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespacesrc_1_1_projective_c_y_1a2db5a8aacda64885e275d3f7793e6fa7" kindref="member">_calcZ2</ref>(x,<sp/>y,<sp/>k,<sp/>n)).real</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a94b6a7b70679ed56fbbaaeda4dc757aa" kindref="member">_calcZ</ref>(x,<sp/>y,<sp/>k1_,<sp/>k2_,<sp/>n,<sp/>a_):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>z1<sp/>=<sp/><ref refid="namespacesrc_1_1_projective_c_y_1a39d571956330fa6f279661f1b91ba167" kindref="member">_calcZ1</ref>(x,<sp/>y,<sp/>k1_,<sp/>n)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>z2<sp/>=<sp/><ref refid="namespacesrc_1_1_projective_c_y_1a2db5a8aacda64885e275d3f7793e6fa7" kindref="member">_calcZ2</ref>(x,<sp/>y,<sp/>k2_,<sp/>n)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z1.imag<sp/>*<sp/>math.cos(a_)<sp/>+<sp/>z2.imag*math.sin(a_)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a00145c543b8939445e77cf8c1f0dd8d1" kindref="member">_calcZ_alt</ref>(x,y,k1_,<sp/>k2_,<sp/>n,<sp/>a_):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>z1<sp/>=<sp/><ref refid="namespacesrc_1_1_projective_c_y_1a39d571956330fa6f279661f1b91ba167" kindref="member">_calcZ1</ref>(x,<sp/>y,<sp/>k1_,<sp/>n)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>z2<sp/>=<sp/><ref refid="namespacesrc_1_1_projective_c_y_1a2db5a8aacda64885e275d3f7793e6fa7" kindref="member">_calcZ2</ref>(x,<sp/>y,<sp/>k2_,<sp/>n)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z1.imag<sp/>*<sp/>math.sin(a_)<sp/>-<sp/>z2.imag*math.cos(a_)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1aa28a5c422a4962906cbfa11eb9d6cbd8" kindref="member">complex_hypersurface_matplot_animation_ex1</ref>(degree,<sp/>filename=&apos;hypersurf&apos;,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_gif=False,<sp/>to_html=False,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_granularity=30,<sp/>x_granularity=30,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nframes=100,<sp/>t_interval=175):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Example<sp/>of<sp/>a<sp/>method<sp/>to<sp/>plot<sp/>a<sp/>complex<sp/>degree<sp/>d<sp/>hypersurface<sp/>using<sp/>matplotlib,<sp/>and<sp/>save<sp/>the<sp/>animation<sp/>either</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>an<sp/>HTML<sp/>&lt;video&gt;<sp/>tag<sp/>or<sp/>as<sp/>a<sp/>GIF<sp/>file.<sp/>The<sp/>hypersurface<sp/>is<sp/>given<sp/>by<sp/>the<sp/>equation</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>z0^d<sp/>+<sp/>z1^d<sp/>+<sp/>...<sp/>+<sp/>zn^d<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>is<sp/>restricted<sp/>to<sp/>the<sp/>region<sp/>0<sp/>&lt;=<sp/>z0,<sp/>z1<sp/>&lt;=<sp/>pi/2.<sp/>The<sp/>plot<sp/>is<sp/>done<sp/>using<sp/>Matplotlib.</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>hypersurface</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>save<sp/>the<sp/>plot<sp/>to</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>to_gif<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>saved<sp/>as<sp/>a<sp/>GIF<sp/>file</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>to_html<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>saved<sp/>as<sp/>an<sp/>HTML<sp/>file</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>y_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>y-axis</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>x_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>x-axis</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>nframes<sp/>The<sp/>number<sp/>of<sp/>frames<sp/>in<sp/>the<sp/>animation</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>t_interval:<sp/>The<sp/>time<sp/>interval<sp/>between<sp/>frames</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>both<sp/>to_gif<sp/>and<sp/>to_html<sp/>are<sp/>both<sp/>simultaneously<sp/>set<sp/>to<sp/>True</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>to_gif<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>to_html:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;Cannot<sp/>make<sp/>{filename}<sp/>both<sp/>a<sp/>.gif<sp/>and<sp/>.html<sp/>file.<sp/>One<sp/>value<sp/>must<sp/>be<sp/>set<sp/>False.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>param<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(0,<sp/>math.pi/2,<sp/>x_granularity)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.linspace(-math.pi/2,<sp/>math.pi/2,<sp/>y_granularity)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/>y<sp/>=<sp/>np.meshgrid(x,<sp/>y)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>plt.figure(dpi=100,<sp/>figsize=(10,<sp/>5))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>fig.add_subplot(projection=</highlight><highlight class="stringliteral">&apos;3d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">update(t):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.cla()</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(degree):</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(degree):</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>np.frompyfunc(_calcZ1Real,<sp/>4,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>degree).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>np.frompyfunc(_calcZ2Real,<sp/>4,<sp/>1)(x,<sp/>y,<sp/>k2,<sp/>degree).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z1<sp/>=<sp/>np.frompyfunc(_calcZ,<sp/>6,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>k2,<sp/>degree,<sp/>t/10).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z2<sp/>=<sp/>np.frompyfunc(_calcZ_alt,<sp/>6,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>k2,<sp/>degree,<sp/>t/10).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.plot_surface(X,<sp/>Y,<sp/>Z2,<sp/>alpha=0.8,<sp/>cmap=cm.afmhot)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.set_xlim(-2,<sp/>2)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.set_ylim(-2,<sp/>2)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax.set_zlim(-2,<sp/>2)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ani<sp/>=<sp/>animation.FuncAnimation(fig<sp/>=<sp/>fig,<sp/>func<sp/>=<sp/>update,<sp/>frames<sp/>=<sp/>nframes,<sp/>interval<sp/>=<sp/>t_interval)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>to_gif:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writergif<sp/>=<sp/>animation.PillowWriter(fps=30)<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ani.save(filename,<sp/>writer=writergif)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>to_html:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(filename,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(ani.to_html5_video(),<sp/>file=f)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plt.show()<sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1aeda1da0b5fd93a28cf76877ec9b091d8" kindref="member">complex_hypersurface_plotly_ex1</ref>(degree,<sp/>filename=&quot;hypersurface.html&quot;,<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_html=False,<sp/>return_json=False,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_granularity=30,<sp/>x_granularity=30):</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>First<sp/>static<sp/>example<sp/>for<sp/>plotting<sp/>a<sp/>degree<sp/>d<sp/>complex<sp/>hypersurface;<sp/>specifically,<sp/>this<sp/>just<sp/>restricts<sp/>the<sp/>graph<sp/>of</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>z0^d<sp/>+<sp/>z1^d<sp/>+<sp/>...<sp/>+<sp/>zn^d<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>region<sp/>0<sp/>&lt;=<sp/>z0,<sp/>z1<sp/>&lt;=<sp/>pi/2.<sp/>The<sp/>plot<sp/>is<sp/>done<sp/>using<sp/>Plotly.</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>hypersurface</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>filename<sp/>The<sp/>name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>save<sp/>the<sp/>plot<sp/>to</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>to_html<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>saved<sp/>to<sp/>an<sp/>HTML<sp/>file</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>return_json<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>y_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>y-axis</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>x_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>x-axis</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>np.linspace(0,<sp/>math.pi/2,<sp/>x_granularity)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>np.linspace(-math.pi/2,<sp/>math.pi/2,<sp/>y_granularity)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>x,<sp/>y<sp/>=<sp/>np.meshgrid(x,<sp/>y)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure()</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k1<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(degree):</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k2<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(degree):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>np.frompyfunc(_calcZ1Real,<sp/>4,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>degree).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>np.frompyfunc(_calcZ2Real,<sp/>4,<sp/>1)(x,<sp/>y,<sp/>k2,<sp/>degree).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z1<sp/>=<sp/>np.frompyfunc(_calcZ,<sp/>6,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>k2,<sp/>degree,<sp/>0).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z2<sp/>=<sp/>np.frompyfunc(_calcZ_alt,<sp/>6,<sp/>1)(x,<sp/>y,<sp/>k1,<sp/>k2,<sp/>degree,<sp/>0).astype(</highlight><highlight class="stringliteral">&apos;float32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Surface(x=X,<sp/>y=Y,<sp/>z=Z1,<sp/>showscale=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;blues&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>to_html:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.write_html(filename,<sp/>full_html=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>return_json:</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.dumps(fig,<sp/>cls=plotly.utils.PlotlyJSONEncoder)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_projective_c_y_1a05fbaf86af1a8953eeefb5599d6cb5fd" kindref="member">find_discontinuities_disc_Lapl_in_single_twist_mass_K3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>degree=1,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot=False,<sp/>colorscale=&apos;plasma&apos;,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_min=-5,<sp/>x_max=5,<sp/>x_granularity=0.1,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min=0,<sp/>y_max=5,<sp/>y_granularity=0.05):</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>find<sp/>the<sp/>discontinuities<sp/>in<sp/>the<sp/>mass<sp/>of<sp/>a<sp/>single<sp/>spherical<sp/>twist<sp/>on<sp/>a<sp/>K3<sp/>surface<sp/>using<sp/>the<sp/>discretized</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Laplacian.<sp/>The<sp/>method<sp/>computes<sp/>the<sp/>discretized<sp/>Laplacian<sp/>values<sp/>at<sp/>each<sp/>point<sp/>in<sp/>the<sp/>(x,y)<sp/>plane,<sp/>and<sp/>then</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>computes<sp/>the<sp/>average<sp/>and<sp/>standard<sp/>deviation<sp/>of<sp/>the<sp/>discretized<sp/>Laplacian<sp/>values.<sp/>The<sp/>method<sp/>then<sp/>highlights</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>points<sp/>in<sp/>the<sp/>(x,y)<sp/>plane<sp/>that<sp/>have<sp/>a<sp/>discretized<sp/>Laplacian<sp/>value<sp/>greater<sp/>than<sp/>the<sp/>average<sp/>plus<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>deviation.</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>line_bundle_1<sp/>The<sp/>line<sp/>bundle<sp/>of<sp/>the<sp/>object<sp/>being<sp/>twisted</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>line_bundle_2<sp/>The<sp/>line<sp/>bundle<sp/>of<sp/>the<sp/>object<sp/>being<sp/>twisted<sp/>by</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>plot<sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>the<sp/>discontinuities<sp/>should<sp/>be<sp/>plotted</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>colorscale<sp/>The<sp/>colorscale<sp/>to<sp/>be<sp/>used<sp/>in<sp/>the<sp/>plot</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x_min<sp/>The<sp/>minimum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>plot</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x_max<sp/>The<sp/>maximum<sp/>x<sp/>value<sp/>for<sp/>the<sp/>plot</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>x-axis</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y_min<sp/>The<sp/>minimum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>plot</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y_max<sp/>The<sp/>maximum<sp/>y<sp/>value<sp/>for<sp/>the<sp/>plot</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y_granularity<sp/>The<sp/>granularity<sp/>of<sp/>the<sp/>y-axis</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>input<sp/>data<sp/>is<sp/>not<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>list<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>representing<sp/>the<sp/>discontinuities<sp/>in<sp/>the<sp/>mass<sp/>of<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>int)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>int):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>integers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree,<sp/>int):</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Degree<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(plot,<sp/>bool):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Plot<sp/>must<sp/>be<sp/>a<sp/>boolean&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(x_granularity,<sp/>Number)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(y_granularity,<sp/>Number):</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Granularity<sp/>must<sp/>be<sp/>a<sp/>number&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y_granularity<sp/>&lt;=<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x_granularity<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Granularity<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>number&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y_min<sp/>-<sp/>y_granularity<sp/>&lt;=0:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We<sp/>will<sp/>ultimately<sp/>need<sp/>to<sp/>compute<sp/>the<sp/>neighbors<sp/>for<sp/>the<sp/>discrete<sp/>Laplacian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>y_granularity</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>evenly<sp/>over<sp/>numpy<sp/>aregion)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.arange(x_min,<sp/>x_max,<sp/>x_granularity)<sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.arange(y_min,<sp/>y_max,<sp/>y_granularity)<sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array<sp/>to<sp/>be<sp/>1<sp/>dimensional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>len(np.arange(y_min,<sp/>y_max,<sp/>y_granularity)))<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>y_vals_len<sp/>number<sp/>of<sp/>times<sp/>to<sp/>make<sp/>a<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>sph<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_2,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree=degree)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_disc_Lapl(x,<sp/>y,<sp/>degree):</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sph.mass(x<sp/>+<sp/>x_granularity,<sp/>y,<sp/>degree)<sp/>+<sp/>sph.mass(x<sp/>-<sp/>x_granularity,<sp/>y,<sp/>degree)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>+<sp/>y_granularity,<sp/>degree)<sp/>+<sp/>sph.mass(x,<sp/>y<sp/>-<sp/>y_granularity,<sp/>degree)<sp/>-<sp/>4*sph.mass(x,<sp/>y,<sp/>degree)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>disc_vals<sp/>=<sp/>np.array([_disc_Lapl(x,<sp/>y,<sp/>degree)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x,<sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(x_vals,<sp/>y_vals)])</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>disc_vals_mean<sp/>=<sp/>np.mean(disc_vals)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>disc_vals_std<sp/>=<sp/>np.std(disc_vals)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>discontinuities<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>disc_val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(x_vals,<sp/>y_vals,<sp/>disc_vals):</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Our<sp/>threshold<sp/>will<sp/>be<sp/>1<sp/>standard<sp/>deviation<sp/>above<sp/>the<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>abs(disc_val<sp/>-<sp/>disc_vals_mean)<sp/>&gt;<sp/>disc_vals_std:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discontinuities.append((x,<sp/>y))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>plot:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colors<sp/>=<sp/>np.abs(disc_vals<sp/>-<sp/>disc_vals_mean)<sp/><sp/></highlight><highlight class="comment">#<sp/>Highlight<sp/>stronger<sp/>discontinuities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=disc_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=colors,<sp/>colorscale=colorscale))])</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_layout(</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autosize=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin=dict(l=0,<sp/>r=0,<sp/>b=0,<sp/>t=30),</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene=dict(</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Changes<sp/>the<sp/>3D<sp/>plot<sp/>background<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,),</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>discontinuities</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>K3<sp/>=<sp/>K3GeometricChamber(degree=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>complex_hypersurface_matplot_animation_ex1(filename=&apos;CY3fold.gif&apos;,<sp/>degree=5,<sp/>to_gif=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>complex_hypersurface_plotly_ex1(degree=4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>y_granularity=0.05</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>x_granularity=0.1</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>discontinuities,<sp/>colors<sp/>=<sp/>find_discontinuities_std_dev_in_single_twist_mass_K3(1,<sp/>2,<sp/>degree=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>sph<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(1,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(2,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree=1)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>a<sp/><sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.arange(-5,<sp/>5,<sp/>x_granularity)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-5<sp/>to<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.arange(0.1,<sp/>5,<sp/>y_granularity)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals_len<sp/>=<sp/>len(y_range)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>y_vals_len)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>masses<sp/>=<sp/>np.array([sph.mass(x,<sp/>y,<sp/>1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x,<sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(x_vals,<sp/>y_vals)])</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=masses,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=masses,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal"><sp/>))])</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.update_layout(</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>autosize=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin=dict(l=0,<sp/>r=0,<sp/>b=0,<sp/>t=30),</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scene=dict(</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">#<sp/>Changes<sp/>the<sp/>3D<sp/>plot<sp/>background<sp/>,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zaxis<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground<sp/>=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=</highlight><highlight class="stringliteral">&quot;white&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>discont<sp/>=<sp/><ref refid="namespacesrc_1_1_projective_c_y_1a05fbaf86af1a8953eeefb5599d6cb5fd" kindref="member">find_discontinuities_disc_Lapl_in_single_twist_mass_K3</ref>(1,<sp/>2,<sp/>degree=1,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plot=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;Viridis&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>print(discont)</highlight></codeline>
    </programlisting>
    <location file="src/ProjectiveCY.py"/>
  </compounddef>
</doxygen>
