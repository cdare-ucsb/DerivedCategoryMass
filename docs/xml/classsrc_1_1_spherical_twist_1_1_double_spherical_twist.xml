<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" kind="class" language="Python" prot="public">
    <compoundname>src::SphericalTwist::DoubleSphericalTwist</compoundname>
    <basecompoundref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" prot="public" virt="non-virtual">src.DerivedCategoryObject.DerivedCategoryObject</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist::line_bundle_1</definition>
        <argsstring></argsstring>
        <name>line_bundle_1</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.line_bundle_1</qualifiedname>
        <initializer>=  line_bundle_1</initializer>
        <briefdescription>
<para>The last line bundle twisted around; i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>O(a) where we are computing Tw_a Tw_b O(c) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1060" column="1" bodyfile="src/SphericalTwist.py" bodystart="1060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist::line_bundle_2</definition>
        <argsstring></argsstring>
        <name>line_bundle_2</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.line_bundle_2</qualifiedname>
        <initializer>=  line_bundle_2</initializer>
        <briefdescription>
<para>The first line bundle twisted around; i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>O(b) where we are computing Tw_a Tw_b O(c) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1062" column="1" bodyfile="src/SphericalTwist.py" bodystart="1062" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist::line_bundle_3</definition>
        <argsstring></argsstring>
        <name>line_bundle_3</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.line_bundle_3</qualifiedname>
        <initializer>=  line_bundle_3</initializer>
        <briefdescription>
<para>The line bundle we are applying the spherical twist to; i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>O(c) where we are computing Tw_a Tw_b O(c) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1064" column="1" bodyfile="src/SphericalTwist.py" bodystart="1064" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist::degree</definition>
        <argsstring></argsstring>
        <name>degree</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.degree</qualifiedname>
        <initializer>=  degree</initializer>
        <briefdescription>
<para>An optional argument for the degree of the K3 surface, if applicable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1068" column="1" bodyfile="src/SphericalTwist.py" bodystart="1068" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist::defining_triangle</definition>
        <argsstring></argsstring>
        <name>defining_triangle</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.defining_triangle</qualifiedname>
        <initializer>=  self._sph_twist_DoubleLineBundles(<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref>, <ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref>, <ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref>)</initializer>
        <briefdescription>
<para>The distinguished triangle of the double spherical twist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1070" column="1" bodyfile="src/SphericalTwist.py" bodystart="1070" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ade9c9fe0c4c8d3bdd3edfff5d59610ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.__init__</definition>
        <argsstring>(self, line_bundle_1, line_bundle_2, line_bundle_3, degree=1)</argsstring>
        <name>__init__</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref></type>
          <defname>line_bundle_1</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref></type>
          <defname>line_bundle_2</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref></type>
          <defname>line_bundle_3</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref></type>
          <defname>degree</defname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Initialize an instance of <ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" kindref="compound">DoubleSphericalTwist</ref> with the specified line bundles. </para>
        </briefdescription>
        <detaileddescription>
<para>The spherical twist is defined as the cone of the evaluation morphism <verbatim>Hom(O(a), Tw_b O(c)) âŠ— O(a) ----&gt;  Tw_b O(c) ----&gt; Tw_a Tw_b O(c)
</verbatim></para>
<para>where O(a), O(b), and O(c) denote line bundles. The double spherical twist is represented as a distinguished triangle in the derived category of coherent sheaves.</para>
<para>Several helper methods are used to compute the dimensions of the Hom spaces between the pushforwards of the line bundles, and then to construct the distinguished triangle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LineBundleline_bundle_1</parametername>
</parameternamelist>
<parameterdescription>
<para>The last line bundle twisted around; i.e. O(a) where we are computing Tw_a Tw_b O(c) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>line_bundle_2 The first line bundle twisted around; i.e. O(b) where we are computing Tw_a Tw_b O(c) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>line_bundle_3 The line bundle we are applying the spherical twist to; i.e. O(c) where we are computing Tw_a Tw_b O(c) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>degree An optional argument for the degree of the variety, which is relevant to the dimension of the derived RHom space for K3 surfaces of picard rank 1. This does not affect the P1 or P2 implementations. Default is 1.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If line_bundle_1, line_bundle_2, or line_bundle_3 are not instances of <ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the line bundles are not defined on the same catagory </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1025" column="1" bodyfile="src/SphericalTwist.py" bodystart="1025" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ab9e9e5ae6673b64365efe14c77bab864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.chernCharacter</definition>
        <argsstring>(self)</argsstring>
        <name>chernCharacter</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.chernCharacter</qualifiedname>
        <reimplements refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937">chernCharacter</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Method to compute the Chern character of the double spherical twist. </para>
        </briefdescription>
        <detaileddescription>
<para>The Chern character of the double spherical twist is the Chern character of the third object in the distinguished triangle.</para>
<para><simplesect kind="return"><para><ref refid="namespacesrc_1_1_chern_character" kindref="compound">ChernCharacter</ref> The Chern Character of the double spherical twist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1128" column="1" bodyfile="src/SphericalTwist.py" bodystart="1128" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a68d54bee26b992863d77725861e0ec2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.central_charge</definition>
        <argsstring>(self, *args)</argsstring>
        <name>central_charge</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.central_charge</qualifiedname>
        <reimplements refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a181bcb14152a914997c7990b33b51c18">central_charge</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Method to compute the central charge of the spherical twist. </para>
        </briefdescription>
        <detaileddescription>
<para>The central charge of the spherical twist is the central charge of the third object in the distinguished triangle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters for the stability condition. The number of parameters depends on the catagory of the object For P1, this is a single complex number. For P2, this is two real numbers. For K3, this is two real numbers and an integer representing the degree of the K3 surface.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>complex The central charge of the spherical twist as a complex number</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the args are not of the correct type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of args is incorrect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NotImplementedError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the catagory of the object is not P1, P2, or K3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1139" column="1" bodyfile="src/SphericalTwist.py" bodystart="1139" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a6cc185f90c2474199cc64957beb5f2bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.__str__</definition>
        <argsstring>(self)</argsstring>
        <name>__str__</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.__str__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Returns a string representation of the spherical twist by printing the defining triangle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>str A string representation of the spherical twist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1201" column="1" bodyfile="src/SphericalTwist.py" bodystart="1201" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4d600ef4b8ee2b4ca1473c15ce61c177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.secondary_canonical_triangle</definition>
        <argsstring>(self)</argsstring>
        <name>secondary_canonical_triangle</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.secondary_canonical_triangle</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Method to compute the secondary canonical triangle of the spherical twist. </para>
        </briefdescription>
        <detaileddescription>
<para>The secondary canonical triangle is obtained by applying Tw_a to the defining triangle of Tw_b O(c); specifically, this gives</para>
<para>Tw_a (Hom(O(b), O(c)) âŠ— O(b)) ----&gt; Tw_a O(c) ----&gt; Tw_a Tw_b O(c)</para>
<para><simplesect kind="return"><para><ref refid="namespacesrc_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref> The secondary canonical triangle of the spherical twist </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1210" column="1" bodyfile="src/SphericalTwist.py" bodystart="1210" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1511075ab30c69c00130bc3e3b1820fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.is_semistable</definition>
        <argsstring>(self, *args, logging=False, log_file=None)</argsstring>
        <name>is_semistable</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.is_semistable</qualifiedname>
        <reimplements refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a95bc29833249e58a920c3454110125d2">is_semistable</reimplements>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <param>
          <type>logging</type>
          <defname>logging</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>log_file</type>
          <defname>log_file</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>Method to check if the double spherical twist is semistable. </para>
        </briefdescription>
        <detaileddescription>
<para>The double spherical twist is semistable if the Harder-Narasimhan factorization is trivial.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>args The parameters for the stability condition. The number of parameters depends on the catagory of the object For P1, this is a single complex number. For P2, this is two real numbers. For K3, this is two real numbers and an integer representing the degree of the K3 surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>logging A boolean flag to indicate whether to log the Harder-Narasimhan factors that caused the object to be unstable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>log_file The file to log the Harder-Narasimhan factors that caused the object to be unstable</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the double spherical twist is semistable, False otherwise</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the args are not of the correct type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of args is incorrect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NotImplementedError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the catagory of the object is not P1, P2, or K3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1246" column="1" bodyfile="src/SphericalTwist.py" bodystart="1246" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4daf8f6e1a2470c949ac3e49ca099977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.mass</definition>
        <argsstring>(self, *args, logging=False, log_file=None)</argsstring>
        <name>mass</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.mass</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <param>
          <type>logging</type>
          <defname>logging</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>log_file</type>
          <defname>log_file</defname>
          <defval>None</defval>
        </param>
        <briefdescription>
<para>The mass of the double spherical twist is the sum of the masses of the Harder-Narasimhan factors; the Harder-Narasimhan factors are assumed to come from either the defining triangle or secondary canonical triangle. </para>
        </briefdescription>
        <detaileddescription>
<para>The mass of the double spherical twist is computed by first computing the Harder-Narasimhan factors of the defining triangle, and then the secondary canonical triangle.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>args The parameters for the stability condition. The number of parameters depends on the catagory of the object For P1, this is a single complex number. For P2, this is two real numbers. For K3, this is two real numbers and an integer representing the degree of the K3 surface. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>logging A boolean flag to indicate whether to log the Harder-Narasimhan factors that caused the object to be unstable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>log_file The file to log the Harder-Narasimhan factors that caused the object to be unstable</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The mass of the double spherical twist</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the args are not of the correct type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of args is incorrect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NotImplementedError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the catagory of the object is not P1, P2, or K3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1299" column="1" bodyfile="src/SphericalTwist.py" bodystart="1299" bodyend="1365"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ae8b0a91cede767ce6188b18686b431c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist.get_HN_factors</definition>
        <argsstring>(self, *args)</argsstring>
        <name>get_HN_factors</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist.get_HN_factors</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>*</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>This is the crux of the <ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" kindref="compound">DoubleSphericalTwist</ref> class, where we compute the Harder-Narasimhan factors of the double spherical twist. </para>
        </briefdescription>
        <detaileddescription>
<para>A signficiant assumption (CONJECTURAL) that we make is that the Harder-Narasimhan filtration must arise from the defining triangle or the secondary canonical triangle. This is not always the case, but we have not yet implemented a general method to compute the HN factors in all cases.</para>
<para>This method works by first examining the two edge cases for the defining triangle: if the largest phase of the subobject is less than the smallest phase of the quotient, then we assume the object is stable (CONJECTURAL). If the smallest phase of the subobject is larger than the largest phase of the quotient, then we know for a fact (by BDL) that the Harder-Narasimhan filtration can be computed by concatenating the HN factors of the subobject and quotient. If neither of these cases hold, we move on to the second canonical triangle and apply a similar logic.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tuple</parametername>
</parameternamelist>
<parameterdescription>
<para>args The parameters for the stability condition. The number of parameters depends on the catagory of the object For P1, this is a single complex number. For P2, this is two real numbers. For K3, this is two real numbers and an integer representing the degree of the K3 surface.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>list A list of tuples where the first element is a <ref refid="namespacesrc_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref> and the second element is a float representing the phase of the object. The list is always returned in such a way that the largest phase HN factor is first and smallest is last.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the args are not of the correct type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the number of args is incorrect </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NotImplementedError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the catagory of the object is not P1, P2, or K3 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1366" column="1" bodyfile="src/SphericalTwist.py" bodystart="1366" bodyend="1560"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a12e2989157e1bed9d0bd02156a5fe811" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.SphericalTwist.DoubleSphericalTwist._sph_twist_DoubleLineBundles</definition>
        <argsstring>(self, line_bundle_1, line_bundle_2, line_bundle_3)</argsstring>
        <name>_sph_twist_DoubleLineBundles</name>
        <qualifiedname>src.SphericalTwist.DoubleSphericalTwist._sph_twist_DoubleLineBundles</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref></type>
          <defname>line_bundle_1</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref></type>
          <defname>line_bundle_2</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref></type>
          <defname>line_bundle_3</defname>
        </param>
        <briefdescription>
<para>Helper method to compute the distinguished triangle of the double spherical twist. </para>
        </briefdescription>
        <detaileddescription>
<para>The distinguished triangle is given by the cone of the evaluation morphism <verbatim>Hom(O(a), Tw_b O(c)) âŠ— O(a) ----&gt;  Tw_b O(c) ----&gt; Tw_a Tw_b O(c)
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>line_bundle_1 The last line bundle twisted around; i.e. O(a) where we are computing Tw_a Tw_b O(c) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>line_bundle_2 The first line bundle twisted around; i.e. O(b) where we are computing Tw_a Tw_b O(c) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>line_bundle_3 The line bundle we are applying the spherical twist to; i.e. O(c) where we are computing Tw_a Tw_b O(c)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="namespacesrc_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref> The distinguished triangle of the double spherical twist</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TypeError</parametername>
</parameternamelist>
<parameterdescription>
<para>If line_bundle_1, line_bundle_2, or line_bundle_3 are not instances of <ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/SphericalTwist.py" line="1078" column="1" bodyfile="src/SphericalTwist.py" bodystart="1078" bodyend="1127"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class to represent the composition of successive spherical twists applied to a line bundle. </para>
    </briefdescription>
    <detaileddescription>
<para>The double spherical twist is given as a distinguished triangle similar to the case of the single spherical twist; however, for higher numbers of spherical twists, there are often multiple triangles that the object fits into. The added functionality that this class provides is the ability to account for both triangles when computing the Harder- Narasimhan filtration of the object. Specifically, one must account for the defining triangle</para>
<para>Hom(O(a), Tw_b O(c)) âŠ— O(a) ----&gt; Tw_b O(c) ----&gt; Tw_a Tw_b O(c)</para>
<para>as well as what we refer to as the &apos;secondary canonical triangle&apos; given by</para>
<para>Tw_a (Hom(O(b), O(c)) âŠ— O(b)) ----&gt; Tw_a O(c) ----&gt; Tw_a Tw_b O(c)</para>
<para>The Harder-Narasimhan factors of the double spherical twist are computed by first computing the Harder-Narasimhan factors of the defining triangle, and then the secondary canonical triangle. Unlike the single <ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref> class, we do not actually provide the Harder-Narasimhan filtration in all cases; there are edge cases where nothing can currently be said and we must return an empty list leading to a mass of 0. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>src.SphericalTwist.DoubleSphericalTwist</label>
        <link refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>src.DerivedCategoryObject.DerivedCategoryObject</label>
        <link refid="classsrc_1_1_derived_category_object_1_1_derived_category_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>src.SphericalTwist.DoubleSphericalTwist</label>
        <link refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>src.DerivedCategoryObject.DerivedCategoryObject</label>
        <link refid="classsrc_1_1_derived_category_object_1_1_derived_category_object"/>
      </node>
    </collaborationgraph>
    <location file="src/SphericalTwist.py" line="1004" column="1" bodyfile="src/SphericalTwist.py" bodystart="1004" bodyend="1565"/>
    <listofallmembers>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ade9c9fe0c4c8d3bdd3edfff5d59610ca" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>__init__</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a6cc185f90c2474199cc64957beb5f2bb" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>__str__</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a12e2989157e1bed9d0bd02156a5fe811" prot="protected" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>_sph_twist_DoubleLineBundles</name></member>
      <member refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>catagory</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a68d54bee26b992863d77725861e0ec2c" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>central_charge</name></member>
      <member refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a111bf62635e3a204488ca33689d296e6" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>chern_character</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ab9e9e5ae6673b64365efe14c77bab864" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>chernCharacter</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>defining_triangle</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>degree</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ae8b0a91cede767ce6188b18686b431c0" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>get_HN_factors</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1511075ab30c69c00130bc3e3b1820fb" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>is_semistable</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>line_bundle_1</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>line_bundle_2</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>line_bundle_3</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4daf8f6e1a2470c949ac3e49ca099977" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>mass</name></member>
      <member refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4d600ef4b8ee2b4ca1473c15ce61c177" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>secondary_canonical_triangle</name></member>
      <member refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a6c1dfa5772ffeae4bf5f1e6a7a2de496" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>shift</name></member>
      <member refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1ab7174b1273139ac7d0c2bc6f7c4d1789" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>string</name></member>
      <member refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a9ffd63e97c717dd171b7d1c7ef26e16d" prot="public" virt="non-virtual"><scope>src::SphericalTwist::DoubleSphericalTwist</scope><name>update_string_by_shift</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
