<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classsrc_1_1_local_p2_1_1_le_potier" kind="class" language="Python" prot="public">
    <compoundname>src::LocalP2::LePotier</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.LocalP2.LePotier::granularity</definition>
        <argsstring></argsstring>
        <name>granularity</name>
        <qualifiedname>src.LocalP2.LePotier.granularity</qualifiedname>
        <initializer>=  granularity</initializer>
        <briefdescription>
<para>The number of bits of precision to use in the calculation of the curve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="33" column="1" bodyfile="src/LocalP2.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" prot="public" static="no" mutable="no">
        <type></type>
        <definition>src.LocalP2.LePotier::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <qualifiedname>src.LocalP2.LePotier.width</qualifiedname>
        <initializer>=  width</initializer>
        <briefdescription>
<para>The width of the curve in terms of the number of dyadic characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="35" column="1" bodyfile="src/LocalP2.py" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" prot="public" static="no" mutable="no">
        <type>list</type>
        <definition>src.LocalP2.LePotier::boundary_points</definition>
        <argsstring></argsstring>
        <name>boundary_points</name>
        <qualifiedname>src.LocalP2.LePotier.boundary_points</qualifiedname>
        <initializer>=  []</initializer>
        <briefdescription>
<para>A list of tuples containing the coordinates of the boundary points of the curve. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of elements depends on the granularity and width of the curve. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="40" column="1" bodyfile="src/LocalP2.py" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a8fb86a6de5ba7866c61fa4ec1d3be584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier.__init__</definition>
        <argsstring>(self, granularity=5, width=5)</argsstring>
        <name>__init__</name>
        <qualifiedname>src.LocalP2.LePotier.__init__</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref></type>
          <defname>granularity</defname>
          <defval>5</defval>
        </param>
        <param>
          <type><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref></type>
          <defname>width</defname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the curve with the given granularity and width.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>granularity: The number of bits of precision to use in the calculation of the curve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>width: The width of the curve in terms of the number of dyadic characters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="24" column="1" bodyfile="src/LocalP2.py" bodystart="24" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a0cb51e30a5da5e950c29853b96e06cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier.is_above_curve</definition>
        <argsstring>(self, x, y)</argsstring>
        <name>is_above_curve</name>
        <qualifiedname>src.LocalP2.LePotier.is_above_curve</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <briefdescription>
<para>Function which indicates whether a coordinate (s,q) is above the set of (ch1/ch0, ch2/ch0) for which vector bundles of given charge are stable. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>x The x-coordinate of the point</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>y The y-coordinate of the point</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if the point is above the curve, False otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="156" column="1" bodyfile="src/LocalP2.py" bodystart="156" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1ae0dc36c60dc5c66eb1b8400934432910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier.curve_estimate</definition>
        <argsstring>(self, x)</argsstring>
        <name>curve_estimate</name>
        <qualifiedname>src.LocalP2.LePotier.curve_estimate</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>Function which estimates the value of y for a given x using linear interpolation between the boundary points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>x The x-coordinate of the point</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the x-coordinate is outside the range of the curve </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The estimated y-coordinate of the point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="171" column="1" bodyfile="src/LocalP2.py" bodystart="171" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a98c74228cc90ec340155a87a1faed22f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier.plot_region</definition>
        <argsstring>(self, plot_3d=False, return_json=False, show_walls=False, boundary_color=&apos;blue&apos;, wall_color=&apos;gray&apos;)</argsstring>
        <name>plot_region</name>
        <qualifiedname>src.LocalP2.LePotier.plot_region</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>plot_3d</type>
          <defname>plot_3d</defname>
          <defval>False</defval>
        </param>
        <param>
          <type><ref refid="namespacesrc_1_1_local_p2_1aba7ed3df7babb37325bbadaeef0e9f91" kindref="member">return_json</ref></type>
          <defname>return_json</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>show_walls</type>
          <defname>show_walls</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>boundary_color</type>
          <defname>boundary_color</defname>
          <defval>&apos;blue&apos;</defval>
        </param>
        <param>
          <type>wall_color</type>
          <defname>wall_color</defname>
          <defval>&apos;gray&apos;</defval>
        </param>
        <briefdescription>
<para>Method to plot the region of the ch1/ch0, ch2/ch0 plane above the Drezet-Le Potier curve. </para>
        </briefdescription>
        <detaileddescription>
<para>The plot can be displayed in the browser or returned as a JSON string, and can be in 2D or 3D. Additionally, the plot can include the walls of the chambers and the colors of the boundary and walls can be customized.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>plot_3d A flag to indicate whether the plot should be in 3D. Default is False. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>return_json: A flag to indicate whether the plot should be returned as a JSON string. Default is False. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>show_walls: A flag to indicate whether the walls of the chambers should be shown. Default is False. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>boundary_color: The color of the boundary of the curve. Default is &apos;blue&apos;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>wall_color: The color of the walls of the chambers. Default is &apos;gray&apos;.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: A JSON string representation of the plot if return_json is True </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="202" column="1" bodyfile="src/LocalP2.py" bodystart="204" bodyend="328"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier._get_dyadic_character</definition>
        <argsstring>(self, p, m)</argsstring>
        <name>_get_dyadic_character</name>
        <qualifiedname>src.LocalP2.LePotier._get_dyadic_character</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Helper function to calculate the chern characer corresponding to a dyadic number p/2^m. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>p The index of the dyadic character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>m The exponent of the denominator of the dyadic character, e.g. p/2^m </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="namespacesrc_1_1_chern_character" kindref="compound">ChernCharacter</ref> The Chern character of the dyadic character</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ValueError</parametername>
</parameternamelist>
<parameterdescription>
<para>If the input data is not valid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="52" column="1" bodyfile="src/LocalP2.py" bodystart="52" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier._e_reg</definition>
        <argsstring>(self, p, m)</argsstring>
        <name>_e_reg</name>
        <qualifiedname>src.LocalP2.LePotier._e_reg</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Helper function to calculate the regular part of the exceptional vector bundle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>p The index of the dyadic character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>m: The exponent of the denominator of the dyadic character, e.g. p/2^m </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple A tuple containing the coordinates of the regular part of the exceptional vector bundle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="82" column="1" bodyfile="src/LocalP2.py" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier._e_plus</definition>
        <argsstring>(self, p, m)</argsstring>
        <name>_e_plus</name>
        <qualifiedname>src.LocalP2.LePotier._e_plus</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Helper function to calculate the right-side part of the exceptional vector bundle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>p The index of the dyadic character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>m The exponent of the denominator of the dyadic character, e.g. p/2^m </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple A tuple containing the coordinates of the right-side part of the exceptional vector bundle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="94" column="1" bodyfile="src/LocalP2.py" bodystart="94" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier._e_left</definition>
        <argsstring>(self, p, m)</argsstring>
        <name>_e_left</name>
        <qualifiedname>src.LocalP2.LePotier._e_left</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Helper function to calculate the left-side part of the exceptional vector bundle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>p: The index of the dyadic character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>m The exponent of the denominator of the dyadic character, e.g. p/2^m </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple A tuple containing the coordinates of the left-side part of the exceptional vector bundle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="106" column="1" bodyfile="src/LocalP2.py" bodystart="106" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>src.LocalP2.LePotier._e_right</definition>
        <argsstring>(self, p, m)</argsstring>
        <name>_e_right</name>
        <qualifiedname>src.LocalP2.LePotier._e_right</qualifiedname>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>p</type>
          <defname>p</defname>
        </param>
        <param>
          <type>m</type>
          <defname>m</defname>
        </param>
        <briefdescription>
<para>Helper function to calculate the right-side part of the exceptional vector bundle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>p The index of the dyadic character </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>m The exponent of the denominator of the dyadic character, e.g. p/2^m </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>tuple A tuple containing the coordinates of the right-side part of the exceptional vector bundle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LocalP2.py" line="131" column="1" bodyfile="src/LocalP2.py" bodystart="131" bodyend="155"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class which encodes a significant porition of the mathematical information about the Drézet-Le Potier curve embedded in the ch1/ch0, ch2/ch0 plane. </para>
    </briefdescription>
    <detaileddescription>
<para>An algorithmic description of how to obtain the coordinates of exceptional vector bundles is described in</para>
<para><ulink url="https://link.springer.com/article/10.1007/s00029-017-0352-4">https://link.springer.com/article/10.1007/s00029-017-0352-4</ulink> </para>
    </detaileddescription>
    <location file="src/LocalP2.py" line="14" column="1" bodyfile="src/LocalP2.py" bodystart="14" bodyend="328"/>
    <listofallmembers>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a8fb86a6de5ba7866c61fa4ec1d3be584" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>__init__</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" prot="protected" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>_e_left</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" prot="protected" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>_e_plus</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" prot="protected" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>_e_reg</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" prot="protected" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>_e_right</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" prot="protected" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>_get_dyadic_character</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>boundary_points</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1ae0dc36c60dc5c66eb1b8400934432910" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>curve_estimate</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>granularity</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a0cb51e30a5da5e950c29853b96e06cb4" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>is_above_curve</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a98c74228cc90ec340155a87a1faed22f" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>plot_region</name></member>
      <member refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" prot="public" virt="non-virtual"><scope>src::LocalP2::LePotier</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
