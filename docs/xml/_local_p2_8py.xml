<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_local_p2_8py" kind="file" language="Python">
    <compoundname>LocalP2.py</compoundname>
    <innerclass refid="classsrc_1_1_local_p2_1_1_le_potier" prot="public">src::LocalP2::LePotier</innerclass>
    <innernamespace refid="namespacesrc">src</innernamespace>
    <innernamespace refid="namespacesrc_1_1_local_p2">src::LocalP2</innernamespace>
    <innernamespace refid="namespaceplotly_1_1graph__objs">plotly::graph_objs</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesrc_1_1_local_p2" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.ChernCharacter<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ChernCharacter</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.SphericalTwist<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SphericalTwist</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.CoherentSheaf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LineBundle</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.graph_objects<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>go</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceplotly_1_1graph__objs" kindref="compound">plotly.graph_objs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.utils</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classsrc_1_1_local_p2_1_1_le_potier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref>():</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Class<sp/>which<sp/>encodes<sp/>a<sp/>significant<sp/>porition<sp/>of<sp/>the<sp/>mathematical<sp/>information<sp/>about<sp/>the<sp/>Dr√©zet-Le<sp/>Potier</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>curve<sp/>embedded<sp/>in<sp/>the<sp/>ch1/ch0,<sp/>ch2/ch0<sp/>plane.<sp/>An<sp/>algorithmic<sp/>description<sp/>of<sp/>how<sp/>to<sp/>obtain<sp/>the<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>coordinates<sp/>of<sp/>exceptional<sp/>vector<sp/>bundles<sp/>is<sp/>described<sp/>in<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>https://link.springer.com/article/10.1007/s00029-017-0352-4</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a8fb86a6de5ba7866c61fa4ec1d3be584" kindref="member">__init__</ref>(self,<sp/>granularity=5,<sp/>width=5):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constructor<sp/>for<sp/>the<sp/>LePotier<sp/>class.<sp/>Initializes<sp/>the<sp/>curve<sp/>with<sp/>the<sp/>given<sp/>granularity</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>width.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>granularity:<sp/>The<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>precision<sp/>to<sp/>use<sp/>in<sp/>the<sp/>calculation<sp/>of<sp/>the<sp/>curve</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>width:<sp/>The<sp/>width<sp/>of<sp/>the<sp/>curve<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>number<sp/>of<sp/>dyadic<sp/>characters</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref><sp/>=<sp/>granularity<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref><sp/>=<sp/>width<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>-1*self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref><sp/>*<sp/>2**self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref><sp/>*<sp/>2**(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref><sp/>+1)<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref><sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lower_bound,<sp/>upper_bound):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>.append(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(i,<sp/>granularity))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>.append(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" kindref="member">_e_left</ref>(i,<sp/>granularity))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>.append(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" kindref="member">_e_right</ref>(i,<sp/>granularity))</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref><sp/>=<sp/>sorted(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[0])<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(self,<sp/>p,<sp/>m):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>chern<sp/>characer<sp/>corresponding<sp/>to<sp/>a<sp/>dyadic<sp/>number<sp/>p/2^m</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>p<sp/>The<sp/>index<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>m<sp/>The<sp/>exponent<sp/>of<sp/>the<sp/>denominator<sp/>of<sp/>the<sp/>dyadic<sp/>character,<sp/>e.g.<sp/>p/2^m</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChernCharacter<sp/>The<sp/>Chern<sp/>character<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>input<sp/>data<sp/>is<sp/>not<sp/>valid</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(p,<sp/>int)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(m,<sp/>int)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>m<sp/>&gt;=<sp/>0:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Input<sp/>data<sp/>must<sp/>be<sp/>integers,<sp/>with<sp/>m<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p<sp/>%<sp/>int(2**m)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>p<sp/>//<sp/>int(2**m)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_chern_character_1_1_chern_character" kindref="compound">ChernCharacter</ref>(<sp/>[1,<sp/>int(d),<sp/>float(<sp/>d**2<sp/>)<sp/>/<sp/>2<sp/>]<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>p<sp/>%<sp/>4<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3<sp/>*<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p+1,<sp/>m)[0]<sp/>*<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p-1,<sp/>m)<sp/>-<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p-3,<sp/>m)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>p<sp/>%<sp/>4<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3<sp/>*<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p-1,<sp/>m)[0]<sp/>*<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p+1,<sp/>m)<sp/>-<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p+3,<sp/>m)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>p<sp/>%<sp/>4<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_p<sp/>=<sp/>p<sp/>//<sp/>2</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(new_p,<sp/>m-1)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_p<sp/>=<sp/>p<sp/>//<sp/>4</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(new_p,<sp/>m-2)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" kindref="member">_e_reg</ref>(self,<sp/>p,<sp/>m):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>regular<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>p<sp/>The<sp/>index<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>m:<sp/>The<sp/>exponent<sp/>of<sp/>the<sp/>denominator<sp/>of<sp/>the<sp/>dyadic<sp/>character,<sp/>e.g.<sp/>p/2^m</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>containing<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>regular<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p,<sp/>m)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>float(chern[1])<sp/>/<sp/>chern[0],<sp/>chern[2]<sp/>/<sp/>chern[0]<sp/>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(self,<sp/>p,<sp/>m):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>right-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>p<sp/>The<sp/>index<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>m<sp/>The<sp/>exponent<sp/>of<sp/>the<sp/>denominator<sp/>of<sp/>the<sp/>dyadic<sp/>character,<sp/>e.g.<sp/>p/2^m</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>containing<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>right-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a241a0b9945a0b291daf05c3129c41a13" kindref="member">_get_dyadic_character</ref>(p,<sp/>m)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>float(chern[1])<sp/>/<sp/>chern[0],<sp/>chern[2]<sp/>/<sp/>chern[0]<sp/>-<sp/>float(1<sp/>/<sp/>(chern[0])**2)<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" kindref="member">_e_left</ref>(self,<sp/>p,<sp/>m):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>left-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>p:<sp/>The<sp/>index<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>m<sp/>The<sp/>exponent<sp/>of<sp/>the<sp/>denominator<sp/>of<sp/>the<sp/>dyadic<sp/>character,<sp/>e.g.<sp/>p/2^m</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>containing<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>left-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(p,<sp/>m)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" kindref="member">_e_reg</ref>(p-1,<sp/>m)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>float(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)<sp/></highlight><highlight class="comment">#slope<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3<sp/>=<sp/>m<sp/>+<sp/>math.sqrt(<sp/>m**2<sp/>-<sp/>2*m*x_1<sp/>+<sp/>2*y_1<sp/>+<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_1<sp/>&lt;=<sp/>x_3<sp/>&lt;=<sp/>x_2<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x_2<sp/>&lt;=<sp/>x_3<sp/>&lt;=<sp/>x_1:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_3<sp/>=<sp/>m<sp/>*<sp/>x_3<sp/>+<sp/>(y_1<sp/>-<sp/>m<sp/>*<sp/>x_1)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x_3,<sp/>y_3)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3<sp/>=<sp/>m<sp/>-<sp/>math.sqrt(<sp/>m**2<sp/>-<sp/>2*m*x_1<sp/>+<sp/>2*y_1<sp/>+<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_3<sp/>=<sp/>m<sp/>*<sp/>x_3<sp/>+<sp/>(y_1<sp/>-<sp/>m<sp/>*<sp/>x_1)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x_3,<sp/>y_3)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" kindref="member">_e_right</ref>(self,<sp/>p,<sp/>m):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>the<sp/>right-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>p<sp/>The<sp/>index<sp/>of<sp/>the<sp/>dyadic<sp/>character</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>m<sp/>The<sp/>exponent<sp/>of<sp/>the<sp/>denominator<sp/>of<sp/>the<sp/>dyadic<sp/>character,<sp/>e.g.<sp/>p/2^m</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>containing<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>right-side<sp/>part<sp/>of<sp/>the<sp/>exceptional<sp/>vector<sp/>bundle</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_1,<sp/>y_1<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(p,<sp/>m)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" kindref="member">_e_reg</ref>(p+1,<sp/>m)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>float(y_2<sp/>-<sp/>y_1)<sp/>/<sp/>(x_2<sp/>-<sp/>x_1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3<sp/>=<sp/>m<sp/>+<sp/>math.sqrt(<sp/>m**2<sp/>-<sp/>2*m*x_1<sp/>+<sp/>2*y_1<sp/>+<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x_1<sp/>&lt;=<sp/>x_3<sp/>&lt;=<sp/>x_2<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x_2<sp/>&lt;=<sp/>x_3<sp/>&lt;=<sp/>x_1:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_3<sp/>=<sp/>m<sp/>*<sp/>x_3<sp/>+<sp/>(y_1<sp/>-<sp/>m<sp/>*<sp/>x_1)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x_3,<sp/>y_3)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_3<sp/>=<sp/>m<sp/>-<sp/>math.sqrt(<sp/>m**2<sp/>-<sp/>2*m*x_1<sp/>+<sp/>2*y_1<sp/>+<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_3<sp/>=<sp/>m<sp/>*<sp/>x_3<sp/>+<sp/>(y_1<sp/>-<sp/>m<sp/>*<sp/>x_1)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x_3,<sp/>y_3)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a0cb51e30a5da5e950c29853b96e06cb4" kindref="member">is_above_curve</ref>(self,<sp/>x,<sp/>y):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>which<sp/>indicates<sp/>whether<sp/>a<sp/>coordinate<sp/>(s,q)<sp/>is<sp/>above<sp/>the<sp/>set<sp/>of<sp/>(ch1/ch0,<sp/>ch2/ch0)<sp/>for<sp/>which<sp/>vector<sp/>bundles<sp/>of<sp/>given<sp/>charge<sp/>are<sp/>stable</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x<sp/>The<sp/>x-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>y<sp/>The<sp/>y-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>bool<sp/>True<sp/>if<sp/>the<sp/>point<sp/>is<sp/>above<sp/>the<sp/>curve,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/>&gt;<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ae0dc36c60dc5c66eb1b8400934432910" kindref="member">curve_estimate</ref>(x)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ae0dc36c60dc5c66eb1b8400934432910" kindref="member">curve_estimate</ref>(self,<sp/>x):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>which<sp/>estimates<sp/>the<sp/>value<sp/>of<sp/>y<sp/>for<sp/>a<sp/>given<sp/>x<sp/>using<sp/>linear<sp/>interpolation<sp/>between<sp/>the<sp/>boundary<sp/>points</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>float<sp/>x<sp/>The<sp/>x-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>x-coordinate<sp/>is<sp/>outside<sp/>the<sp/>range<sp/>of<sp/>the<sp/>curve</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>float<sp/>The<sp/>estimated<sp/>y-coordinate<sp/>of<sp/>the<sp/>point</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_values<sp/>=<sp/>[p[0]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>x<sp/>is<sp/>within<sp/>the<sp/>range<sp/>of<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/>&lt;<sp/>x_values[0]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x<sp/>&gt;<sp/>x_values[-1]:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;{x}<sp/>is<sp/>outside<sp/>the<sp/>range<sp/>of<sp/>the<sp/>curve<sp/>(currently<sp/>({x_values[0]},<sp/>{x_values[-1]}))&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Find<sp/>the<sp/>segment<sp/>containing<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>)<sp/>-<sp/>1):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>[i]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2,<sp/>y2<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a22d323544cc496f65793489d1929e3f7" kindref="member">boundary_points</ref>[i<sp/>+<sp/>1]</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x1<sp/>&lt;=<sp/>x<sp/>&lt;=<sp/>x2:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Perform<sp/>linear<sp/>interpolation<sp/>to<sp/>find<sp/>y-interp<sp/>at<sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_interp<sp/>=<sp/>y1<sp/>+<sp/>(y2<sp/>-<sp/>y1)<sp/>*<sp/>((x<sp/>-<sp/>x1)<sp/>/<sp/>(x2<sp/>-<sp/>x1))</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y_interp</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;x<sp/>is<sp/>outside<sp/>the<sp/>range<sp/>of<sp/>the<sp/>curve&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a98c74228cc90ec340155a87a1faed22f" kindref="member">plot_region</ref>(self,<sp/>plot_3d=False,<sp/>return_json=False,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>show_walls=False,<sp/>boundary_color=&apos;blue&apos;,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wall_color=&apos;gray&apos;):</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>plot<sp/>the<sp/>region<sp/>of<sp/>the<sp/>ch1/ch0,<sp/>ch2/ch0<sp/>plane<sp/>above<sp/>the<sp/>Drezet-Le<sp/>Potier<sp/>curve.</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>plot<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>browser<sp/>or<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string,<sp/>and<sp/>can<sp/>be<sp/>in<sp/>2D<sp/>or<sp/>3D.</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Additionally,<sp/>the<sp/>plot<sp/>can<sp/>include<sp/>the<sp/>walls<sp/>of<sp/>the<sp/>chambers<sp/>and<sp/>the<sp/>colors<sp/>of<sp/>the<sp/>boundary<sp/>and<sp/>walls</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can<sp/>be<sp/>customized.</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>plot_3d<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>in<sp/>3D.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>return_json:<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>show_walls:<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>walls<sp/>of<sp/>the<sp/>chambers<sp/>should<sp/>be<sp/>shown.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>boundary_color:<sp/>The<sp/>color<sp/>of<sp/>the<sp/>boundary<sp/>of<sp/>the<sp/>curve.<sp/>Default<sp/>is<sp/>&apos;blue&apos;.</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>wall_color:<sp/>The<sp/>color<sp/>of<sp/>the<sp/>walls<sp/>of<sp/>the<sp/>chambers.<sp/>Default<sp/>is<sp/>&apos;gray&apos;.</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return:<sp/>A<sp/>JSON<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>plot<sp/>if<sp/>return_json<sp/>is<sp/>True</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>-1*self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref><sp/>*<sp/>2**self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a60c614144a2cf3383465e6021b619658" kindref="member">width</ref><sp/>*<sp/>2**(self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref><sp/>)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>figure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure()<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>plot_3d:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lower_bound,<sp/>upper_bound):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2,<sp/>y2<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" kindref="member">_e_left</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x3,<sp/>y3<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" kindref="member">_e_right</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x2],<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y2],<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0,0],</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=boundary_color,<sp/>width=5),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x3],<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y3],<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0,0],</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=boundary_color,<sp/>width=5),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>show_walls:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_4,<sp/>y_4<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" kindref="member">_e_reg</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x_4],<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y_4],<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0,0],</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=wall_color,<sp/>width=5),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6,<sp/>color=</highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lower_bound,<sp/>upper_bound):</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a4b784700b98acb84b477cfeb5f4a6462" kindref="member">_e_plus</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2,<sp/>y2<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a5aa2effddb78b1e0a4d9a4c27590b085" kindref="member">_e_left</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x3,<sp/>y3<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1ac37ef4a5179651aa7b22679724112420" kindref="member">_e_right</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x2],<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y2],<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=boundary_color,<sp/>width=4),</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6),</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x3],<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y3],<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=boundary_color,<sp/>width=4),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>show_walls:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_4,<sp/>y_4<sp/>=<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a1f2ab9bbc1ec5d20f5b9ee8d63484b0c" kindref="member">_e_reg</ref>(i,<sp/>self.<ref refid="classsrc_1_1_local_p2_1_1_le_potier_1a65cd054cbf766d2fe5a51d13a3921840" kindref="member">granularity</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x_4],<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y_4],<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=wall_color,<sp/>width=5),</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=6,<sp/>color=</highlight><highlight class="stringliteral">&apos;black&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ensure<sp/>equal<sp/>scaling<sp/>of<sp/>x<sp/>and<sp/>y<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.update_layout(</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis=dict(scaleanchor=</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">),<sp/><sp/></highlight><highlight class="comment">#<sp/>Locks<sp/>the<sp/>aspect<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis=dict(scaleanchor=</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ensures<sp/>square<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>return_json:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config<sp/>=<sp/>dict({</highlight><highlight class="stringliteral">&apos;scrollZoom&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Show<sp/>plot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show(config=config)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.dumps(fig,<sp/>cls=plotly.utils.PlotlyJSONEncoder)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_local_p2_1a2d7bd416d61b0268a8227d0c4632ddf0" kindref="member">plot_multiple_neighbors_ex1</ref>(width=5,<sp/>granularity=3,<sp/>return_json=False):</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Example<sp/>implementation<sp/>to<sp/>plot<sp/>multiple<sp/>neighboring<sp/>chambers<sp/>to<sp/>the<sp/>geometric<sp/>chamber</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>Local<sp/>P2<sp/>at<sp/>once.<sp/>The<sp/>plot<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>browser<sp/>or<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string.</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>width<sp/>The<sp/>width<sp/>of<sp/>the<sp/>curve<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>number<sp/>of<sp/>dyadic<sp/>characters</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>granularity:<sp/>The<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>precision<sp/>to<sp/>use<sp/>in<sp/>the<sp/>calculation<sp/>of<sp/>the<sp/>curve</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>return_json:<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>JSON<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>plot<sp/>if<sp/>return_json<sp/>is<sp/>True</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>DLP=<sp/><ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref>(width,<sp/>granularity)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>200)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>[0]<sp/>*<sp/>len(x_vals)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">))])</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>-1*DLP.width<sp/>*<sp/>2**granularity</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>DLP.width<sp/>*<sp/>2**(granularity<sp/>)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lower_bound,upper_bound):</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>%<sp/>11<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>DLP._e_plus(i,<sp/>granularity)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2,<sp/>y2<sp/>=<sp/>DLP._e_reg(i,<sp/>granularity)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x2],<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y2],<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0,0],</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>width=9),</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=9),</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>200)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>z_vals:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(z))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>-1*y_vals</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>(1.5<sp/>*<sp/>float(DLP.curve_estimate(x1))<sp/>+<sp/>y2<sp/>-y1)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.repeat(z_vals,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>-<sp/>x1/2</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>[x1]<sp/>*<sp/>len(x_vals)<sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>return_json:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.dumps(fig,<sp/>cls=plotly.utils.PlotlyJSONEncoder)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_local_p2_1a0b3d4fc574da697a6c978d7b28a2c573" kindref="member">plot_successive_neighbors_ex1</ref>(width=5,<sp/>granularity=4,<sp/>plot_walls=False,<sp/>return_json=False):</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Example<sp/>implementation<sp/>to<sp/>plot<sp/>9<sp/>successive<sp/>chambers<sp/>to<sp/>the<sp/>geometric<sp/>chamber<sp/>for<sp/>Local<sp/>P2.</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>plot<sp/>can<sp/>be<sp/>displayed<sp/>in<sp/>the<sp/>browser<sp/>or<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string.</highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>width<sp/>The<sp/>width<sp/>of<sp/>the<sp/>curve<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>number<sp/>of<sp/>dyadic<sp/>characters</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>granularity<sp/>The<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>precision<sp/>to<sp/>use<sp/>in<sp/>the<sp/>calculation<sp/>of<sp/>the<sp/>curve</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>plot_walls<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>walls<sp/>of<sp/>the<sp/>chambers<sp/>should<sp/>be<sp/>shown.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>return_json<sp/>A<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>the<sp/>plot<sp/>should<sp/>be<sp/>returned<sp/>as<sp/>a<sp/>JSON<sp/>string.<sp/>Default<sp/>is<sp/>False.</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>JSON<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>plot<sp/>if<sp/>return_json<sp/>is<sp/>True</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>DLP<sp/>=<sp/><ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref>(6,<sp/>granularity)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-4.9,<sp/>4.9,<sp/>200)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>[0]<sp/>*<sp/>len(x_vals)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">))])</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>-1*DLP.width<sp/>*<sp/>2**DLP.granularity</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>DLP.width<sp/>*<sp/>2**(DLP.granularity<sp/>)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>i_sp<sp/>=<sp/>range(lower_bound,upper_bound)[<sp/>len(range(lower_bound,upper_bound))<sp/>//<sp/>3<sp/>]</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>DLP._e_plus(i_sp,<sp/>DLP.granularity)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>x2,<sp/>y2<sp/>=<sp/>DLP._e_reg(i_sp,<sp/>DLP.granularity)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x2],<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y2],<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0,0],</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>width=9),</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=9),</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>180)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>z_vals:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(z))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>130)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>-1*y_vals</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>2</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>(1.5<sp/>*<sp/>float(DLP.curve_estimate(x1))<sp/>+<sp/>y2<sp/>-y1)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.repeat(z_vals,<sp/>130)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>-<sp/>x1/2</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>[x1]<sp/>*<sp/>len(z_vals)<sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>150)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>110)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>110)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(x_vals))</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>/<sp/>4</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>4</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.082048</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>1.309</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-1.686207</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>110)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>z_vals:</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(z))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>70)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>-1*y_vals</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.repeat(z_vals,<sp/>70)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(z_vals))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>/<sp/>8</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>8</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.572048</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.869</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.646207</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>100)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>50)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>50)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(x_vals))</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>/<sp/>16</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>16</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.45</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.93</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.586207</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>80)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>z_vals:</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(z))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>50)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>-1*y_vals</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.repeat(z_vals,<sp/>50)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(z_vals))</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>/<sp/>32</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>32</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.43</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.905</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.52</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>70)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(x_vals))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>/<sp/>64</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>64</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.399</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.91</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.502</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>60)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>z<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>z_vals:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(z))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>-1*y_vals</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.repeat(z_vals,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(z_vals))</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>/<sp/>128</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>128</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.399</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.91</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.48</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>70)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/></highlight><highlight class="comment">#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>11.5<sp/><sp/></highlight><highlight class="comment">#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>40)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>np.array([0]<sp/>*<sp/>len(x_vals))</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>/<sp/>256</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>/<sp/>256</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>z_shift<sp/>=<sp/>1.407</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>y_shift<sp/>=<sp/>3.913</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>x_shift<sp/>=<sp/>-2.482</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>z_vals<sp/>=<sp/>z_vals<sp/>+<sp/>z_shift</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>y_vals<sp/>+<sp/>y_shift</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>x_vals<sp/>+<sp/>x_shift</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d(z=z_vals,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=y_vals,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>plot_walls:</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_bound<sp/>=<sp/>-1*DLP.width<sp/>*<sp/>2**DLP.granularity</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_bound<sp/>=<sp/>DLP.width<sp/>*<sp/>2**(DLP.granularity<sp/>)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(lower_bound+1,<sp/>upper_bound-1):</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>y1<sp/>=<sp/>DLP._e_plus(i,<sp/>DLP.granularity)</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_2,<sp/>y_2<sp/>=<sp/>DLP._e_reg(i,<sp/>DLP.granularity)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.add_trace(go.Scatter3d</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[x1,<sp/>x_2],<sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=[y1,<sp/>y_2],<sp/></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z=[0.03,0.03],</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;lines+markers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line=dict(color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>width=9),</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>marker=dict(size=3,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>Hide<sp/>legend<sp/>for<sp/>individual<sp/>line<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.update_layout(showlegend=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>return_json:</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.dumps(fig,<sp/>cls=plotly.utils.PlotlyJSONEncoder)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>line_bundle_1<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>line_bundle_2<sp/>=<sp/>5</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>sph<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">),<sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_2,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>DLP<sp/>=<sp/><ref refid="classsrc_1_1_local_p2_1_1_le_potier" kindref="compound">LePotier</ref>(width=5,<sp/>granularity=3)</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DLP.plot_stability_chambers()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacesrc_1_1_local_p2_1a0b3d4fc574da697a6c978d7b28a2c573" kindref="member">plot_successive_neighbors_ex1</ref>(width=5,<sp/>granularity=3,<sp/>plot_walls=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>return_json=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Define<sp/>x<sp/>values<sp/>(spread<sp/>around<sp/>a<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>200)<sp/><sp/>#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>y_vals<sp/>=<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>x<sp/>in<sp/>x_vals:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_min<sp/>=<sp/>float(DLP.curve_estimate(x))<sp/>#<sp/>Slightly<sp/>above<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>25<sp/><sp/>#<sp/>Arbitrary<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>160)<sp/><sp/>#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/>#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>160)<sp/><sp/>#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>masses<sp/>=<sp/>np.array([sph.mass(x,<sp/>y)<sp/>for<sp/>x,<sp/>y<sp/>in<sp/>zip(x_vals,<sp/>y_vals)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=masses,<sp/>x=x_vals,<sp/>y=y_vals,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=&apos;markers&apos;,<sp/>marker=dict(size=3,<sp/>color=masses,<sp/>colorscale=&apos;viridis&apos;))])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fig.update_layout(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>title=&quot;&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>autosize=True,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>margin=dict(l=0,<sp/>r=0,<sp/>b=0,<sp/>t=30),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>scene=dict(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bgcolor=&quot;white&quot;,<sp/><sp/>#<sp/>Changes<sp/>the<sp/>3D<sp/>plot<sp/>background,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xaxis<sp/>=<sp/>dict(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground=True,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=&quot;white&quot;,),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yaxis<sp/>=<sp/>dict(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground=True,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=&quot;white&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zaxis<sp/>=<sp/>dict(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gridcolor=&quot;white&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showbackground=True,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zerolinecolor=&quot;white&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fig.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/LocalP2.py"/>
  </compounddef>
</doxygen>
