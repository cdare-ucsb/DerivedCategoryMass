<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_chain_complex_8py" kind="file" language="Python">
    <compoundname>ChainComplex.py</compoundname>
    <innerclass refid="classsrc_1_1_chain_complex_1_1_chain_complex" prot="public">src::ChainComplex::ChainComplex</innerclass>
    <innernamespace refid="namespacesrc">src</innernamespace>
    <innernamespace refid="namespacesrc_1_1_chain_complex">src::ChainComplex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesrc_1_1_chain_complex" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.DerivedCategoryObject<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DerivedCategoryObject</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.CoherentSheaf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>CoherentSheaf</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.ChernCharacter<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ChernCharacter</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">IMPLEMENTED_CATAGORIES<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classsrc_1_1_chain_complex_1_1_chain_complex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>):</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>any<sp/>abelian<sp/>category,<sp/>a<sp/>chain<sp/>complex<sp/>is<sp/>a<sp/>sequence<sp/>of<sp/>objects<sp/>and<sp/>morphisms<sp/>between<sp/>them</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>such<sp/>that<sp/>the<sp/>composition<sp/>of<sp/>any<sp/>two<sp/>consecutive<sp/>morphisms<sp/>is<sp/>the<sp/>zero<sp/>morphism.<sp/>In<sp/>the<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>category<sp/>of<sp/>coherent<sp/>sheaves<sp/>on<sp/>P^2,<sp/>we<sp/>can<sp/>represent<sp/>a<sp/>chain<sp/>complex<sp/>as<sp/>a<sp/>sequence<sp/>of<sp/>coherent</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sheaves<sp/>with<sp/>a<sp/>shift.<sp/>For<sp/>instance,<sp/>a<sp/>general<sp/>complex<sp/>will<sp/>be<sp/>of<sp/>the<sp/>form</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=-n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=-n+1<sp/><sp/><sp/><sp/><sp/><sp/>i=-n+2<sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>------&gt;<sp/>E1<sp/>-------&gt;<sp/>E2<sp/>--------&gt;<sp/>E3<sp/>---&gt;<sp/>...</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(A<sp/>priori,<sp/>there<sp/>is<sp/>no<sp/>reason<sp/>the<sp/>complexes<sp/>cant<sp/>also<sp/>descend<sp/>infinitely<sp/>in<sp/>the<sp/>other<sp/>direction).<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>the<sp/>purposes<sp/>of<sp/>this<sp/>project,<sp/>only<sp/>finite<sp/>complexes<sp/>will<sp/>be<sp/>considered.<sp/>Such<sp/>a<sp/>complex<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>a<sp/>similar<sp/>way<sp/>to<sp/>a<sp/>DenseVector<sp/>object<sp/>---<sp/>namely,<sp/>since<sp/>the<sp/>majority<sp/>of<sp/>entries<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>complex<sp/>will<sp/>be<sp/>zero,<sp/>we<sp/>can<sp/>store<sp/>the<sp/>complex<sp/>as<sp/>a<sp/>list<sp/>of<sp/>coherent<sp/>sheaves<sp/>and<sp/>a<sp/>shift<sp/>vector.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------------</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheaf_vector<sp/>(list)<sp/>:<sp/>A<sp/>list<sp/>of<sp/>coherent<sp/>sheaves<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector<sp/>(list)<sp/>:<sp/>A<sp/>list<sp/>of<sp/>homological<sp/>shifts<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector<sp/>(list)<sp/>:<sp/>A<sp/>list<sp/>of<sp/>the<sp/>number<sp/>of<sp/>direct<sp/>sums<sp/>of<sp/>each<sp/>coherent<sp/>sheaf<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a72ab48cf534d48b0f2cc7e55c09b6a54" kindref="member">__init__</ref>(self,<sp/>sheaf_vector,<sp/>shift_vector,<sp/>dimension_vector<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>an<sp/>instance<sp/>of<sp/>ChainComplex<sp/>with<sp/>the<sp/>specified<sp/>sheaf<sp/>vector,<sp/>shift<sp/>vector,</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>potentially<sp/>a<sp/>dimension<sp/>vector.<sp/>If<sp/>a<sp/>dimension<sp/>vector<sp/>is<sp/>not<sp/>provided,<sp/>it<sp/>must<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consist<sp/>of<sp/>non-negative<sp/>integer<sp/>values</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>sheaf_vector<sp/>A<sp/>list<sp/>of<sp/>coherent<sp/>sheaves<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>shift_vector<sp/>A<sp/>list<sp/>of<sp/>homological<sp/>shifts<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>dimension_vector<sp/>A<sp/>list<sp/>of<sp/>the<sp/>number<sp/>of<sp/>direct<sp/>sums<sp/>of<sp/>each<sp/>coherent<sp/>sheaf<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>is<sp/>empty</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>and<sp/>shift<sp/>vector<sp/>have<sp/>different<sp/>lengths</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>any<sp/>element<sp/>of<sp/>the<sp/>sheaf<sp/>vector<sp/>is<sp/>not<sp/>a<sp/>CoherentSheaf<sp/>object</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>any<sp/>element<sp/>of<sp/>the<sp/>shift<sp/>vector<sp/>is<sp/>not<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>dimension<sp/>vector<sp/>is<sp/>not<sp/>the<sp/>same<sp/>length<sp/>as<sp/>the<sp/>sheaf<sp/>vector</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>any<sp/>element<sp/>of<sp/>the<sp/>dimension<sp/>vector<sp/>is<sp/>not<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>any<sp/>element<sp/>of<sp/>the<sp/>dimension<sp/>vector<sp/>is<sp/>negative</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>is<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>contains<sp/>objects<sp/>of<sp/>different<sp/>catagories</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>contains<sp/>objects<sp/>of<sp/>different<sp/>base<sp/>spaces</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>contains<sp/>objects<sp/>of<sp/>different<sp/>projective<sp/>spaces</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>sheaf<sp/>vector<sp/>contains<sp/>objects<sp/>of<sp/>different<sp/>projective<sp/>spaces</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>sheaf_vector:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;sheaf_vector<sp/>cannot<sp/>be<sp/>empty.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(obj,<sp/>CoherentSheaf)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sheaf_vector)<sp/>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;All<sp/>elements<sp/>of<sp/>complex_vector<sp/>must<sp/>be<sp/>instances<sp/>of<sp/>CoherentSheaf<sp/>(of<sp/>the<sp/>same<sp/>projective<sp/>space).&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheaf_catagory<sp/>=<sp/>sheaf_vector[0].catagory</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sheaf_catagory<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>IMPLEMENTED_CATAGORIES:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;Catagory<sp/>{sheaf_catagory}<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(obj.catagory<sp/>==<sp/>sheaf_catagory<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>obj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sheaf_vector):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>elements<sp/>of<sp/>sheaf_vector<sp/>must<sp/>be<sp/>sheaves<sp/>over<sp/>the<sp/>same<sp/>base<sp/>space.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(shift,<sp/>int)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>shift_vector):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;All<sp/>elements<sp/>of<sp/>shift_vector<sp/>must<sp/>be<sp/>integers.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sheaf_vector)<sp/>!=<sp/>len(shift_vector):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;sheaf_vector<sp/>and<sp/>shift_vector<sp/>must<sp/>have<sp/>the<sp/>same<sp/>length.&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dimension_vector<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector<sp/>=<sp/>[1]<sp/>*<sp/>len(sheaf_vector)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(dim,<sp/>int)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dim<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dimension_vector):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;All<sp/>elements<sp/>of<sp/>dimension_vector<sp/>must<sp/>be<sp/>integers.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(sheaf_vector)<sp/>!=<sp/>len(dimension_vector):</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;sheaf_vector<sp/>and<sp/>dimension_vector<sp/>must<sp/>have<sp/>the<sp/>same<sp/>length.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(dim<sp/>&gt;=<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dim<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dimension_vector):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dimension<sp/>cannot<sp/>be<sp/>non-negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>elements<sp/>of<sp/>dimension_vector<sp/>must<sp/>be<sp/>non-negative<sp/>integers.&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref><sp/>=<sp/>sheaf_vector<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref><sp/>=<sp/>dimension_vector<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref><sp/>=<sp/>shift_vector<sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>=<sp/>sheaf_catagory<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>an<sp/>element<sp/>of<sp/>the<sp/>complex<sp/>has<sp/>dimension<sp/>0,<sp/>we<sp/>can<sp/>get<sp/>rid<sp/>of<sp/>it<sp/>using<sp/>helper<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1af05e1ce45f86ad32474b98d8a17f7a73" kindref="member">_remove_zeros_from_dimension_vector</ref>()</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Combine<sp/>repeated<sp/>sheaves<sp/>in<sp/>the<sp/>complex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1aa0baf08c80270b5ccdf997788aeb1070" kindref="member">_combine_repeats</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1adbfc291368151be74b669b4f2edd9c79" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>representation<sp/>of<sp/>the<sp/>chain<sp/>complex.<sp/>The<sp/>complex<sp/>is<sp/>represented<sp/>in<sp/>cohomological<sp/>order<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(which<sp/>technically<sp/>would<sp/>be<sp/>descending<sp/>order<sp/>of<sp/>the<sp/>shifts,<sp/>since<sp/>IR[-2]<sp/>means<sp/>the<sp/>complex<sp/>with</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>copy<sp/>of<sp/>IR<sp/>in<sp/>index<sp/>2).<sp/>The<sp/>individual<sp/>coherent<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>are<sp/>represented<sp/>by<sp/>their</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>own<sp/>respective<sp/>print<sp/>functinos<sp/>---<sp/>this<sp/>will<sp/>generally<sp/>be<sp/>cumbersome<sp/>for<sp/>arbitrary<sp/>vector<sp/>bundles,</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>more<sp/>clean<sp/>for<sp/>named<sp/>instances<sp/>like<sp/>O(1)<sp/>or<sp/>Ω(3).<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>chain<sp/>complex</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Zip<sp/>the<sp/>three<sp/>lists<sp/>together<sp/>and<sp/>sort<sp/>by<sp/>descending<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles<sp/>=<sp/>list(zip(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles_sorted<sp/>=<sp/>sorted(bundles,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[2],<sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>the<sp/>arrow<sp/>string<sp/>used<sp/>to<sp/>join<sp/>bottom<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrow<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>--------&gt;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>We&apos;ll<sp/>use<sp/>the<sp/>same<sp/>spacing<sp/>(without<sp/>arrow<sp/>characters)<sp/>to<sp/>join<sp/>top<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>join_space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>*<sp/>len(arrow)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_columns<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_columns<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheaf,<sp/>dim,<sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bundles_sorted:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>bottom<sp/>string:<sp/>e.g.,<sp/>&quot;O(5)[3]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_elem<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{sheaf}[{shift}]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width<sp/>=<sp/>len(bottom_elem)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>top<sp/>string:<sp/>e.g.,<sp/>&quot;⊕7&quot;<sp/>and<sp/>right-align<sp/>it<sp/>to<sp/>match<sp/>the<sp/>bottom<sp/>column<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_elem<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;⊕{dim}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_columns.append(top_elem.rjust(col_width))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_columns.append(bottom_elem)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_line<sp/>=<sp/>join_space.join(top_columns)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_line<sp/>=<sp/>arrow.join(bottom_columns)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>top_line<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/>bottom_line</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a85e811d0d0ed0e471f7666c51e7a483e" kindref="member">__len__</ref>(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>length<sp/>of<sp/>the<sp/>chain<sp/>complex<sp/>is<sp/>the<sp/>number<sp/>of<sp/>sheaves<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>int<sp/>The<sp/>number<sp/>of<sp/>sheaves<sp/>in<sp/>the<sp/>complex</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a0d7b95df49db36f52234bd8809b6a843" kindref="member">chernCharacter</ref>(self):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>compute<sp/>the<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>chain<sp/>complex.<sp/>The<sp/>Chern<sp/>Character<sp/>of</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>chain<sp/>complex<sp/>is<sp/>the<sp/>alternating<sp/>sum<sp/>of<sp/>the<sp/>Chern<sp/>Characters<sp/>of<sp/>the<sp/>individual<sp/>sheaves<sp/>in</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>complex.<sp/>Since<sp/>the<sp/>Chern<sp/>character<sp/>is<sp/>additive,<sp/>we<sp/>may<sp/>multiply<sp/>the<sp/>Chern<sp/>Characters<sp/>by</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>sheaf<sp/>to<sp/>represent<sp/>direct<sp/>sums<sp/>of<sp/>sheaves.</highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChernCharacter<sp/>The<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>chain<sp/>complex</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cherns<sp/>=<sp/>[sheaf.chernCharacter()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheaf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank_grothendieck_group<sp/>=<sp/>len(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>[0].<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a0d7b95df49db36f52234bd8809b6a843" kindref="member">chernCharacter</ref>())</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain_complex_chern<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>graded_piece<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(rank_grothendieck_group):</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern_piece<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(cherns)):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>odd<sp/>shifts<sp/>get<sp/>a<sp/>negative<sp/>sign,<sp/>even<sp/>shifts<sp/>get<sp/>a<sp/>positive<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern_piece<sp/>+=<sp/>(-1)**(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>[i])<sp/>*<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>[i]<sp/>*<sp/>cherns[i][graded_piece]</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chain_complex_chern.append(chern_piece)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_chern_character_1_1_chern_character" kindref="compound">ChernCharacter</ref>(chain_complex_chern)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a70373ec03d47a5d6dd8e8694186ae138" kindref="member">central_charge</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compute<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>chain<sp/>complex.<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>a<sp/>chain<sp/>complex<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alternating<sp/>sum<sp/>of<sp/>the<sp/>central<sp/>charges<sp/>of<sp/>the<sp/>individual<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>Since<sp/>the</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central<sp/>charge<sp/>is<sp/>additive,<sp/>we<sp/>may<sp/>multiply<sp/>the<sp/>central<sp/>charges<sp/>by<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>sheaf</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>represent<sp/>direct<sp/>sums<sp/>of<sp/>sheaves.<sp/>However,<sp/>most<sp/>of<sp/>this<sp/>functionality<sp/>is<sp/>already<sp/>defined</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>chernCharacter()<sp/>function,<sp/>so<sp/>we<sp/>will<sp/>simply<sp/>call<sp/>that<sp/>function<sp/>and<sp/>then<sp/>compute<sp/>the</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central<sp/>charge<sp/>from<sp/>the<sp/>Chern<sp/>Character.</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>arguments<sp/>required<sp/>to<sp/>compute<sp/>the<sp/>central<sp/>charge.<sp/>The<sp/>number<sp/>of<sp/>arguments<sp/>and<sp/>the<sp/>type</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>arguments<sp/>will<sp/>depend<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>For<sp/>P1,<sp/>the<sp/>central</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charge<sp/>requires<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>the<sp/>central<sp/>charge<sp/>requires<sp/>two<sp/>floating-point</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numbers.<sp/>For<sp/>K3,<sp/>the<sp/>central<sp/>charge<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers<sp/>and<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>complex<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>chain<sp/>complex<sp/>as<sp/>a<sp/>complex<sp/>number</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>type<sp/>of<sp/>the<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>is<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>for<sp/>P1<sp/>requires<sp/>exactly<sp/>one<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>for<sp/>P1<sp/>requires<sp/>a<sp/>complex<sp/>number<sp/>as<sp/>an<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a0d7b95df49db36f52234bd8809b6a843" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(-1*ch[1]<sp/>+<sp/>args[0]<sp/>*<sp/>ch[0])</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>for<sp/>P2<sp/>requires<sp/>exactly<sp/>two<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>for<sp/>P2<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a0d7b95df49db36f52234bd8809b6a843" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(-1*ch[2]<sp/>+<sp/>args[1]<sp/>*<sp/>ch[0],</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[1]<sp/>-<sp/>args[0]<sp/>*<sp/>ch[0])</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>args[1]</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>args[2]</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a0d7b95df49db36f52234bd8809b6a843" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(2*d*alpha<sp/>*<sp/>ch[1]<sp/>-<sp/>ch[2]<sp/>-<sp/>ch[0]<sp/>+<sp/>(beta**2<sp/>-<sp/>alpha**2)*d*ch[0],<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*d*ch[1]<sp/>-<sp/>2*d*alpha*beta*ch[0])</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>not<sp/>implemented<sp/>for<sp/>this<sp/>variety.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a06ddcc7b614880bd8889c944f76237ee" kindref="member">shift</ref>(self,<sp/>shift):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>shift<sp/>the<sp/>chain<sp/>complex<sp/>by<sp/>a<sp/>given<sp/>homological<sp/>shift</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>shift<sp/>The<sp/>homological<sp/>shift<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>chain<sp/>complex</highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChainComplex<sp/>The<sp/>chain<sp/>complex<sp/>shifted<sp/>by<sp/>the<sp/>homological<sp/>shift</highlight></codeline>
<codeline lineno="261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_shift_vector<sp/>=<sp/>[shift<sp/>+<sp/>s<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>]</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>,<sp/>new_shift_vector,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6fb46ca115fc7fef97f7f4676a74cfe8" kindref="member">isShiftOfSheaf</ref>(self):</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Simple<sp/>helper<sp/>function<sp/>which<sp/>checks<sp/>if<sp/>the<sp/>complex<sp/>is<sp/>a<sp/>shift<sp/>of<sp/>a<sp/>single<sp/>sheaf</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>bool<sp/>True<sp/>if<sp/>the<sp/>complex<sp/>is<sp/>a<sp/>shift<sp/>of<sp/>a<sp/>single<sp/>sheaf,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>)<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1af05e1ce45f86ad32474b98d8a17f7a73" kindref="member">_remove_zeros_from_dimension_vector</ref>(self):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>which<sp/>iterates<sp/>through<sp/>the<sp/>dimension<sp/>vector,<sp/>and<sp/>if<sp/>a<sp/>certain<sp/>Coherent<sp/>sheaf</highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>only<sp/>included<sp/>0<sp/>times,<sp/>we<sp/>may<sp/>effectively<sp/>erase<sp/>it.</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>)):</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>len(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>[i]</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>[i]</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>[i]</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1aa0baf08c80270b5ccdf997788aeb1070" kindref="member">_combine_repeats</ref>(self):</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>combine<sp/>repeated<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>simplifying</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>complex,<sp/>as<sp/>we<sp/>can<sp/>combine<sp/>repeated<sp/>sheaves<sp/>into<sp/>a<sp/>single<sp/>sheaf<sp/>with<sp/>a<sp/>larger<sp/>dimension.</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>specifically<sp/>requires<sp/>the<sp/>__hash__<sp/>implementation<sp/>for<sp/>the<sp/>CoherentSheaf<sp/>and<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LineBundle<sp/>objects.</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dictionary<sp/>to<sp/>hold<sp/>combined<sp/>dimensions<sp/>for<sp/>each<sp/>(sheaf,<sp/>shift)<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>the<sp/>tuples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheaf,<sp/>dim,<sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>(sheaf,<sp/>shift)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>combined:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined[key]<sp/>+=<sp/>dim</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined[key]<sp/>=<sp/>dim</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unpack<sp/>the<sp/>combined<sp/>dictionary<sp/>back<sp/>into<sp/>the<sp/>class<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sheaf,<sp/>shift),<sp/>dim<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>combined.items():</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>.append(sheaf)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>.append(dim)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>.append(shift)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a36340635bb9a289121eb96778a5b4da3" kindref="member">get_smallest_phase</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>smallest<sp/>phase<sp/>of<sp/>the<sp/>chain<sp/>complex.<sp/>This<sp/>behaves<sp/>as<sp/>a<sp/>sort<sp/>of<sp/>&quot;smallest</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Harder-Narasimhan<sp/>factor&quot;<sp/>for<sp/>the<sp/>complex,<sp/>since<sp/>Chain<sp/>complexes<sp/>will<sp/>almost<sp/>never<sp/>be<sp/>stable<sp/>when</highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>have<sp/>objects<sp/>in<sp/>distinct<sp/>shifts.<sp/>The<sp/>phase<sp/>of<sp/>an<sp/>individual<sp/>element<sp/>of<sp/>a<sp/>chain<sp/>complex<sp/>generally</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires<sp/>that<sp/>object<sp/>to<sp/>be<sp/>stable,<sp/>so<sp/>that<sp/>we<sp/>typically<sp/>use<sp/>LineBundles<sp/>for<sp/>our<sp/>current<sp/>applications.<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>definition<sp/>of<sp/>a<sp/>slicing,<sp/>the<sp/>shift<sp/>of<sp/>each<sp/>object<sp/>in<sp/>the<sp/>complex<sp/>should<sp/>add<sp/>to<sp/>the<sp/>respective<sp/>phases;</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thus,<sp/>this<sp/>method<sp/>computes<sp/>the<sp/>smallest<sp/>sum<sp/>of<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>sheaf<sp/>and<sp/>the<sp/>shift<sp/>of<sp/>the<sp/>sheaf<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex.</highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>arguments<sp/>required<sp/>to<sp/>compute<sp/>the<sp/>phase.<sp/>The<sp/>number<sp/>of<sp/>arguments<sp/>and<sp/>the<sp/>type<sp/>of<sp/>arguments<sp/>will</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depend<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>For<sp/>P1,<sp/>the<sp/>phase<sp/>requires<sp/>a<sp/>single<sp/>complex<sp/>number.</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P2,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers.<sp/>For<sp/>K3,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numbers<sp/>and<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>float<sp/>The<sp/>smallest<sp/>phase<sp/>of<sp/>the<sp/>chain<sp/>complex</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>type<sp/>of<sp/>the<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>is<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>exactly<sp/>one<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>a<sp/>complex<sp/>number<sp/>as<sp/>an<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>exactly<sp/>two<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>exactly<sp/>three<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>not<sp/>implemented<sp/>for<sp/>this<sp/>variety.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Zip<sp/>the<sp/>three<sp/>lists<sp/>together<sp/>and<sp/>sort<sp/>by<sp/>descending<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_shift<sp/>=<sp/>min(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles<sp/>=<sp/>list(zip(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>))</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles_min_shift<sp/>=<sp/>filter(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[2]<sp/>==<sp/>min_shift<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x[2]<sp/>==<sp/>min_shift<sp/>+<sp/>1<sp/>,<sp/>bundles)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_phase<sp/>=<sp/>math.inf</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheaf,<sp/>dim,<sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bundles_min_shift:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sheaf.phase(*args)<sp/>+<sp/>shift<sp/>&lt;<sp/>min_phase:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_phase<sp/>=<sp/>sheaf.phase(*args)<sp/>+<sp/>shift</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_phase</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1adc104a639fb1e10753ad4552ba9b1792" kindref="member">get_largest_phase</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>largest<sp/>phase<sp/>of<sp/>the<sp/>chain<sp/>complex.<sp/>This<sp/>behaves<sp/>as<sp/>a<sp/>sort<sp/>of<sp/>&quot;largest</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Harder-Narasimhan<sp/>factor&quot;<sp/>for<sp/>the<sp/>complex,<sp/>since<sp/>Chain<sp/>complexes<sp/>will<sp/>almost<sp/>never<sp/>be<sp/>stable<sp/>when</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>they<sp/>have<sp/>objects<sp/>in<sp/>distinct<sp/>shifts.<sp/>The<sp/>phase<sp/>of<sp/>an<sp/>individual<sp/>element<sp/>of<sp/>a<sp/>chain<sp/>complex<sp/>generally</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires<sp/>that<sp/>object<sp/>to<sp/>be<sp/>stable,<sp/>so<sp/>that<sp/>we<sp/>typically<sp/>use<sp/>LineBundles<sp/>for<sp/>our<sp/>current<sp/>applications.</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>By<sp/>definition<sp/>of<sp/>a<sp/>slicing,<sp/>the<sp/>shift<sp/>of<sp/>each<sp/>object<sp/>in<sp/>the<sp/>complex<sp/>should<sp/>add<sp/>to<sp/>the<sp/>respective<sp/>phases;</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thus,<sp/>this<sp/>method<sp/>computes<sp/>the<sp/>largest<sp/>sum<sp/>of<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>sheaf<sp/>and<sp/>the<sp/>shift<sp/>of<sp/>the<sp/>sheaf<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complex.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>arguments<sp/>required<sp/>to<sp/>compute<sp/>the<sp/>phase.<sp/>The<sp/>number<sp/>of<sp/>arguments<sp/>and<sp/>the<sp/>type<sp/>of<sp/>arguments<sp/>will</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depend<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>For<sp/>P1,<sp/>the<sp/>phase<sp/>requires<sp/>a<sp/>single<sp/>complex<sp/>number.</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P2,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers.<sp/>For<sp/>K3,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numbers<sp/>and<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>float<sp/>The<sp/>largest<sp/>phase<sp/>of<sp/>the<sp/>chain<sp/>complex</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>type<sp/>of<sp/>the<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>is<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>exactly<sp/>one<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>a<sp/>complex<sp/>number<sp/>as<sp/>an<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>exactly<sp/>two<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>exactly<sp/>three<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>local<sp/>P1,<sp/>local<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Zip<sp/>the<sp/>three<sp/>lists<sp/>together<sp/>and<sp/>sort<sp/>by<sp/>descending<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_shift<sp/>=<sp/>max(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles<sp/>=<sp/>list(zip(self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a864ac31fa0d9fe9a4c50f803cc6023b8" kindref="member">sheaf_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a6373f5a40572d1c1b76bfb3e0b0bf40c" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ad30a876c85094c7347ea6180fb058171" kindref="member">shift_vector</ref>))</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundles_max_shift<sp/>=<sp/>filter(</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[2]<sp/>==<sp/>max_shift<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x[2]<sp/>==<sp/>max_shift<sp/>-<sp/>1,<sp/>bundles)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_phase<sp/>=<sp/>-math.inf</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sheaf,<sp/>dim,<sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bundles_max_shift:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>sheaf.phase(*args)<sp/>+<sp/>shift<sp/>&gt;<sp/>max_phase:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_phase<sp/>=<sp/>sheaf.phase(*args)<sp/>+<sp/>shift</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_phase</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1ab0ec73042f19e9896f67b2a1724928d7" kindref="member">is_semistable</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>whether<sp/>the<sp/>chain<sp/>complex<sp/>is<sp/>semistable.<sp/>This<sp/>almost<sp/>never<sp/>occurs,<sp/>since<sp/>if</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>complex<sp/>contains<sp/>two<sp/>or<sp/>more<sp/>stable<sp/>objects<sp/>of<sp/>distinct<sp/>phase,<sp/>it<sp/>will<sp/>never<sp/>be<sp/>stable.<sp/>For</highlight></codeline>
<codeline lineno="438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>example,<sp/>suppose<sp/>E2<sp/>is<sp/>a<sp/>stable<sp/>subobject<sp/>of<sp/>maximum<sp/>phase<sp/>and<sp/>E1<sp/>is<sp/>another<sp/>stable<sp/>object<sp/>with</highlight></codeline>
<codeline lineno="439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strictly<sp/>smaller<sp/>phase.<sp/>Then</highlight></codeline>
<codeline lineno="440"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E2<sp/>----&gt;<sp/>Complex<sp/>------&gt;<sp/>Cone</highlight></codeline>
<codeline lineno="442"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>destabilize<sp/>the<sp/>complex,<sp/>and<sp/>Cone<sp/>will<sp/>be<sp/>nontrivial<sp/>since<sp/>it<sp/>has<sp/>a<sp/>non-zero<sp/>map<sp/>to<sp/>E1.<sp/></highlight></codeline>
<codeline lineno="444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>easiest<sp/>way<sp/>to<sp/>check<sp/>that<sp/>the<sp/>complex<sp/>is<sp/>concentrated<sp/>in<sp/>only<sp/>a<sp/>single<sp/>phase<sp/>is<sp/>to<sp/>compare</highlight></codeline>
<codeline lineno="445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>largest<sp/>and<sp/>smallest<sp/>phases<sp/>from<sp/>the<sp/>previous<sp/>methods.</highlight></codeline>
<codeline lineno="446"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="447"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>arguments<sp/>required<sp/>to<sp/>compute<sp/>the<sp/>phase.<sp/>The<sp/>number<sp/>of<sp/>arguments<sp/>and<sp/>the<sp/>type<sp/>of<sp/>arguments<sp/>will</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depend<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>For<sp/>P1,<sp/>the<sp/>phase<sp/>requires<sp/>a<sp/>single<sp/>complex<sp/>number.</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P2,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers.<sp/>For<sp/>K3,<sp/>the<sp/>phase<sp/>requires<sp/>two<sp/>floating-point</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numbers<sp/>and<sp/>an<sp/>integer.</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>bool<sp/>True<sp/>if<sp/>the<sp/>chain<sp/>complex<sp/>is<sp/>semistable,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>type<sp/>of<sp/>the<sp/>arguments<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>sheaves<sp/>in<sp/>the<sp/>complex<sp/>is<sp/>not<sp/>implemented</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>exactly<sp/>one<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P1<sp/>requires<sp/>a<sp/>complex<sp/>number<sp/>as<sp/>an<sp/>argument.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>exactly<sp/>two<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>exactly<sp/>three<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(arg,<sp/>(float,int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>arg<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Phase<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>floating-point<sp/>numbers<sp/>as<sp/>arguments.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>local<sp/>P1,<sp/>local<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1adc104a639fb1e10753ad4552ba9b1792" kindref="member">get_largest_phase</ref>(*args)<sp/>==<sp/>self.<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex_1a36340635bb9a289121eb96778a5b4da3" kindref="member">get_smallest_phase</ref>(*args)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="src/ChainComplex.py"/>
  </compounddef>
</doxygen>
