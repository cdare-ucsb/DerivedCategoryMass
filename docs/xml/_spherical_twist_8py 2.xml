<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_spherical_twist_8py" kind="file" language="Python">
    <compoundname>SphericalTwist.py</compoundname>
    <innerclass refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" prot="public">src::SphericalTwist::HarderNarasimhanError</innerclass>
    <innerclass refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" prot="public">src::SphericalTwist::SphericalTwist</innerclass>
    <innerclass refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" prot="public">src::SphericalTwist::SphericalTwistSum</innerclass>
    <innerclass refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" prot="public">src::SphericalTwist::DoubleSphericalTwist</innerclass>
    <innernamespace refid="namespacesrc">src</innernamespace>
    <innernamespace refid="namespacesrc_1_1_spherical_twist">src::SphericalTwist</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacesrc_1_1_spherical_twist" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.CoherentSheaf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LineBundle</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.DerivedCategoryObject<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DerivedCategoryObject</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.DistinguishedTriangle<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DistinguishedTriangle</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.ChainComplex<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ChainComplex</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.ChernCharacter<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ChernCharacter</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cmath</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plotly.graph_objects<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>go</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceplotly_1_1graph__objs" kindref="compound">plotly.graph_objs</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">__CURRENT_DOUBLE_TWIST_IMPLEMENTED__<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Spherical<sp/>Twist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">#<sp/>----------------------------------------------------------------------------#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>This<sp/>object<sp/>is<sp/>used<sp/>to<sp/>represent<sp/>the<sp/>composition<sp/>of<sp/>spherical<sp/>twists<sp/>in<sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>in<sp/>the<sp/>derived<sp/>category<sp/>of<sp/>local<sp/>projective<sp/>space<sp/><sp/>consisting<sp/>of<sp/>sheaves<sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>supported<sp/>on<sp/>the<sp/>zero<sp/>divisor<sp/>(the<sp/>original<sp/>projective<sp/>space)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>In<sp/>particular,<sp/>the<sp/>only<sp/>compositions<sp/>of<sp/>twists<sp/>we<sp/>consier<sp/>are<sp/>twists<sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>around<sp/>(pushforwards)<sp/>of<sp/>line<sp/>bundles.<sp/>Theoretically,<sp/>since<sp/>the<sp/>derived<sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>category<sp/>of<sp/>coherent<sp/>sheaves<sp/>on<sp/>projective<sp/>space<sp/>is<sp/>constructible,<sp/>the<sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>braid<sp/>relations<sp/>between<sp/>spherical<sp/>twists<sp/>allow<sp/>any<sp/>object<sp/>obtained<sp/>as<sp/>a<sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>series<sp/>of<sp/>spherical<sp/>twists<sp/>to<sp/>be<sp/>represented<sp/>as<sp/>a<sp/>sequence<sp/>of<sp/>spherical<sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>twists<sp/>specifically<sp/>around<sp/>line<sp/>bundles.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>In<sp/>order<sp/>to<sp/>determine<sp/>possible<sp/>Harder-Narasimhan<sp/>filtrations<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>spherical<sp/>twists,<sp/>we<sp/>need<sp/>to<sp/>iteratively<sp/>keep<sp/>track<sp/>of<sp/>previous<sp/>Harder-<sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Narasimhan<sp/>filtrations.<sp/>At<sp/>the<sp/>moment,<sp/>this<sp/>is<sp/>only<sp/>computed<sp/>up<sp/>to<sp/>two<sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>successive<sp/>spherical<sp/>twists.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(Exception):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Exception<sp/>raised<sp/>when<sp/>the<sp/>correct<sp/>Harder-Narasimhan<sp/>filtration<sp/>cannot<sp/>be<sp/>found<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Attributes:</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>(str)<sp/>:<sp/>The<sp/>error<sp/>message</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters<sp/>(tuple)<sp/>:<sp/>The<sp/>stability<sp/>parameters<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>Harder-Narasimhan<sp/>factors</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error_1ad8666384a318fb06e069988617438d63" kindref="member">__init__</ref>(self,<sp/>*args,<sp/>**kwargs):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error_1ad8666384a318fb06e069988617438d63" kindref="member">__init__</ref>(*args)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error_1a247019cf436761ee38e1dd7b11e6c8c1" kindref="member">message</ref><sp/>=<sp/>kwargs.get(</highlight><highlight class="stringliteral">&apos;message&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stability_parameters<sp/>=<sp/>kwargs.get(</highlight><highlight class="stringliteral">&apos;stability_parameters&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>spherical<sp/>twist<sp/>is<sp/>a<sp/>non-standard<sp/>autoequivalence<sp/>of<sp/>the<sp/>derived<sp/>category<sp/>of<sp/>coherent<sp/>sheaves,<sp/>in<sp/>the<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>sense<sp/>that<sp/>it<sp/>does<sp/>not<sp/>arise<sp/>from<sp/>any<sp/>composition<sp/>of<sp/>(1)<sp/>standard<sp/>autoequivalences<sp/>on<sp/>the<sp/>variety<sp/>(2)<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>tensoring<sp/>by<sp/>line<sp/>bundles<sp/>and<sp/>(3)<sp/>(co)homological<sp/>shifts.<sp/>Such<sp/>autoequivalences<sp/>typically<sp/>only<sp/>arise<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>case<sp/>of<sp/>Calabi-Yau<sp/>categories<sp/>and<sp/>toric<sp/>varieties<sp/>(where<sp/>(-2)-curves<sp/>can<sp/>exist<sp/>in<sp/>the<sp/>Fano<sp/>setting<sp/>as<sp/>well,<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>e.g.<sp/>P^2<sp/>blown<sp/>up<sp/>at<sp/>2<sp/>points),<sp/>but<sp/>often<sp/>control<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>stability<sp/>manifold.<sp/>They<sp/>are<sp/>also<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>relevant<sp/>to<sp/>homological<sp/>mirror<sp/>symmetry<sp/>since<sp/>they<sp/>are<sp/>the<sp/>derived<sp/>equivalent<sp/>of<sp/>Dehn<sp/>twists<sp/>in<sp/>the<sp/>Fukaya</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>category<sp/>in<sp/>the<sp/>symplectic<sp/>setting.<sp/>They<sp/>are<sp/>explicitly<sp/>defined<sp/>as<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>derived<sp/>evaluation<sp/>morphism</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(A,<sp/>B)<sp/>⊗<sp/>A<sp/>----&gt;<sp/><sp/>B<sp/>----&gt;<sp/>Tw_A<sp/>B</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>where<sp/>A<sp/>is<sp/>a<sp/>spherical<sp/>object<sp/>in<sp/>the<sp/>sense<sp/>that<sp/>RHom(A,A)<sp/>is<sp/>isomorphic<sp/>as<sp/>a<sp/>graded-vector<sp/>space<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>singular<sp/>cohomology<sp/>of<sp/>an<sp/>n-sphere.</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Currently,<sp/>we<sp/>only<sp/>consider<sp/>spherical<sp/>twists<sp/>around<sp/>line<sp/>bundles<sp/>in<sp/>the<sp/>derived<sp/>category<sp/>of<sp/>coherent<sp/>sheaves</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>since<sp/>they<sp/>always<sp/>yield<sp/>examples<sp/>of<sp/>spherical<sp/>objects<sp/>for<sp/>Local<sp/>P^n<sp/>and<sp/>K3<sp/>surfaces.<sp/>On<sp/>K3<sp/>surfaces,<sp/>it<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>true<sp/>that<sp/>the<sp/>spherical<sp/>twists<sp/>account<sp/>for<sp/>all<sp/>spherical<sp/>objects,<sp/>but<sp/>they<sp/>are<sp/>still<sp/>provide<sp/>a<sp/>rich<sp/>source<sp/>of</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>examples<sp/>to<sp/>help<sp/>predict<sp/>mass<sp/>growth.</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a9a67efb1d59e905c5e7cfdb7cc309daa" kindref="member">__init__</ref>(self,<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>degree=1):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>an<sp/>instance<sp/>of<sp/>SphericalTwist<sp/>with<sp/>the<sp/>specified<sp/>line<sp/>bundles.<sp/>The<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>defined<sp/>as<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>evaluation<sp/>morphism<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>O(b))<sp/>⊗<sp/>O(a)<sp/>----&gt;<sp/><sp/>O(b)<sp/>----&gt;<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>O(a)<sp/>and<sp/>O(b)<sp/>denote<sp/>either<sp/>line<sp/>bundles<sp/>or<sp/>pushforwards<sp/>of<sp/>line<sp/>bundles<sp/>along<sp/>the<sp/>inclusion<sp/>of<sp/>the<sp/>zero<sp/>section.<sp/></highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>spherical<sp/>twist<sp/>is<sp/>represented<sp/>as<sp/>a<sp/>distinguished<sp/>triangle<sp/>in<sp/>the<sp/>derived<sp/>category<sp/>of<sp/>coherent</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheaves.<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Several<sp/>helper<sp/>methods<sp/>are<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>line<sp/>bundles,<sp/>and<sp/>then<sp/>to<sp/>construct<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2:<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>An<sp/>optional<sp/>argument<sp/>for<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>variety,<sp/>which<sp/>is<sp/>relevant<sp/>to<sp/>the<sp/>dimension<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>derived<sp/>RHom<sp/>space<sp/>for<sp/>K3<sp/>surfaces<sp/>of<sp/>picard<sp/>rank<sp/>1.<sp/>This<sp/>does<sp/>not<sp/>affect<sp/>the<sp/>P1<sp/>or<sp/>P2<sp/>implementations.</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>line<sp/>bundles<sp/>are<sp/>not<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_2.catagory:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a16387ebcbf8065fea959f9b1f2c96185" kindref="member">line_bundle_1</ref><sp/>=<sp/>line_bundle_1<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1ac3e080e6277d060fcc6b56c076461e27" kindref="member">line_bundle_2</ref><sp/>=<sp/>line_bundle_2<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>=<sp/>line_bundle_1.catagory<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1ae2bccb64f12b9d586d8ca3cf4688f157" kindref="member">degree</ref><sp/>=<sp/>degree<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a45bab068cfcf3ed76462c137df88cd4b" kindref="member">defining_triangle</ref><sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1af4a147a84ede8e924aa4b92f98bede80" kindref="member">_sph_twist_LineBundles</ref>(line_bundle_1,<sp/>line_bundle_2)<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a2dbfba1b1b215dfdb4e58bd160819479" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>by<sp/>printing<sp/>the<sp/>defining<sp/>triangle</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a45bab068cfcf3ed76462c137df88cd4b" kindref="member">defining_triangle</ref>.object3)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1af4a147a84ede8e924aa4b92f98bede80" kindref="member">_sph_twist_LineBundles</ref>(self,<sp/>line_bundle_1,<sp/>line_bundle_2):</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>which<sp/>uses<sp/>the<sp/>__dimHom_LineBundlesP2<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>defining<sp/>triangle<sp/>for<sp/>a<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single<sp/>spherical<sp/>twist<sp/>of<sp/>a<sp/>line<sp/>bundle<sp/>around<sp/>another<sp/>line<sp/>bundle.<sp/>The<sp/>twist<sp/>is<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tw_lb1<sp/>lb2<sp/>=<sp/>Cone(<sp/><sp/>Hom(lb_1,<sp/>lb_2)<sp/>⊗<sp/>lb_1<sp/>----&gt;<sp/><sp/>lb_2<sp/>)</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1:<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2:<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>DistinguishedTriangle<sp/>The<sp/>distinguished<sp/>triangle<sp/>representing<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homDims<sp/>=<sp/><ref refid="namespacesrc_1_1_spherical_twist_1a1c38ced9519f6b38d31ba2b21e85bf0d" kindref="member">_dimHom_LineBundles</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1ae2bccb64f12b9d586d8ca3cf4688f157" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_vector<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>the<sp/>necessary<sp/>lists<sp/>for<sp/>the<sp/>ChainComplex<sp/>constructor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(homDims)):</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>homDims[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector.append(homDims[i])</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector.append(-1*i)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_vector.append(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1.degree,<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object1<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=bundle_vector,<sp/>shift_vector=shift_vector,<sp/>dimension_vector=dimension_vector)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>While<sp/>we<sp/>technically<sp/>can<sp/>simply<sp/>case<sp/>object2<sp/>=<sp/>line_bundle_2,<sp/>we<sp/>will<sp/>use<sp/>the<sp/>ChainComplex<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>since<sp/>several<sp/>successive<sp/>methods<sp/>call<sp/>sheaf_vector[i]<sp/>and<sp/>shift_vector[i].<sp/>A<sp/>significant<sp/>overhaul<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>be<sp/>needed<sp/>to<sp/>change<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object2<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_2.degree,<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>)],<sp/>shift_vector=[0],<sp/>dimension_vector=[1])</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object3<sp/>=<sp/><ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>(string=f</highlight><highlight class="stringliteral">&quot;Tw_{line_bundle_1.degree}<sp/>O({line_bundle_2.degree})&quot;</highlight><highlight class="normal">,<sp/>catagory=self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_distinguished_triangle_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref>(object1,<sp/>object2,<sp/>object3)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a183209b78a4202824b036ab2ebe40b91" kindref="member">chernCharacter</ref>(self):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>spherical<sp/>twist.<sp/>The<sp/>Chern<sp/>Character<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spherical<sp/>twist<sp/>is<sp/>the<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>third<sp/>object<sp/>in<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChernCharacter<sp/>The<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a45bab068cfcf3ed76462c137df88cd4b" kindref="member">defining_triangle</ref>.object3.chernCharacter()</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a0cae017d37b0e69454f7d039b77f3a54" kindref="member">shift</ref>(self,<sp/>n):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>shift<sp/>the<sp/>spherical<sp/>twist<sp/>by<sp/>n<sp/>units.<sp/>As<sp/>a<sp/>spherical<sp/>twist<sp/>is<sp/>initially<sp/>only</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specified<sp/>as<sp/>a<sp/>string<sp/>until<sp/>its<sp/>defining<sp/>triangle<sp/>is<sp/>computed,<sp/>the<sp/>shift<sp/>method<sp/>simply</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relies<sp/>on<sp/>the<sp/>implementation<sp/>in<sp/>the<sp/>parent<sp/>class<sp/>DerivedCategoryObject.</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>n:<sp/>The<sp/>number<sp/>of<sp/>units<sp/>to<sp/>shift<sp/>the<sp/>object<sp/>by</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>DerivedCategoryObject<sp/>The<sp/>shifted<sp/>object</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(n,<sp/>int):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;Shift<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a45bab068cfcf3ed76462c137df88cd4b" kindref="member">defining_triangle</ref>.object3.shift(n)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a3548c15b0993329cebd465170cb78c00" kindref="member">central_charge</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist.<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist<sp/>is<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>third<sp/>object<sp/>in<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>as<sp/>a<sp/>complex<sp/>number<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1*ch[1]<sp/>+<sp/>args[0]*ch[0]</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(-1*ch[2]<sp/>+</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[1]<sp/>*<sp/>ch[0],</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[1]<sp/>-<sp/>args[0]<sp/>*<sp/>ch[0])</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>args[1]</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>args[2]</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(2*d*alpha<sp/>*<sp/>ch[1]<sp/>-<sp/>ch[2]<sp/>-<sp/>ch[0]<sp/>+<sp/>(beta**2<sp/>-<sp/>alpha**2)*d*ch[0],<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*d*ch[1]<sp/>-<sp/>2*d*alpha*beta*ch[0])</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a72577f81014ad8387458603c9fd522f8" kindref="member">is_semistable</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>check<sp/>if<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>stable.<sp/>The<sp/>spherical<sp/>twist<sp/>is<sp/>stable<sp/>if<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtration<sp/>is<sp/>trivial,<sp/>i.e.<sp/>just<sp/>the<sp/>object<sp/>itself.</highlight></codeline>
<codeline lineno="279"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="283"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>True<sp/>if<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>stable,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters.<sp/>Currently<sp/>{}<sp/>parameters<sp/>given:<sp/>{}&quot;</highlight><highlight class="normal">.format(len(args),<sp/>args))</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a68f7b3d2761fa842f86e7e6405ce7fb4" kindref="member">get_HN_factors</ref>(*args))<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>determine<sp/>if<sp/>{self}<sp/>is<sp/>semistable<sp/>at<sp/>{e.stability_parameters}:<sp/>{e.message}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a729ebfa2e5edd9a786917301cfdaebc1" kindref="member">mass</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Computes<sp/>the<sp/>mass<sp/>of<sp/>an<sp/>object<sp/>in<sp/>the<sp/>derived<sp/>catagory.<sp/>The<sp/>mass<sp/>of<sp/>a<sp/>stable<sp/>object<sp/>is<sp/>simply<sp/>the<sp/>modulus</highlight></codeline>
<codeline lineno="325"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>its<sp/>central<sp/>charge.<sp/>For<sp/>a<sp/>non-stable<sp/>object,<sp/>the<sp/>mass<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>masses<sp/>of<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="326"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factors<sp/>of<sp/>the<sp/>object.<sp/>The<sp/>notion<sp/>of<sp/>the<sp/>mass<sp/>of<sp/>an<sp/>object<sp/>is<sp/>derived<sp/>from<sp/>string<sp/>theory,<sp/>where<sp/>BPS<sp/>states</highlight></codeline>
<codeline lineno="327"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>characterized<sp/>as<sp/>objects<sp/>which<sp/>satisfy<sp/>the<sp/>BPS<sp/>bound<sp/>M<sp/>=<sp/>|Z|.<sp/>For<sp/>non-BPS<sp/>states,<sp/>one<sp/>simply<sp/>has<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|Z|<sp/>&lt;<sp/>M.<sp/>The<sp/>mass<sp/>of<sp/>a<sp/>Bridgeland<sp/>stability<sp/>condition<sp/>is<sp/>given<sp/>by<sp/>the<sp/>sum<sp/>of<sp/>its<sp/>semistable<sp/>factors,<sp/>which<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresponds<sp/>to<sp/>the<sp/>decomposition<sp/>of<sp/>an<sp/>object<sp/>in<sp/>the<sp/>derived<sp/>category<sp/>into<sp/>Harder-Narasimhan<sp/>factors.</highlight></codeline>
<codeline lineno="330"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>As<sp/>a<sp/>consequence,<sp/>this<sp/>method<sp/>heavily<sp/>relies<sp/>on<sp/>the<sp/>get_HN_factors<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="331"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factors<sp/>of<sp/>the<sp/>object.</highlight></codeline>
<codeline lineno="332"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>The<sp/>mass<sp/>of<sp/>the<sp/>object,<sp/>as<sp/>a<sp/>non-negative<sp/>real<sp/>number<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_filtration<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a68f7b3d2761fa842f86e7e6405ce7fb4" kindref="member">get_HN_factors</ref>(*args)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(derived_cat_obj,<sp/>_)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>HN_filtration:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>+=<sp/>abs(derived_cat_obj.central_charge(*args))</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mass</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>determine<sp/>mass<sp/>of<sp/>{self}<sp/>at<sp/>{e.stability_parameters}:<sp/>{e.message}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a68f7b3d2761fa842f86e7e6405ce7fb4" kindref="member">get_HN_factors</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>the<sp/>main<sp/>workhorse<sp/>of<sp/>the<sp/>SphericalTwist<sp/>class.<sp/>It<sp/>computes<sp/>the<sp/>Harder-Narasimhan<sp/>factors</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>object.<sp/>It<sp/>is<sp/>generally<sp/>assumed<sp/>that<sp/>for<sp/>a<sp/>single<sp/>spherical<sp/>twist,<sp/>the<sp/>only<sp/>way</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>an<sp/>object<sp/>can<sp/>destabilize<sp/>is<sp/>when<sp/>an<sp/>element<sp/>of<sp/>the<sp/>last<sp/>term<sp/>of<sp/>the<sp/>defining<sp/>triangle</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>O(a)<sp/>-----&gt;<sp/>Tw_O(a)<sp/>O(b)<sp/>--------&gt;<sp/><sp/>O(b)[n]<sp/>⊕<sp/>O(b)[n+1]</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>larger<sp/>phase<sp/>than<sp/>O(a).<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>depend<sp/>on<sp/></highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>object<sp/>it<sp/>is<sp/>that<sp/>has<sp/>larger<sp/>phase.<sp/>For<sp/>example,<sp/>if<sp/>the<sp/>minimum<sp/>shift<sp/>has<sp/>larger<sp/>phase,<sp/>then<sp/>we<sp/>assume</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>the<sp/>object<sp/>must<sp/>be<sp/>strictly<sp/>stable<sp/>-<sp/>THIS<sp/>IS<sp/>A<sp/>CONJECTURE.<sp/>If<sp/>the<sp/>maximum<sp/>shift<sp/>has<sp/>smaller<sp/>phase,<sp/>then</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>triangle<sp/>above<sp/>leads<sp/>to<sp/>a<sp/>Harder-Narasimhan<sp/>filtration,<sp/>so<sp/>that<sp/>the<sp/>individual<sp/>line<sp/>bundle<sp/>sums<sp/>are<sp/>precisely</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>HN<sp/>factors;<sp/>this<sp/>is<sp/>a<sp/>result<sp/>of<sp/>Bapat-Deopurkar-Licata<sp/>(2020).</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>most<sp/>difficult<sp/>case<sp/>is<sp/>when<sp/>the<sp/>smaller<sp/>phase<sp/>O(b)[n]<sp/>is<sp/>smaller<sp/>than<sp/>O(a)<sp/>is<sp/>smaller<sp/>than<sp/>O(b)[n+1].<sp/>In<sp/>this<sp/></highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>some<sp/>homological<sp/>algebra<sp/>is<sp/>required<sp/>to<sp/>show<sp/>that<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>composed<sp/>map<sp/></highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tw_O(a)<sp/>O(b)<sp/>-------&gt;<sp/>O(b)[n+1]</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fits<sp/>into<sp/>a<sp/>distinguished<sp/>triangle<sp/>O(a)<sp/>----&gt;<sp/>Cone<sp/>----&gt;<sp/>O(b)[n].<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Instead<sp/>of<sp/>returning<sp/>the<sp/>objects<sp/>alone,<sp/>the<sp/>method<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>tuples,<sp/>where<sp/>the<sp/>first<sp/>element<sp/>is<sp/>the<sp/>semistable</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>and<sp/>the<sp/>second<sp/>element<sp/>is<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>object.<sp/>This<sp/>is<sp/>done<sp/>to<sp/>make<sp/>computing<sp/>largest<sp/>and<sp/>smallest<sp/>semistable</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factors<sp/>easier<sp/>in<sp/>the<sp/>DoubleSphericalTwist<sp/>class.</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>list<sp/>is<sp/>always<sp/>returned<sp/>in<sp/>reverse<sp/>order<sp/>of<sp/>the<sp/>phase,<sp/>so<sp/>that<sp/>the<sp/>smallest<sp/>phase<sp/>HN<sp/>factor<sp/>is<sp/>last<sp/>and<sp/>the<sp/>largest</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>first.</highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>It<sp/>should<sp/>be<sp/>noted<sp/>that<sp/>several<sp/>assumptions<sp/>in<sp/>this<sp/>have<sp/>not<sp/>been<sp/>verified<sp/>outside<sp/>of<sp/>the<sp/>quiver</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>the<sp/>first<sp/>element<sp/>is<sp/>a<sp/>DerivedCategoryObject<sp/>and<sp/>the<sp/>second<sp/>element<sp/>is<sp/>a<sp/>float</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representing<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>object.<sp/>The<sp/>list<sp/>is<sp/>always<sp/>returned<sp/>in<sp/>such<sp/>a<sp/>way<sp/>that<sp/>the<sp/>largest<sp/>phase</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN<sp/>factor<sp/>is<sp/>first<sp/>and<sp/>smallest<sp/>is<sp/>last.</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>HarderNarasimhanError<sp/>If<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>stable<sp/>but<sp/>the<sp/>phase<sp/>cannot<sp/>be<sp/>found</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_defining_triangle<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_1a45bab068cfcf3ed76462c137df88cd4b" kindref="member">defining_triangle</ref>.rotateLeft()</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subobject<sp/>=<sp/>modified_defining_triangle.object1.sheaf_vector[0]</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quotient_complex<sp/>=<sp/>modified_defining_triangle.object3</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subobject.phase(*args)<sp/>&lt;=<sp/>quotient_complex.get_smallest_phase(*args):</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>object<sp/>is<sp/>(ASSUMED<sp/>TO<sp/>BE<sp/>---<sp/>CONJECTURE)<sp/>stable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential_phase<sp/>=<sp/>cmath.phase(self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a181bcb14152a914997c7990b33b51c18" kindref="member">central_charge</ref>(*args))<sp/>/<sp/>math.pi</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Attempt<sp/>to<sp/>find<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>object;<sp/>ideally<sp/>this<sp/>value<sp/>of<sp/>n<sp/>should<sp/>be<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>This<sp/>is<sp/>a<sp/>temporary<sp/>fix<sp/>to<sp/>the<sp/>problem<sp/>of<sp/>finding<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>the<sp/>object<sp/>is<sp/>stable.<sp/>We<sp/>really<sp/>shouldnt<sp/>be<sp/>considering<sp/>odd<sp/>dimensional<sp/>shifts,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>run<sp/>into<sp/>an<sp/>error<sp/>when<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>twist<sp/>is<sp/>larger<sp/>than<sp/>both<sp/>the<sp/>subobject<sp/>an<sp/>quotient;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>a<sp/>temporary<sp/>fix<sp/>to<sp/>this<sp/>occurse<sp/>when<sp/>the<sp/>subobject<sp/>and<sp/>quotient<sp/>differ<sp/>by<sp/>phase<sp/>&gt;<sp/>1<sp/>so<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>they<sp/>no<sp/>longer<sp/>lie<sp/>in<sp/>the<sp/>same<sp/>heart.<sp/>In<sp/>particular,<sp/>this<sp/>causes<sp/>a<sp/>discontinuity<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>algebraic<sp/>regions<sp/>of<sp/>the<sp/>stability<sp/>manifold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-3,3):</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subobject.phase(*args)<sp/>&lt;=<sp/>potential_phase<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>potential_phase<sp/>+<sp/>n<sp/>&lt;=<sp/>quotient_complex.get_largest_phase(*args):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(self,<sp/>potential_phase<sp/>+<sp/>n)]</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;{self}<sp/>should<sp/>theoretically<sp/>be<sp/>stable,<sp/>but<sp/>could<sp/>not<sp/>find<sp/>phase&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(quotient_complex.dimension_vector)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>quotient<sp/>object<sp/>has<sp/>only<sp/>one<sp/>term<sp/>/<sp/>is<sp/>concentrated<sp/>in<sp/>a<sp/>single<sp/>degree<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>its<sp/>phase<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>subobject.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>defining<sp/>triangle<sp/>O(a)<sp/>-&gt;<sp/>Tw<sp/>-&gt;<sp/>O(b)[shift]<sp/>should<sp/>in<sp/>fact<sp/>be<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Harder-Narasimhan<sp/>filtration<sp/>in<sp/>this<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(modified_defining_triangle.object1,<sp/>subobject.phase(*args)),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(quotient_complex,<sp/>quotient_complex.get_smallest_phase(*args))]</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Twist<sp/>is<sp/>unstable<sp/>and<sp/>the<sp/>hom<sp/>space<sp/>is<sp/>concentrated<sp/>in<sp/>more<sp/>than<sp/>one<sp/>degree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(quotient_complex.dimension_vector)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;The<sp/>Hom<sp/>object<sp/>is<sp/>not<sp/>concentrated<sp/>in<sp/>1<sp/>or<sp/>2<sp/>degrees&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase0<sp/>=<sp/>quotient_complex.sheaf_vector[0].phase(*args)<sp/>+<sp/>quotient_complex.shift_vector[0]</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase1<sp/>=<sp/>quotient_complex.sheaf_vector[1].phase(*args)<sp/>+<sp/>quotient_complex.shift_vector[1]</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_phase<sp/>=<sp/>max(phase0,<sp/>phase1)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CASE<sp/>1:<sp/>phi(subobj)<sp/>&gt;<sp/>largest<sp/>phase(quotient)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subobject.phase(*args)<sp/>&gt;<sp/>largest_phase:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>By<sp/>BDL20,<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the<sp/>subobject<sp/>and<sp/>quotient<sp/>concatenate<sp/>to<sp/>make<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the<sp/>twist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>largest_phase<sp/>==<sp/>phase0:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(modified_defining_triangle.object1,<sp/>subobject.phase(*args)),<sp/></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[0]],<sp/>shift_vector=[quotient_complex.shift_vector[0]],<sp/>dimension_vector=[quotient_complex.dimension_vector[0]]),<sp/>phase0),</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[1]],<sp/>shift_vector=[quotient_complex.shift_vector[1]],<sp/>dimension_vector=[quotient_complex.dimension_vector[1]]),<sp/>phase1)]</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(modified_defining_triangle.object1,<sp/>subobject.phase(*args)),<sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[1]],<sp/>shift_vector=[quotient_complex.shift_vector[1]],<sp/>dimension_vector=[quotient_complex.dimension_vector[1]]),<sp/>phase1),</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[0]],<sp/>shift_vector=[quotient_complex.shift_vector[0]],<sp/>dimension_vector=[quotient_complex.dimension_vector[0]]),<sp/>phase0)]</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>CASE<sp/>2:<sp/>smallest<sp/>phase(Quotient)<sp/>&lt;<sp/>phi(subobj)<sp/>&lt;<sp/>largest<sp/>phase(quotient)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>the<sp/>most<sp/>difficult<sp/>case<sp/>to<sp/>handle<sp/>since<sp/>we<sp/>must<sp/>in<sp/>fact<sp/>consider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>cone<sp/>of<sp/>the<sp/>composed<sp/>map<sp/>Tw_O(a)<sp/>O(b)<sp/>----&gt;<sp/>O(b)[shift]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>largest_phase<sp/>==<sp/>phase0:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller_idx<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>larger_idx<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller_idx<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>larger_idx<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>isolate<sp/>single<sp/>element<sp/>of<sp/>larger<sp/>shift<sp/>in<sp/>the<sp/>quotient<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smaller_phase_complex<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[smaller_idx]],</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[smaller_idx]],</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[smaller_idx]])</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>larger_phase_complex<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[larger_idx]],</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[larger_idx]],</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[larger_idx]])</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_subobject<sp/>=<sp/>subobject.phase(*args)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_larger_complex<sp/>=<sp/>quotient_complex.sheaf_vector[larger_idx].phase(*args)<sp/>+<sp/>quotient_complex.shift_vector[larger_idx]</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central_charge_cone<sp/>=<sp/>larger_phase_complex.central_charge(*args)<sp/>+<sp/>subobject.central_charge(*args)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cone_object<sp/>=<sp/><ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>(string=</highlight><highlight class="stringliteral">&quot;Cone&quot;</highlight><highlight class="normal">,<sp/>catagory=self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>,<sp/>chern_character=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cone_triangle<sp/>=<sp/><ref refid="classsrc_1_1_distinguished_triangle_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref>(modified_defining_triangle.object1,<sp/>cone_object,<sp/>larger_phase_complex)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Need<sp/>to<sp/>compute<sp/>phase<sp/>of<sp/>cone<sp/>to<sp/>make<sp/>a<sp/>StableObject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_cone<sp/>=<sp/>cmath.phase(central_charge_cone)<sp/>/<sp/>math.pi</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>This<sp/>is<sp/>a<sp/>temporary<sp/>fix<sp/>to<sp/>the<sp/>problem<sp/>of<sp/>finding<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>the<sp/>object<sp/>is<sp/>stable.<sp/>We<sp/>really<sp/>shouldnt<sp/>be<sp/>considering<sp/>odd<sp/>dimensional<sp/>shifts,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>run<sp/>into<sp/>an<sp/>error<sp/>when<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>twist<sp/>is<sp/>larger<sp/>than<sp/>both<sp/>the<sp/>subobject<sp/>an<sp/>quotient;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>a<sp/>temporary<sp/>fix<sp/>to<sp/>this<sp/>occurse<sp/>when<sp/>the<sp/>subobject<sp/>and<sp/>quotient<sp/>differ<sp/>by<sp/>phase<sp/>&gt;<sp/>1<sp/>so<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>they<sp/>no<sp/>longer<sp/>lie<sp/>in<sp/>the<sp/>same<sp/>heart.<sp/>In<sp/>particular,<sp/>this<sp/>causes<sp/>a<sp/>discontinuity<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>algebraic<sp/>regions<sp/>of<sp/>the<sp/>stability<sp/>manifold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-3,3):</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phase_subobject<sp/>&lt;=<sp/>phase_cone<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>phase_cone<sp/>+<sp/>n<sp/>&lt;=<sp/>phase_larger_complex:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(cone_triangle.object2,<sp/>phase_cone<sp/>+<sp/>n),</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(smaller_phase_complex,<sp/>smaller_phase_complex.get_smallest_phase(*args))]</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>phase<sp/>of<sp/>cone<sp/>{cone_object}<sp/>in<sp/>\n{cone_triangle}&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570" refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>(<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>):</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>acts<sp/>similar<sp/>to<sp/>the<sp/>ChainComplex<sp/>class<sp/>for<sp/>CoherentSheaf;<sp/>specifically,<sp/>when<sp/>considering</highlight></codeline>
<codeline lineno="573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>double<sp/>(or<sp/>any<sp/>n&gt;1)<sp/>spherical<sp/>twists,<sp/>there<sp/>are<sp/>always<sp/>triangles<sp/>that<sp/>the<sp/>twist<sp/>will<sp/>fit<sp/>into<sp/>that<sp/>are<sp/></highlight></codeline>
<codeline lineno="574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>not<sp/>necessarily<sp/>the<sp/>defining<sp/>triangle<sp/>and<sp/>can<sp/>be<sp/>obtained<sp/>by<sp/>applying<sp/>the<sp/>twist<sp/>functor<sp/>to<sp/>the<sp/>defining</highlight></codeline>
<codeline lineno="575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>triangle<sp/>of<sp/>the<sp/>individual<sp/>twists<sp/>---<sp/>such<sp/>triangles<sp/>will<sp/>often<sp/>involve<sp/>the<sp/>sum<sp/>of<sp/>shifts<sp/>of<sp/>spherical<sp/>twists,</highlight></codeline>
<codeline lineno="576"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>so<sp/>we<sp/>need<sp/>an<sp/>implementation<sp/>for<sp/>keeping<sp/>track<sp/>of<sp/>such<sp/>objects<sp/>in<sp/>a<sp/>single<sp/>argument<sp/>of<sp/>the<sp/>DistinguishedTriangle.</highlight></codeline>
<codeline lineno="577"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>For<sp/>successive<sp/>spherical<sp/>twist<sp/>applications,<sp/>this<sp/>entire<sp/>procedure<sp/>will<sp/>likely<sp/>need<sp/>to<sp/>be<sp/>generalized<sp/>since</highlight></codeline>
<codeline lineno="579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>it<sp/>is<sp/>inefficient<sp/>to<sp/>encode<sp/>DoubleSphericalTwistSum,<sp/>TripeSphericalTwistSum,<sp/>etc.<sp/>as<sp/>separate<sp/>classes.</highlight></codeline>
<codeline lineno="580"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="581"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1aa25c589a6642867e6a6fd9beed0e0f51" kindref="member">__init__</ref>(self,<sp/>line_bundle_pairs_vector,<sp/>dimension_vector,<sp/>shift_vector,<sp/>degree=1):</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>an<sp/>instance<sp/>of<sp/>SphericalTwistSum<sp/>with<sp/>the<sp/>specified<sp/>line<sp/>bundles.<sp/>This<sp/>class<sp/>is<sp/>used</highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>represent<sp/>objects<sp/>of<sp/>the<sp/>form</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="589"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tw_{a_1}<sp/>O(b_1)^{n_1}[s_1]<sp/>⊕<sp/>Tw_{a_2}<sp/>O(b_2)^{n_2}[s_2]}</highlight></codeline>
<codeline lineno="590"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>the<sp/>spherical<sp/>twists<sp/>are<sp/>defined<sp/>as<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>evaluation<sp/>morphism</highlight></codeline>
<codeline lineno="592"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="593"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>O(b))<sp/>⊗<sp/>O(a)<sp/>----&gt;<sp/><sp/>O(b)<sp/>----&gt;<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>primarily<sp/>used<sp/>for<sp/>DoubleSphericalTwist,<sp/>since<sp/>the<sp/>second<sp/>canonical<sp/>triangle</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>often<sp/>be<sp/>a<sp/>sum<sp/>of<sp/>spherical<sp/>twists.</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>line_bundle_pairs_vector:<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>each<sp/>tuple<sp/>is<sp/>a<sp/>pair<sp/>of<sp/>line<sp/>bundles<sp/>(lb1,<sp/>lb2)<sp/>that<sp/>the<sp/>spherical<sp/>twist<sp/>is</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>dimension_vector<sp/>A<sp/>list<sp/>of<sp/>non-negative<sp/>integers<sp/>representing<sp/>the<sp/>number<sp/>of<sp/>times<sp/>each<sp/>spherical<sp/>twist<sp/>is<sp/>applied</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>list<sp/>shift_vector<sp/>A<sp/>list<sp/>of<sp/>integers<sp/>representing<sp/>the<sp/>shift<sp/>of<sp/>each<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>An<sp/>optional<sp/>argument<sp/>for<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>variety,<sp/>which<sp/>is<sp/>relevant<sp/>to<sp/>the<sp/>dimension<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>derived<sp/>RHom<sp/>space<sp/>for<sp/>K3<sp/>surfaces<sp/>of<sp/>picard<sp/>rank<sp/>1.<sp/>This<sp/>does<sp/>not<sp/>affect<sp/>the<sp/>P1<sp/>or<sp/>P2<sp/>implementations.</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="605"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_pairs_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>tuples</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>dimension_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>integers</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>shift_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>integers</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>line_bundle_pairs_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>with<sp/>exactly<sp/>two<sp/>elements</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>line_bundle_pairs_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>both<sp/>objects<sp/>are<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>dimension_vector<sp/>is<sp/>not<sp/>a<sp/>list<sp/>of<sp/>non-negative<sp/>integers</highlight></codeline>
<codeline lineno="612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>line_bundle_pairs_vector,<sp/>dimension_vector,<sp/>and<sp/>shift_vector<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>length</highlight></codeline>
<codeline lineno="613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>line_bundle_pairs_vector<sp/>is<sp/>empty</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>tuple)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line_bundle_pairs_vector):</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_pairs_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>tuples&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(len(x)<sp/>==<sp/>2<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line_bundle_pairs_vector):</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;line_bundle_pairs_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>with<sp/>exactly<sp/>two<sp/>elements&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x[0],<sp/>LineBundle)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(x[1],<sp/>LineBundle)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line_bundle_pairs_vector):</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_pairs_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>both<sp/>objects<sp/>are<sp/>line<sp/>bundles&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(x[0].catagory<sp/>==<sp/>x[1].catagory<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line_bundle_pairs_vector):</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety;<sp/>not<sp/>all<sp/>catagories<sp/>currently<sp/>match.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>=<sp/>line_bundle_pairs_vector[0][0].catagory</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(x[0].catagory<sp/>==<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line_bundle_pairs_vector):</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;All<sp/>line<sp/>bundles<sp/>pairs<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>catagory&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>int)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dimension_vector):</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;dimension_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>integers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(<sp/>x<sp/>&gt;=<sp/>0<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dimension_vector):</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;dimension_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>non-negative<sp/>integers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>int)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>shift_vector):</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;shift_vector<sp/>must<sp/>be<sp/>a<sp/>list<sp/>of<sp/>integers&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line_bundle_pairs_vector)<sp/>!=<sp/>len(dimension_vector)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>len(line_bundle_pairs_vector)<sp/>!=<sp/>len(shift_vector):</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;line_bundle_pairs_vector,<sp/>dimension_vector,<sp/>and<sp/>shift_vector<sp/>must<sp/>have<sp/>the<sp/>same<sp/>length&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line_bundle_pairs_vector)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;line_bundle_pairs_vector<sp/>must<sp/>have<sp/>at<sp/>least<sp/>one<sp/>element&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref><sp/>=<sp/>line_bundle_pairs_vector<sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref><sp/>=<sp/>dimension_vector<sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref><sp/>=<sp/>shift_vector<sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref><sp/>=<sp/>degree<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab026588657f8e7942142d524f21af97b" kindref="member">_remove_zeros_from_dimension_vector</ref>()</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ac200ed6fbce84c005d2afb81a6e7c1d3" kindref="member">_combine_repeats</ref>()</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a80aae608c3ab615866e4440c35ed2c27" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>by<sp/>printing<sp/>the<sp/>defining<sp/>triangle.<sp/></highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>string<sp/>representation<sp/>is<sp/>similar<sp/>to<sp/>that<sp/>of<sp/>the<sp/>chain<sp/>complex,<sp/>where<sp/>2<sp/>lines<sp/>are<sp/>printed.</highlight></codeline>
<codeline lineno="662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>first<sp/>line<sp/>contains<sp/>the<sp/>number<sp/>of<sp/>times<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>applied,<sp/>and<sp/>the<sp/>second<sp/>line</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contains<sp/>the<sp/>actual<sp/>twist.<sp/>For<sp/>example,<sp/>the<sp/>string<sp/>representation<sp/>of<sp/>a<sp/>spherical<sp/>twist<sp/>sum<sp/>given</highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>data<sp/>[(O(1),<sp/>O(1)),<sp/>[3],<sp/>[-2]]<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>⊕3</highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tw_1<sp/>O(1)[-2]</highlight></codeline>
<codeline lineno="668"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum</highlight></codeline>
<codeline lineno="670"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>lists<sp/>to<sp/>hold<sp/>each<sp/>formatted<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line_components<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line_components<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>the<sp/>zipped<sp/>input<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Format<sp/>the<sp/>second<sp/>line<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line_component<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line_component<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;Tw_{lb1.degree}<sp/>O({lb2.degree})[{s}]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line_component<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;Tw_{lb1.degree}<sp/>O({lb2.degree})&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line_components.append(second_line_component)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>the<sp/>position<sp/>to<sp/>place<sp/>the<sp/>&apos;⊕n&apos;<sp/>above<sp/>&apos;O&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o_position<sp/>=<sp/>second_line_component.index(</highlight><highlight class="stringliteral">&apos;)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>a<sp/>string<sp/>with<sp/>spaces<sp/>up<sp/>to<sp/>the<sp/>&apos;O&apos;<sp/>position,<sp/>then<sp/>add<sp/>&apos;⊕n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line_component<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line_component<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>*<sp/>o_position<sp/>+<sp/>f</highlight><highlight class="stringliteral">&apos;⊕{n}&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line_component<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>*<sp/>o_position<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/><sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line_components.append(first_line_component)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Join<sp/>all<sp/>components<sp/>with<sp/>&apos;<sp/>⊕<sp/>&apos;<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_line<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(first_line_components)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second_line<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>⊕<sp/>&apos;</highlight><highlight class="normal">.join(second_line_components)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Combine<sp/>the<sp/>two<sp/>lines<sp/>with<sp/>a<sp/>newline<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>first_line.isspace():</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>second_line</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{first_line}\n{second_line}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a1e6a63a1cccf6359d289a508ec85d23d" kindref="member">__len__</ref>(self):</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="713"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>distinct<sp/>spherical<sp/>twists<sp/>in<sp/>the<sp/>sum;<sp/>we<sp/>should<sp/>generally<sp/>expect<sp/>that<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>spherical<sp/>twists<sp/>are<sp/>distinct<sp/>since<sp/>the<sp/>constructor<sp/>should<sp/>hypothetically<sp/>combine<sp/>like<sp/>terms.</highlight></codeline>
<codeline lineno="715"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="716"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>is<sp/>primarily<sp/>used<sp/>in<sp/>the<sp/>DoubleSphericalTwist.get_HN_factors<sp/>method<sp/>to<sp/>help<sp/>determine</highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>cases.</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>int<sp/>The<sp/>number<sp/>of<sp/>distinct<sp/>spherical<sp/>twists<sp/>in<sp/>the<sp/>sum</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a513a0c494fb9c82fa3545f8c8fdb3587" kindref="member">chernCharacter</ref>(self):</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="726"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Similar<sp/>to<sp/>the<sp/>case<sp/>of<sp/>ChainComplex,<sp/>since<sp/>the<sp/>Chern<sp/>character<sp/>is<sp/>additive<sp/>on<sp/>exact<sp/>sequences<sp/>(i.e.<sp/>factors</highlight></codeline>
<codeline lineno="727"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>through<sp/>the<sp/>Grothendieck<sp/>group),<sp/>we<sp/>may<sp/>always<sp/>find<sp/>the<sp/>Chern<sp/>character<sp/>of<sp/>an<sp/>object<sp/>obtained<sp/>by<sp/>sums<sp/>and<sp/>twists</highlight></codeline>
<codeline lineno="728"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>known<sp/>objects.<sp/>In<sp/>this<sp/>case,<sp/>we<sp/>simply<sp/>rely<sp/>on<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>above<sp/>SphericalTwist<sp/>class.</highlight></codeline>
<codeline lineno="729"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChernCharacter<sp/>The<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum</highlight></codeline>
<codeline lineno="731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern_character<sp/>=<sp/><ref refid="classsrc_1_1_chern_character_1_1_chern_character" kindref="compound">ChernCharacter</ref>([0,<sp/>0,<sp/>0])</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sph_twist_chern<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(lb1,<sp/>lb2,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>).<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a513a0c494fb9c82fa3545f8c8fdb3587" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern_character<sp/>+=<sp/>int(n<sp/>*<sp/>(-1)**s)<sp/>*<sp/>sph_twist_chern</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chern_character</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ad3caf5216dee2ed1482c9494632cca7f" kindref="member">shift</ref>(self,<sp/>n):</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cohomological<sp/>shift<sp/>of<sp/>the<sp/>complex<sp/>by<sp/>some<sp/>fixed<sp/>amount.<sp/>This<sp/>is<sp/>one<sp/>of<sp/>the<sp/>main<sp/>methods<sp/>one<sp/>wishes</highlight></codeline>
<codeline lineno="747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>override<sp/>for<sp/>the<sp/>DerivedCategoryObject<sp/>class,<sp/>since<sp/>the<sp/>shift<sp/>of<sp/>a<sp/>spherical<sp/>twist<sp/>sum<sp/>is<sp/>simply</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>sum<sp/>of<sp/>the<sp/>shifts<sp/>of<sp/>the<sp/>individual<sp/>spherical<sp/>twists.</highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>n<sp/>The<sp/>amount<sp/>to<sp/>shift<sp/>the<sp/>complex<sp/>by<sp/><sp/></highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>SphericalTwistSum<sp/>The<sp/>shifted<sp/>spherical<sp/>twist<sp/>sum</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_shift_vector<sp/>=<sp/>[x<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>]</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>new_shift_vector,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ac0d03e78d54ff92408bfc5cd26722e23" kindref="member">central_charge</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum.<sp/>Since<sp/>all<sp/>stability<sp/>conditions<sp/>are<sp/>numerical</highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>our<sp/>current<sp/>implementations,<sp/>it<sp/>suffices<sp/>to<sp/>compute<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>Chern<sp/>character</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args:<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="768"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="769"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>complex<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum<sp/>as<sp/>a<sp/>complex<sp/>number</highlight></codeline>
<codeline lineno="770"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="771"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="772"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central_charge<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sph_twist<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(lb1,<sp/>lb2,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>central_charge<sp/>+=<sp/>n<sp/>*<sp/>(-1)**s<sp/>*<sp/>sph_twist.central_charge(*args)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>central_charge</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a758bd9107244490ffbef06a73a6c6da2" kindref="member">get_lowest_shift_component</ref>(self):</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="807"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Similar<sp/>to<sp/>the<sp/>ChainComplex<sp/>class,<sp/>we<sp/>wish<sp/>to<sp/>recover<sp/>the<sp/>lowest<sp/>shift<sp/>component<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum.</highlight></codeline>
<codeline lineno="808"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>computing<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the<sp/>DoubleSphericalTwistSum<sp/>class.</highlight></codeline>
<codeline lineno="809"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="810"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>SphericalTwistSum<sp/>The<sp/>spherical<sp/>twist<sp/>sum<sp/>with<sp/>the<sp/>lowest<sp/>shift</highlight></codeline>
<codeline lineno="811"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_shift<sp/>=<sp/>float(</highlight><highlight class="stringliteral">&apos;inf&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_lb_pair<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dimension<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/>&lt;<sp/>min_shift:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_shift<sp/>=<sp/>s</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_lb_pair<sp/>=<sp/>(lb1,<sp/>lb2)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_dimension<sp/>=<sp/>n</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>([min_lb_pair],<sp/>[min_dimension],<sp/>[min_shift],<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a01c65f64d5c0c516d01310a1c69b6138" kindref="member">get_highest_shift_component</ref>(self):</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="827"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Similar<sp/>to<sp/>the<sp/>ChainComplex<sp/>class,<sp/>we<sp/>wish<sp/>to<sp/>recover<sp/>the<sp/>highest<sp/>shift<sp/>component<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>sum.</highlight></codeline>
<codeline lineno="828"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>computing<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the<sp/>DoubleSphericalTwistSum<sp/>class.</highlight></codeline>
<codeline lineno="829"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="830"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>SphericalTwistSum<sp/>The<sp/>spherical<sp/>twist<sp/>sum<sp/>with<sp/>the<sp/>highest<sp/>shift</highlight></codeline>
<codeline lineno="831"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_shift<sp/>=<sp/>float(</highlight><highlight class="stringliteral">&apos;-inf&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_lb_pair<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_dimension<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/>&gt;<sp/>max_shift:</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_shift<sp/>=<sp/>s</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_lb_pair<sp/>=<sp/>(lb1,<sp/>lb2)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_dimension<sp/>=<sp/>n</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>([max_lb_pair],<sp/>[max_dimension],<sp/>[max_shift],<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a1e49845a4668418bb7cd17c463709223" kindref="member">is_semistable</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="847"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>check<sp/>if<sp/>the<sp/>spherical<sp/>twist<sp/>sum<sp/>is<sp/>stable.<sp/>The<sp/>sum<sp/>of<sp/>shifts<sp/>of<sp/>distinct<sp/>objects<sp/>will<sp/>generally</highlight></codeline>
<codeline lineno="848"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>never<sp/>be<sp/>stable<sp/>unless<sp/>the<sp/>objects<sp/>and<sp/>shifts<sp/>are<sp/>all<sp/>the<sp/>same;<sp/>for<sp/>example,<sp/>one<sp/>can<sp/>consider<sp/>the<sp/>trivial<sp/>case</highlight></codeline>
<codeline lineno="849"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>E<sp/>is<sp/>a<sp/>stable<sp/>object,<sp/>but</highlight></codeline>
<codeline lineno="850"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="851"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E[1]<sp/>---&gt;<sp/>E[1]<sp/>⊕<sp/>E<sp/>---&gt;<sp/>E</highlight></codeline>
<codeline lineno="852"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="853"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destabilizes<sp/>the<sp/>direct<sp/>sum.<sp/>In<sp/>general,<sp/>the<sp/>spherical<sp/>twist<sp/>sum<sp/>is<sp/>stable<sp/>if<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtration<sp/>is<sp/>trivial,<sp/>i.e.<sp/>just<sp/>the<sp/>object<sp/>itself.<sp/></highlight></codeline>
<codeline lineno="855"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="856"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="857"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="858"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="859"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="860"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>bool<sp/>True<sp/>if<sp/>the<sp/>spherical<sp/>twist<sp/>sum<sp/>is<sp/>stable,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="861"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="862"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="863"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="864"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="865"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1abe5b73ad2b84669fc3378f5b5cf9832b" kindref="member">get_HN_factors_ordered</ref>(*args))<sp/>==<sp/>1<sp/></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1abe5b73ad2b84669fc3378f5b5cf9832b" kindref="member">get_HN_factors_ordered</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="893"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>slightly<sp/>modified<sp/>version<sp/>of<sp/>the<sp/>get_HN_factors<sp/>method,<sp/>where<sp/>the<sp/>Harder-Narasimhan<sp/>factors</highlight></codeline>
<codeline lineno="894"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>ordered<sp/>by<sp/>phase.<sp/>In<sp/>particular,<sp/>this<sp/>method<sp/>is<sp/>a<sp/>slight<sp/>misnomer<sp/>in<sp/>the<sp/>sense<sp/>that<sp/>it<sp/>is<sp/>not<sp/>actually</highlight></codeline>
<codeline lineno="895"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>claiming<sp/>that<sp/>the<sp/>list<sp/>returned<sp/>is<sp/>the<sp/>HN<sp/>filtration<sp/>of<sp/>the<sp/>object,<sp/>but<sp/>rather<sp/>a<sp/>concatenated<sp/>list<sp/>of<sp/>all<sp/></highlight></codeline>
<codeline lineno="896"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>individual<sp/>semistable<sp/>factors.<sp/>This<sp/>is<sp/>still<sp/>nonetheless<sp/>useful<sp/>for<sp/>computing<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="897"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DoubleSphericalTwistSum<sp/>class.</highlight></codeline>
<codeline lineno="898"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="899"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="900"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="901"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="902"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="903"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>the<sp/>first<sp/>element<sp/>is<sp/>a<sp/>DerivedCategoryObject<sp/>and<sp/>the<sp/>second<sp/>element<sp/>is<sp/>a<sp/>float</highlight></codeline>
<codeline lineno="904"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representing<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>object.<sp/>The<sp/>list<sp/>is<sp/>always<sp/>returned<sp/>in<sp/>such<sp/>a<sp/>way<sp/>that<sp/>the<sp/>largest<sp/>phase</highlight></codeline>
<codeline lineno="905"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN<sp/>factor<sp/>is<sp/>first<sp/>and<sp/>smallest<sp/>is<sp/>last.</highlight></codeline>
<codeline lineno="906"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="907"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="908"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="909"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="910"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2),<sp/>n,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sph_twist<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(lb1,<sp/>lb2,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab432f436cbc2f95ba86aadfe8dba6a17" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>individual_twist_HN_factors<sp/>=<sp/>sph_twist.get_HN_factors(*args)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(obj,<sp/>phase)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>individual_twist_HN_factors:</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>ChainComplex):</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors.append((<ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=obj.sheaf_vector,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[shift<sp/>+<sp/>s<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obj.shift_vector],</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[dim<sp/>*<sp/>n<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dim<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obj.dimension_vector]),</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>+<sp/>s))</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_chern<sp/>=<sp/>obj.chernCharacter()<sp/>*<sp/>int(n<sp/>*<sp/>(-1)**s)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors.append((<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>(string=obj.update_string_by_shift(str(obj),<sp/>s),</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>catagory=self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chern_character=new_chern),</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>+<sp/>s))</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>the<sp/>list<sp/>in<sp/>such<sp/>a<sp/>way<sp/>that<sp/>the<sp/>highest<sp/>phase<sp/>comes<sp/>first<sp/>and<sp/>the<sp/>lowest<sp/>phase<sp/>comes<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sorted(HN_factors,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>x[1],<sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ab026588657f8e7942142d524f21af97b" kindref="member">_remove_zeros_from_dimension_vector</ref>(self):</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="958"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>which<sp/>iterates<sp/>through<sp/>the<sp/>dimension<sp/>vector,<sp/>and<sp/>if<sp/>a<sp/>certain<sp/>Coherent<sp/>sheaf</highlight></codeline>
<codeline lineno="959"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>only<sp/>included<sp/>0<sp/>times,<sp/>we<sp/>may<sp/>effectively<sp/>erase<sp/>it.</highlight></codeline>
<codeline lineno="960"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>)):</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>[i]</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>[i]</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>[i]</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1ac200ed6fbce84c005d2afb81a6e7c1d3" kindref="member">_combine_repeats</ref>(self):</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="969"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>to<sp/>combine<sp/>repeated<sp/>sheaves<sp/>in<sp/>the<sp/>complex.<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>simplifying</highlight></codeline>
<codeline lineno="970"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>complex,<sp/>as<sp/>we<sp/>can<sp/>combine<sp/>repeated<sp/>sheaves<sp/>into<sp/>a<sp/>single<sp/>sheaf<sp/>with<sp/>a<sp/>larger<sp/>dimension.</highlight></codeline>
<codeline lineno="971"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Dictionary<sp/>to<sp/>hold<sp/>combined<sp/>dimensions<sp/>for<sp/>each<sp/>(sheaf,<sp/>shift)<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Iterate<sp/>over<sp/>the<sp/>tuples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,lb2),<sp/>dim,<sp/>shift<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>):</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>(lb1,<sp/>lb2,<sp/>shift)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>combined:</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined[key]<sp/>+=<sp/>dim</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined[key]<sp/>=<sp/>dim</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Unpack<sp/>the<sp/>combined<sp/>dictionary<sp/>back<sp/>into<sp/>the<sp/>class<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(lb1,<sp/>lb2,<sp/>shift),<sp/>dim<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>combined.items():</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a61524245ad81c4cb0243879e24c22ba4" kindref="member">line_bundle_pairs_vector</ref>.append((lb1,<sp/>lb2))</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1a7535200f2ff52e1d73c6b6e025515efb" kindref="member">dimension_vector</ref>.append(dim)</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum_1adba9836083c0ee5b2654eeb970065315" kindref="member">shift_vector</ref>.append(shift)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004" refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" kindref="compound">DoubleSphericalTwist</ref>(<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>):</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1006"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>class<sp/>to<sp/>represent<sp/>the<sp/>composition<sp/>of<sp/>successive<sp/>spherical<sp/>twists<sp/>applied<sp/>to<sp/>a<sp/>line<sp/>bundle.<sp/>The<sp/>double</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>spherical<sp/>twist<sp/>is<sp/>given<sp/>as<sp/>a<sp/>distinguished<sp/>triangle<sp/>similar<sp/>to<sp/>the<sp/>case<sp/>of<sp/>the<sp/>single<sp/>spherical<sp/>twist;<sp/>however,</highlight></codeline>
<codeline lineno="1008"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>higher<sp/>numbers<sp/>of<sp/>spherical<sp/>twists,<sp/>there<sp/>are<sp/>often<sp/>multiple<sp/>triangles<sp/>that<sp/>the<sp/>object<sp/>fits<sp/>into.<sp/>The<sp/>added</highlight></codeline>
<codeline lineno="1009"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>functionality<sp/>that<sp/>this<sp/>class<sp/>provides<sp/>is<sp/>the<sp/>ability<sp/>to<sp/>account<sp/>for<sp/>both<sp/>triangles<sp/>when<sp/>computing<sp/>the<sp/>Harder-</highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Narasimhan<sp/>filtration<sp/>of<sp/>the<sp/>object.<sp/>Specifically,<sp/>one<sp/>must<sp/>account<sp/>for<sp/>the<sp/>defining<sp/>triangle</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>Tw_b<sp/>O(c))<sp/>⊗<sp/>O(a)<sp/>----&gt;<sp/><sp/>Tw_b<sp/>O(c)<sp/>----&gt;<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1014"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>as<sp/>well<sp/>as<sp/>what<sp/>we<sp/>refer<sp/>to<sp/>as<sp/>the<sp/>&apos;secondary<sp/>canonical<sp/>triangle&apos;<sp/>given<sp/>by</highlight></codeline>
<codeline lineno="1015"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1016"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Tw_a<sp/>(Hom(O(b),<sp/>O(c))<sp/>⊗<sp/>O(b))<sp/>----&gt;<sp/>Tw_a<sp/>O(c)<sp/>----&gt;<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1017"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1018"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist<sp/>are<sp/>computed<sp/>by<sp/>first<sp/>computing<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="1019"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>factors<sp/>of<sp/>the<sp/>defining<sp/>triangle,<sp/>and<sp/>then<sp/>the<sp/>secondary<sp/>canonical<sp/>triangle.<sp/>Unlike<sp/>the<sp/>single<sp/>SphericalTwist<sp/>class,</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>we<sp/>do<sp/>not<sp/>actually<sp/>provide<sp/>the<sp/>Harder-Narasimhan<sp/>filtration<sp/>in<sp/>all<sp/>cases;<sp/>there<sp/>are<sp/>edge<sp/>cases<sp/>where<sp/>nothing<sp/>can<sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>currently<sp/>be<sp/>said<sp/>and<sp/>we<sp/>must<sp/>return<sp/>an<sp/>empty<sp/>list<sp/>leading<sp/>to<sp/>a<sp/>mass<sp/>of<sp/>0.<sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ade9c9fe0c4c8d3bdd3edfff5d59610ca" kindref="member">__init__</ref>(self,<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3,<sp/>degree=1):</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>an<sp/>instance<sp/>of<sp/>DoubleSphericalTwist<sp/>with<sp/>the<sp/>specified<sp/>line<sp/>bundles.<sp/>The<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>defined<sp/>as<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>evaluation<sp/>morphism<sp/></highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>Tw_b<sp/>O(c))<sp/>⊗<sp/>O(a)<sp/>----&gt;<sp/><sp/>Tw_b<sp/>O(c)<sp/>----&gt;<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1032"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>O(a),<sp/>O(b),<sp/>and<sp/>O(c)<sp/>denote<sp/>line<sp/>bundles.<sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>represented<sp/>as<sp/>a<sp/>distinguished<sp/>triangle<sp/>in<sp/>the<sp/>derived<sp/>category<sp/>of<sp/>coherent</highlight></codeline>
<codeline lineno="1034"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sheaves.<sp/></highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Several<sp/>helper<sp/>methods<sp/>are<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards</highlight></codeline>
<codeline lineno="1037"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>line<sp/>bundles,<sp/>and<sp/>then<sp/>to<sp/>construct<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundleline_bundle_1<sp/>The<sp/>last<sp/>line<sp/>bundle<sp/>twisted<sp/>around;<sp/>i.e.<sp/>O(a)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>twisted<sp/>around;<sp/>i.e.<sp/>O(b)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_3<sp/>The<sp/>line<sp/>bundle<sp/>we<sp/>are<sp/>applying<sp/>the<sp/>spherical<sp/>twist<sp/>to;<sp/>i.e.<sp/>O(c)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree<sp/>An<sp/>optional<sp/>argument<sp/>for<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>variety,<sp/>which<sp/>is<sp/>relevant<sp/>to<sp/>the<sp/>dimension<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>derived<sp/>RHom<sp/>space<sp/>for<sp/>K3<sp/>surfaces<sp/>of<sp/>picard<sp/>rank<sp/>1.<sp/>This<sp/>does<sp/>not<sp/>affect<sp/>the<sp/>P1<sp/>or<sp/>P2<sp/>implementations.</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1046"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>or<sp/>line_bundle_3<sp/>are<sp/>not<sp/>instances<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1047"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>line<sp/>bundles<sp/>are<sp/>not<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>catagory</highlight></codeline>
<codeline lineno="1048"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP1.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP1.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_3,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_3<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP1.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_2.catagory<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_3.catagory:</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref><sp/>=<sp/>line_bundle_1<sp/></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref><sp/>=<sp/>line_bundle_2<sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref><sp/>=<sp/>line_bundle_3<sp/></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>=<sp/>line_bundle_1.catagory<sp/></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref><sp/>=<sp/>degree<sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" kindref="member">defining_triangle</ref><sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a12e2989157e1bed9d0bd02156a5fe811" kindref="member">_sph_twist_DoubleLineBundles</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3)<sp/></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>UPDATE<sp/>AS<sp/>MORE<sp/>CATAGORIES<sp/>ARE<sp/>IMPLEMENTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>__CURRENT_DOUBLE_TWIST_IMPLEMENTED__:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;Double<sp/>spherical<sp/>twists<sp/>are<sp/>currently<sp/>only<sp/>implemented<sp/>for<sp/>{__CURRENT_DOUBLE_TWIST_IMPLEMENTED__<sp/>}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a12e2989157e1bed9d0bd02156a5fe811" kindref="member">_sph_twist_DoubleLineBundles</ref>(self,<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3):</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1080"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>distinguished<sp/>triangle<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist.<sp/>The<sp/>distinguished<sp/>triangle</highlight></codeline>
<codeline lineno="1081"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>given<sp/>by<sp/>the<sp/>cone<sp/>of<sp/>the<sp/>evaluation<sp/>morphism<sp/></highlight></codeline>
<codeline lineno="1082"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1083"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>Tw_b<sp/>O(c))<sp/>⊗<sp/>O(a)<sp/>----&gt;<sp/><sp/>Tw_b<sp/>O(c)<sp/>----&gt;<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1084"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1085"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>last<sp/>line<sp/>bundle<sp/>twisted<sp/>around;<sp/>i.e.<sp/>O(a)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1086"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>twisted<sp/>around;<sp/>i.e.<sp/>O(b)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1087"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_3<sp/>The<sp/>line<sp/>bundle<sp/>we<sp/>are<sp/>applying<sp/>the<sp/>spherical<sp/>twist<sp/>to;<sp/>i.e.<sp/>O(c)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1088"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1089"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>DistinguishedTriangle<sp/>The<sp/>distinguished<sp/>triangle<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1090"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1091"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1,<sp/>line_bundle_2,<sp/>or<sp/>line_bundle_3<sp/>are<sp/>not<sp/>instances<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1092"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_3,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_3<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>homDims<sp/>=<sp/><ref refid="namespacesrc_1_1_spherical_twist_1a8d4c5f90a3a32982ba929fae740b1736" kindref="member">_dimHom_Line_and_SingleTwist</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)<sp/><sp/></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_vector<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector<sp/>=<sp/>[]<sp/></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>the<sp/>necessary<sp/>lists<sp/>for<sp/>the<sp/>ChainComplex<sp/>constructor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(homDims)):</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>homDims[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector.append(homDims[i])</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>homDims<sp/>tuple<sp/>represents<sp/>the<sp/>degrees<sp/>(-1,<sp/>0,<sp/>1,<sp/>2,<sp/>3).<sp/>This<sp/>is<sp/>represented<sp/>by<sp/>cohomological</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>shifts<sp/>[1],<sp/>[0],<sp/>[-1],<sp/>[-2],<sp/>and<sp/>[-3]<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector.append(1<sp/>-<sp/>i)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_vector.append(<ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(line_bundle_1.degree,<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>))</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>bundle_vector:</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>=<sp/>{line_bundle_1}\nline_bundle_2={line_bundle_2}\nline_bundle_3={line_bundle_3}\n_dimHom_Line_and_SingleTwist={homDims}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object1<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=bundle_vector,<sp/>shift_vector=shift_vector,<sp/>dimension_vector=dimension_vector)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object2<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>([(line_bundle_2,<sp/>line_bundle_3)],<sp/>dimension_vector=[1],<sp/>shift_vector=[0],<sp/>degree=self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object3<sp/>=<sp/><ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object" kindref="compound">DerivedCategoryObject</ref>(string=f</highlight><highlight class="stringliteral">&quot;Tw_{line_bundle_1.degree}<sp/>Tw_{line_bundle_2.degree}<sp/>O({line_bundle_3.degree})&quot;</highlight><highlight class="normal">,<sp/>catagory=self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref>)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_distinguished_triangle_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref>(object1,<sp/>object2,<sp/>object3)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ab9e9e5ae6673b64365efe14c77bab864" kindref="member">chernCharacter</ref>(self):</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>Chern<sp/>character<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist.<sp/>The<sp/>Chern<sp/>character<sp/>of<sp/>the<sp/>double</highlight></codeline>
<codeline lineno="1131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spherical<sp/>twist<sp/>is<sp/>the<sp/>Chern<sp/>character<sp/>of<sp/>the<sp/>third<sp/>object<sp/>in<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="1132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>ChernCharacter<sp/>The<sp/>Chern<sp/>Character<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" kindref="member">defining_triangle</ref>.object3.chernCharacter()</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a68d54bee26b992863d77725861e0ec2c" kindref="member">central_charge</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist.<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical</highlight></codeline>
<codeline lineno="1142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twist<sp/>is<sp/>the<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>third<sp/>object<sp/>in<sp/>the<sp/>distinguished<sp/>triangle.</highlight></codeline>
<codeline lineno="1143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="1145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="1146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="1147"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>complex<sp/>The<sp/>central<sp/>charge<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>as<sp/>a<sp/>complex<sp/>number</highlight></codeline>
<codeline lineno="1149"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="1151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="1152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1153"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1*ch[1]<sp/>+<sp/>args[0]*ch[0]</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>self.catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>!=<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/>for<sp/>x<sp/>in<sp/>args):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError(&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.chernCharacter()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>return<sp/>complex(-1*ch[2]<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[1]<sp/>*<sp/>ch[0],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch[1]<sp/>-<sp/>args[0]<sp/>*<sp/>ch[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha<sp/>=<sp/>args[0]</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta<sp/>=<sp/>args[1]</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>args[2]</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a1f4aac18056360d11918b709dc341937" kindref="member">chernCharacter</ref>()</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complex(2*d*alpha<sp/>*<sp/>ch[1]<sp/>-<sp/>ch[2]<sp/>-<sp/>ch[0]<sp/>+<sp/>(beta**2<sp/>-<sp/>alpha**2)*d*ch[0],<sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2*d*ch[1]<sp/>-<sp/>2*d*alpha*beta*ch[0])</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a6cc185f90c2474199cc64957beb5f2bb" kindref="member">__str__</ref>(self):</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns<sp/>a<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist<sp/>by<sp/>printing<sp/>the<sp/>defining<sp/>triangle</highlight></codeline>
<codeline lineno="1204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>str<sp/>A<sp/>string<sp/>representation<sp/>of<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str(self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" kindref="member">defining_triangle</ref>.object3)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4d600ef4b8ee2b4ca1473c15ce61c177" kindref="member">secondary_canonical_triangle</ref>(self):</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>compute<sp/>the<sp/>secondary<sp/>canonical<sp/>triangle<sp/>of<sp/>the<sp/>spherical<sp/>twist.<sp/>The<sp/>secondary<sp/>canonical<sp/>triangle</highlight></codeline>
<codeline lineno="1213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>obtained<sp/>by<sp/>applying<sp/>Tw_a<sp/>to<sp/>the<sp/>defining<sp/>triangle<sp/>of<sp/>Tw_b<sp/>O(c);<sp/>specifically,<sp/>this<sp/>gives</highlight></codeline>
<codeline lineno="1214"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tw_a<sp/>(Hom(O(b),<sp/>O(c))<sp/>⊗<sp/>O(b))<sp/>----&gt;<sp/>Tw_a<sp/>O(c)<sp/>----&gt;<sp/>Tw_a<sp/>Tw_b<sp/>O(c)</highlight></codeline>
<codeline lineno="1216"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>DistinguishedTriangle<sp/>The<sp/>secondary<sp/>canonical<sp/>triangle<sp/>of<sp/>the<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>object<sp/>Tw_a<sp/>O(c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object2<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>([(self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref>)],<sp/>dimension_vector=[1],<sp/>shift_vector=[0],<sp/>degree=self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object3<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" kindref="member">defining_triangle</ref>.object3</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>single_twist_original<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hom_complex_single_twist<sp/>=<sp/>single_twist_original.defining_triangle.object1</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vec<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vec<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_bundle_pair_vec<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(hom_complex_single_twist.sheaf_vector)):</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hom_complex_single_twist.dimension_vector[i]<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vec.append(hom_complex_single_twist.dimension_vector[i])</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vec.append(hom_complex_single_twist.shift_vector[i])</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_bundle_pair_vec.append((self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a947c7b2a57720d1b8fc2475abcb462cc" kindref="member">line_bundle_1</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref>))</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object1<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist_sum" kindref="compound">SphericalTwistSum</ref>(line_bundle_pair_vec,<sp/>dimension_vec,<sp/>shift_vec,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_distinguished_triangle_1_1_distinguished_triangle" kindref="compound">DistinguishedTriangle</ref>(object1,<sp/>object2,<sp/>object3)</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1511075ab30c69c00130bc3e3b1820fb" kindref="member">is_semistable</ref>(self,<sp/>*args,<sp/>logging=False,<sp/>log_file=None):</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>to<sp/>check<sp/>if<sp/>the<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>semistable.<sp/>The<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>semistable</highlight></codeline>
<codeline lineno="1249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>Harder-Narasimhan<sp/>factorization<sp/>is<sp/>trivial.</highlight></codeline>
<codeline lineno="1250"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="1252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="1253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="1254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>logging<sp/>A<sp/>boolean<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>to<sp/>log<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>that<sp/>caused<sp/>the<sp/>object<sp/>to<sp/>be<sp/>unstable</highlight></codeline>
<codeline lineno="1255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>log_file<sp/>The<sp/>file<sp/>to<sp/>log<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>that<sp/>caused<sp/>the<sp/>object<sp/>to<sp/>be<sp/>unstable</highlight></codeline>
<codeline lineno="1256"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>bool<sp/>True<sp/>if<sp/>the<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>semistable,<sp/>False<sp/>otherwise</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>self.catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>!=<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/>for<sp/>x<sp/>in<sp/>args):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError(&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ae8b0a91cede767ce6188b18686b431c0" kindref="member">get_HN_factors</ref>(*args))<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>logging<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>log_file:</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(log_file,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>log_file:</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_str<sp/>=<sp/>e.message<sp/>+<sp/>f</highlight><highlight class="stringliteral">&quot;@<sp/>{e.stability_parameters}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_file.write(msg_str)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>logging:</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_str<sp/>=<sp/>e.message<sp/>+<sp/>f</highlight><highlight class="stringliteral">&quot;@<sp/>{e.stability_parameters}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(msg_str)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4daf8f6e1a2470c949ac3e49ca099977" kindref="member">mass</ref>(self,<sp/>*args,<sp/>logging=False,<sp/>log_file=None):</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>mass<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>masses<sp/>of<sp/>the<sp/>Harder-Narasimhan<sp/>factors;<sp/>the<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Harder-Narasimhan<sp/>factors<sp/>are<sp/>assumed<sp/>to<sp/>come<sp/>from<sp/>either<sp/>the<sp/>defining<sp/>triangle<sp/>or<sp/>secondary<sp/>canonical<sp/>triangle.</highlight></codeline>
<codeline lineno="1303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>mass<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist<sp/>is<sp/>computed<sp/>by<sp/>first<sp/>computing<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defining<sp/>triangle,<sp/>and<sp/>then<sp/>the<sp/>secondary<sp/>canonical<sp/>triangle.</highlight></codeline>
<codeline lineno="1305"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="1307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For<sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="1308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="1309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>bool<sp/>logging<sp/>A<sp/>boolean<sp/>flag<sp/>to<sp/>indicate<sp/>whether<sp/>to<sp/>log<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>that<sp/>caused<sp/>the<sp/>object<sp/>to<sp/>be<sp/>unstable</highlight></codeline>
<codeline lineno="1310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>str<sp/>log_file<sp/>The<sp/>file<sp/>to<sp/>log<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>that<sp/>caused<sp/>the<sp/>object<sp/>to<sp/>be<sp/>unstable</highlight></codeline>
<codeline lineno="1311"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>float<sp/>The<sp/>mass<sp/>of<sp/>the<sp/>double<sp/>spherical<sp/>twist</highlight></codeline>
<codeline lineno="1313"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="1315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="1316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>self.catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>!=<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/>for<sp/>x<sp/>in<sp/>args):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError(&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ae8b0a91cede767ce6188b18686b431c0" kindref="member">get_HN_factors</ref>(*args)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(derived_cat_obj,<sp/>_)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>HN_factors:</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>+=<sp/>abs(derived_cat_obj.central_charge(*args))</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mass</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>logging<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>log_file:</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(log_file,<sp/></highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>log_file:</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_str<sp/>=<sp/>e.message<sp/>+<sp/>f</highlight><highlight class="stringliteral">&quot;@<sp/>{e.stability_parameters}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_file.write(msg_str)</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>logging:</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_str<sp/>=<sp/>e.message<sp/>+<sp/>f</highlight><highlight class="stringliteral">&quot;@<sp/>{e.stability_parameters}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(msg_str)</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1ae8b0a91cede767ce6188b18686b431c0" kindref="member">get_HN_factors</ref>(self,<sp/>*args):</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>crux<sp/>of<sp/>the<sp/>DoubleSphericalTwist<sp/>class,<sp/>where<sp/>we<sp/>compute<sp/>the<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>spherical<sp/>twist.<sp/>A<sp/>signficiant<sp/>assumption<sp/>(CONJECTURAL)<sp/>that<sp/>we<sp/>make<sp/>is<sp/>that<sp/>the<sp/>Harder-Narasimhan<sp/>filtration</highlight></codeline>
<codeline lineno="1370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>must<sp/>arise<sp/>from<sp/>the<sp/>defining<sp/>triangle<sp/>or<sp/>the<sp/>secondary<sp/>canonical<sp/>triangle.<sp/>This<sp/>is<sp/>not<sp/>always<sp/>the<sp/>case,<sp/>but<sp/>we</highlight></codeline>
<codeline lineno="1371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>not<sp/>yet<sp/>implemented<sp/>a<sp/>general<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>HN<sp/>factors<sp/>in<sp/>all<sp/>cases.</highlight></codeline>
<codeline lineno="1372"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>method<sp/>works<sp/>by<sp/>first<sp/>examining<sp/>the<sp/>two<sp/>edge<sp/>cases<sp/>for<sp/>the<sp/>defining<sp/>triangle:<sp/>if<sp/>the<sp/>largest<sp/>phase<sp/>of<sp/>the<sp/>subobject</highlight></codeline>
<codeline lineno="1374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>less<sp/>than<sp/>the<sp/>smallest<sp/>phase<sp/>of<sp/>the<sp/>quotient,<sp/>then<sp/>we<sp/>assume<sp/>the<sp/>object<sp/>is<sp/>stable<sp/>(CONJECTURAL).<sp/>If<sp/>the<sp/>smallest<sp/>phase</highlight></codeline>
<codeline lineno="1375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>subobject<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>largest<sp/>phase<sp/>of<sp/>the<sp/>quotient,<sp/>then<sp/>we<sp/>know<sp/>for<sp/>a<sp/>fact<sp/>(by<sp/>BDL)<sp/>that<sp/>the<sp/>Harder-Narasimhan</highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtration<sp/>can<sp/>be<sp/>computed<sp/>by<sp/>concatenating<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the<sp/>subobject<sp/>and<sp/>quotient.<sp/>If<sp/>neither<sp/>of<sp/>these<sp/>cases<sp/>hold,<sp/>we<sp/>move</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>to<sp/>the<sp/>second<sp/>canonical<sp/>triangle<sp/>and<sp/>apply<sp/>a<sp/>similar<sp/>logic.</highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>tuple<sp/>args<sp/>The<sp/>parameters<sp/>for<sp/>the<sp/>stability<sp/>condition.<sp/>The<sp/>number<sp/>of<sp/>parameters<sp/>depends<sp/>on<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>P1,<sp/>this<sp/>is<sp/>a<sp/>single<sp/>complex<sp/>number.<sp/>For</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P2,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers.<sp/>For<sp/>K3,<sp/>this<sp/>is<sp/>two<sp/>real<sp/>numbers</highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface.</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>list<sp/>A<sp/>list<sp/>of<sp/>tuples<sp/>where<sp/>the<sp/>first<sp/>element<sp/>is<sp/>a<sp/>DerivedCategoryObject<sp/>and<sp/>the<sp/>second<sp/>element<sp/>is<sp/>a<sp/>float</highlight></codeline>
<codeline lineno="1385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>representing<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>object.<sp/>The<sp/>list<sp/>is<sp/>always<sp/>returned<sp/>in<sp/>such<sp/>a<sp/>way<sp/>that<sp/>the<sp/>largest<sp/>phase</highlight></codeline>
<codeline lineno="1386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN<sp/>factor<sp/>is<sp/>first<sp/>and<sp/>smallest<sp/>is<sp/>last.</highlight></codeline>
<codeline lineno="1387"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>the<sp/>args<sp/>are<sp/>not<sp/>of<sp/>the<sp/>correct<sp/>type</highlight></codeline>
<codeline lineno="1389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>number<sp/>of<sp/>args<sp/>is<sp/>incorrect</highlight></codeline>
<codeline lineno="1390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>1:</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>P1<sp/>requires<sp/>single<sp/>complex<sp/>number<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[0],<sp/>complex):</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;P1<sp/>objects<sp/>should<sp/>have<sp/>a<sp/>single<sp/>complex<sp/>parameter&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>elif<sp/>self.catagory<sp/>==<sp/>&apos;P2&apos;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>len(args)<sp/>!=<sp/>2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>ValueError(&quot;Central<sp/>charge<sp/>of<sp/>P2<sp/>requires<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>if<sp/>not<sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/>for<sp/>x<sp/>in<sp/>args):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raise<sp/>TypeError(&quot;P2<sp/>objects<sp/>should<sp/>have<sp/>two<sp/>real<sp/>number<sp/>parameters&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a244258a02691a74e0787cf277c5935c5" kindref="member">catagory</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(args)<sp/>!=<sp/>3:</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Central<sp/>charge<sp/>of<sp/>K3<sp/>requires<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>all(isinstance(x,<sp/>(float,<sp/>int))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args):</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;K3<sp/>central<sp/>charges<sp/>should<sp/>have<sp/>three<sp/>real<sp/>number<sp/>parameters:<sp/>alpha,<sp/>beta,<sp/>and<sp/>the<sp/>degree&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(args[2],<sp/>int):</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>triangle<sp/>as<sp/>Tw_b<sp/>O(c)<sp/>-&gt;<sp/>Tw_a<sp/>Tw<sp/>b<sp/>O(c)<sp/>-&gt;<sp/>B<sp/>+<sp/>B[shift]<sp/>+<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subobject<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1acce8a1155a547cac5584e308de550d1b" kindref="member">line_bundle_2</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1adfdc4891899bc2d90600064511ef3a56" kindref="member">line_bundle_3</ref>,<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_defining_triangle<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a1100a2c4f0133b30520ce7dbd360cbfd" kindref="member">defining_triangle</ref>.rotateLeft()</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quotient_complex<sp/>=<sp/>modified_defining_triangle.object3<sp/></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>subobject.is_semistable(*args):</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>the<sp/>phase<sp/>of<sp/>the<sp/>single<sp/>twist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_side_phase<sp/>=<sp/>cmath.phase(subobject.central_charge(*args))<sp/>/<sp/>math.pi</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_side_min_phase<sp/>=<sp/>quotient_complex.get_smallest_phase(*args)</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_side_max_phase<sp/>=<sp/>quotient_complex.get_largest_phase(*args)</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>left_side_phase<sp/>&lt;=<sp/>right_side_min_phase:</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential_phase<sp/>=<sp/>cmath.phase(self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a181bcb14152a914997c7990b33b51c18" kindref="member">central_charge</ref>(*args))/math.pi</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-4,4):</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>left_side_phase<sp/>&lt;=<sp/>potential_phase<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>potential_phase<sp/>+<sp/>n<sp/>&lt;=<sp/>right_side_min_phase:</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(self,<sp/>potential_phase<sp/>+<sp/>n)]</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;{subobject}<sp/>is<sp/>semistable<sp/>and<sp/>its<sp/>phase<sp/>is<sp/>smaller<sp/>than<sp/>{quotient_complex},<sp/>but<sp/>cannot<sp/>correctly<sp/>find<sp/>the<sp/>phase&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>left_side_phase<sp/>&gt;<sp/>right_side_max_phase:</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>By<sp/>BDL20,<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the<sp/>subobject<sp/>and<sp/>quotient<sp/>concatenate<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>HN<sp/>factors<sp/>of<sp/>the<sp/>twist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(quotient_complex.dimension_vector)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(subobject,<sp/>left_side_phase),</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(quotient_complex,<sp/>right_side_max_phase)]</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(quotient_complex)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;The<sp/>Hom<sp/>object<sp/>is<sp/>not<sp/>concentrated<sp/>in<sp/>1<sp/>or<sp/>2<sp/>degrees&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cplx_summand_0<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[0]],</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[0]],</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[0]])</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cplx_summand_1<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[1]],</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[1]],</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[1]])</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>right_side_min_phase<sp/>==<sp/>quotient_complex.sheaf_vector[0].phase(*args)<sp/>+<sp/>quotient_complex.shift_vector[0]:</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(subobject,<sp/>left_side_phase),</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_1,<sp/>right_side_max_phase),</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_0,<sp/>right_side_min_phase)]</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(subobject,<sp/>left_side_phase),</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_0,<sp/>right_side_max_phase),</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_1,<sp/>right_side_min_phase)]</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Subobject<sp/>(i.e.<sp/>Tw_b<sp/>O(c))<sp/>is<sp/>not<sp/>semistable,<sp/>so<sp/>we<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>first<sp/>look<sp/>at<sp/>its<sp/>HN<sp/>filtration<sp/>to<sp/>see<sp/>if<sp/>anything<sp/>can<sp/>be<sp/>salvaged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_subobject<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_subobject<sp/>=<sp/>subobject.get_HN_factors(*args)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;Subobject<sp/>{subobject}<sp/>in<sp/>defining<sp/>triangle<sp/>of<sp/>{self}<sp/>is<sp/>not<sp/>semistable,<sp/>cannot<sp/>find<sp/>its<sp/>HN<sp/>factors:\n{e.message}&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_side_min_phase<sp/>=<sp/>quotient_complex.get_smallest_phase(*args)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_side_max_phase<sp/>=<sp/>quotient_complex.get_largest_phase(*args)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>HN_factors_subobject[0][1]<sp/>&lt;=<sp/>right_side_min_phase:</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>largest<sp/>phase<sp/>of<sp/>subobject<sp/>is<sp/>less<sp/>than<sp/>smallest<sp/>phase<sp/>of<sp/>quotient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential_phase<sp/>=<sp/>cmath.phase(self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a181bcb14152a914997c7990b33b51c18" kindref="member">central_charge</ref>(*args))/math.pi</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-3,3):</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>HN_factors_subobject[0][1]<sp/>&lt;=<sp/>potential_phase<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>potential_phase<sp/>+<sp/>n<sp/>&lt;=<sp/>right_side_min_phase:</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(self,<sp/>potential_phase<sp/>+<sp/>n)]</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>HN_factors_subobject[-1][1]<sp/>&gt;<sp/>right_side_max_phase:</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>smallest<sp/>phase<sp/>of<sp/>subobject<sp/>is<sp/>greater<sp/>than<sp/>largest<sp/>phase<sp/>of<sp/>quotient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(quotient_complex)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HN_factors_subobject<sp/>+<sp/>[(quotient_complex,<sp/>right_side_max_phase)]</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(quotient_complex)<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(f</highlight><highlight class="stringliteral">&quot;The<sp/>Hom<sp/>object<sp/>is<sp/>not<sp/>concentrated<sp/>in<sp/>2<sp/>degrees;<sp/>currently\n{quotient_complex}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cplx_summand_0<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[0]],</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[0]],</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[0]])</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cplx_summand_1<sp/>=<sp/><ref refid="classsrc_1_1_chain_complex_1_1_chain_complex" kindref="compound">ChainComplex</ref>(sheaf_vector=[quotient_complex.sheaf_vector[1]],</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift_vector=[quotient_complex.shift_vector[1]],</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension_vector=[quotient_complex.dimension_vector[1]])</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>right_side_min_phase<sp/>==<sp/>quotient_complex.sheaf_vector[0].phase(*args)<sp/>+<sp/>quotient_complex.shift_vector[0]:</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HN_factors_subobject<sp/>+<sp/>[(cplx_summand_1,<sp/>right_side_max_phase),</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_0,<sp/>right_side_min_phase)]</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HN_factors_subobject<sp/>+<sp/>[(cplx_summand_0,<sp/>right_side_max_phase),</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cplx_summand_1,<sp/>right_side_min_phase)]</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondary_canonical_triangle<sp/>=<sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a4d600ef4b8ee2b4ca1473c15ce61c177" kindref="member">secondary_canonical_triangle</ref>().rotateLeft()</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_twist<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_spherical_twist" kindref="compound">SphericalTwist</ref>(secondary_canonical_triangle.object1.line_bundle_pairs_vector[0][0],</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secondary_canonical_triangle.object1.line_bundle_pairs_vector[0][1],</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist_1a29dff17ca204f873dca375391d956a35" kindref="member">degree</ref>)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_first_term<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_first_term<sp/>=<sp/>first_twist.get_HN_factors(*args)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;Subobject<sp/>{first_twist}<sp/>in<sp/>secondary<sp/>canonical<sp/>triangle<sp/>of<sp/>{self}<sp/>is<sp/>not<sp/>semistable,<sp/>cannot<sp/>find<sp/>its<sp/>HN<sp/>factors:\n{e.message}&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_last_term<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HN_factors_last_term<sp/>=<sp/>secondary_canonical_triangle.object3.get_HN_factors_ordered(*args)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>HarderNarasimhanError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;Quotient<sp/>{secondary_canonical_triangle.object3}<sp/>in<sp/>secondary<sp/>canonical<sp/>triangle<sp/>of<sp/>{self}<sp/>is<sp/>not<sp/>semistable,<sp/>cannot<sp/>find<sp/>its<sp/>HN<sp/>factors:\n{e.message}&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest_HN_phase_first<sp/>=<sp/>HN_factors_first_term[-1][1]</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_HN_phase_first<sp/>=<sp/>HN_factors_first_term[0][1]</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallest_HN_phase_last<sp/>=<sp/>HN_factors_last_term[-1][1]</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>largest_HN_phase_last<sp/>=<sp/>HN_factors_last_term[0][1]</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>largest_HN_phase_first<sp/>&lt;=<sp/>smallest_HN_phase_last:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential_phase<sp/>=<sp/>cmath.phase(self.<ref refid="classsrc_1_1_derived_category_object_1_1_derived_category_object_1a181bcb14152a914997c7990b33b51c18" kindref="member">central_charge</ref>(*args))/math.pi</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(-3,3):</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>largest_HN_phase_first<sp/>&lt;=<sp/>potential_phase<sp/>+<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>potential_phase<sp/>+<sp/>n<sp/>&lt;=<sp/>right_side_min_phase:</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[(self,<sp/>potential_phase<sp/>+<sp/>n)]</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>smallest_HN_phase_first<sp/>&gt;<sp/>largest_HN_phase_last:</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HN_factors_first_term<sp/>+<sp/>HN_factors_last_term</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/><ref refid="classsrc_1_1_spherical_twist_1_1_harder_narasimhan_error" kindref="compound">HarderNarasimhanError</ref>(message=f</highlight><highlight class="stringliteral">&quot;The<sp/>Harder-Narasimhan<sp/>factors<sp/>of<sp/>both<sp/>quotients<sp/>and<sp/>both<sp/>subobjects<sp/>do<sp/>not<sp/>match<sp/>any<sp/>of<sp/>4<sp/>known<sp/>scenarios;<sp/>their<sp/>HN<sp/>factors<sp/>necessarily<sp/>intertwine.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stability_parameters=args)</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1a1c38ced9519f6b38d31ba2b21e85bf0d" kindref="member">_dimHom_LineBundles</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>degree_K3<sp/>=<sp/>1):</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>General<sp/>helper<sp/>method<sp/>to<sp/>compute<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/></highlight></codeline>
<codeline lineno="1569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>two<sp/>line<sp/>bundles<sp/>(or<sp/>pushforwards<sp/>of<sp/>line<sp/>bundles,<sp/>in<sp/>the<sp/>local<sp/>Projectiv</highlight></codeline>
<codeline lineno="1570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>space<sp/>case).<sp/>The<sp/>method<sp/>is<sp/>a<sp/>wrapper<sp/>for<sp/>the<sp/>specific<sp/>implementations</highlight></codeline>
<codeline lineno="1571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>surfaces.</highlight></codeline>
<codeline lineno="1572"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree_K3:<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface,<sp/>as<sp/>an<sp/>optional<sp/>argument.<sp/>This<sp/>only<sp/>affects</highlight></codeline>
<codeline lineno="1576"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>K3<sp/>implementation.<sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="1577"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1580"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1581"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>line<sp/>bundles<sp/>are<sp/>not<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>catagory</highlight></codeline>
<codeline lineno="1583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1584"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>catagory<sp/>=<sp/>line_bundle_1.catagory</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_2.catagory:</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P1&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrc_1_1_spherical_twist_1adcd60e481039de6c60d8a2d37f5c63c9" kindref="member">_dimHom_LineBundlesP1</ref>(line_bundle_1,<sp/>line_bundle_2)</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;P2&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrc_1_1_spherical_twist_1aff5a06c58e0e3b1d744af87d52053c4f" kindref="member">_dimHom_LineBundlesP2</ref>(line_bundle_1,<sp/>line_bundle_2)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrc_1_1_spherical_twist_1ad116867ac212aa843b4e6d6051436472" kindref="member">_dimHom_LineBundlesK3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>degree_K3)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Only<sp/>P1,<sp/>P2<sp/>and<sp/>K3<sp/>catagories<sp/>are<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1adcd60e481039de6c60d8a2d37f5c63c9" kindref="member">_dimHom_LineBundlesP1</ref>(line_bundle_1,<sp/>line_bundle_2):</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>which<sp/>computes<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>bundles<sp/>O(a)<sp/>and<sp/>O(b).<sp/>The<sp/>dimensions<sp/>of<sp/>the<sp/>pushforwards<sp/>are<sp/>computed<sp/>using<sp/>the<sp/>triangle</highlight></codeline>
<codeline lineno="1611"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i^*<sp/>i_*<sp/>E<sp/>-&gt;<sp/>E<sp/>-&gt;<sp/>E<sp/>x<sp/>O(2)[2]</highlight></codeline>
<codeline lineno="1613"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>applying<sp/>Hom(-,<sp/>O(b))<sp/>to<sp/>obtain<sp/>a<sp/>long-exact<sp/>sequence.<sp/>Using<sp/>the<sp/>standard<sp/>dimensions<sp/>of</highlight></codeline>
<codeline lineno="1615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>line<sp/>bundles<sp/>on<sp/>P1,<sp/>the<sp/>computation<sp/>reduces<sp/>to<sp/>a<sp/>case-by-case</highlight></codeline>
<codeline lineno="1616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combinatorial<sp/>problem.<sp/>Since<sp/>the<sp/>homological<sp/>index<sp/>of<sp/>the<sp/>hom-space<sp/>on<sp/>P1<sp/>is<sp/>bounded<sp/>between</highlight></codeline>
<codeline lineno="1617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>and<sp/>1,<sp/>the<sp/>hom-space<sp/>for<sp/>local<sp/>P1<sp/>is<sp/>concentrated<sp/>between<sp/>degrees<sp/>0<sp/>and<sp/>2.<sp/>Thus,<sp/>we<sp/>return</highlight></codeline>
<codeline lineno="1618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>tuple<sp/>of<sp/>the<sp/>form<sp/>(a,b,c)</highlight></codeline>
<codeline lineno="1619"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1621"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1622"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1623"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1624"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1627"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree_dif<sp/>=<sp/>line_bundle_2.degree<sp/>-<sp/>line_bundle_1.degree</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>degree_dif<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>degree_dif<sp/>&gt;=<sp/>2:</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(degree_dif<sp/>+<sp/>1,<sp/>degree_dif<sp/>-<sp/>1,<sp/>0)</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(2,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>==<sp/>-1:</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>2)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>-1*degree_dif<sp/>-<sp/>1,<sp/>-1*degree_dif<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1aff5a06c58e0e3b1d744af87d52053c4f" kindref="member">_dimHom_LineBundlesP2</ref>(line_bundle_1,<sp/>line_bundle_2):</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1646"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>which<sp/>computes<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>bundles<sp/>O(a)<sp/>and<sp/>O(b).<sp/>The<sp/>dimensions<sp/>of<sp/>the<sp/>pushforwards<sp/>are<sp/>computed<sp/>using<sp/>the<sp/>triangle</highlight></codeline>
<codeline lineno="1648"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i^*<sp/>i_*<sp/>E<sp/>-&gt;<sp/>E<sp/>-&gt;<sp/>E<sp/>x<sp/>O(3)[2]</highlight></codeline>
<codeline lineno="1650"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>applying<sp/>Hom(-,<sp/>O(b))<sp/>to<sp/>obtain<sp/>a<sp/>long-exact<sp/>sequence.<sp/>Using<sp/>the<sp/>standard<sp/>dimensions<sp/>of</highlight></codeline>
<codeline lineno="1652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>line<sp/>bundles<sp/>on<sp/>P^2,<sp/>the<sp/>computation<sp/>reduces<sp/>to<sp/>a<sp/>case-by-case</highlight></codeline>
<codeline lineno="1653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combinatorial<sp/>problem.<sp/>Since<sp/>the<sp/>homological<sp/>index<sp/>of<sp/>the<sp/>hom-space<sp/>on<sp/>P^2<sp/>is<sp/>bounded<sp/>between</highlight></codeline>
<codeline lineno="1654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>and<sp/>2,<sp/>the<sp/>hom-space<sp/>for<sp/>local<sp/>P2<sp/>is<sp/>concentrated<sp/>between<sp/>degrees<sp/>0<sp/>and<sp/>3.<sp/>Thus,<sp/>we<sp/>return</highlight></codeline>
<codeline lineno="1655"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>tuple<sp/>of<sp/>the<sp/>form<sp/>(a,b,c,d)</highlight></codeline>
<codeline lineno="1656"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1658"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1659"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1660"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1661"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1662"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>degree_dif<sp/>=<sp/>line_bundle_2.degree<sp/>-<sp/>line_bundle_1.degree</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>degree_dif<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1,<sp/>0,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>&gt;<sp/>-3<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>degree_dif<sp/>&lt;<sp/>0:</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank3<sp/>=<sp/>math.comb(line_bundle_1.degree<sp/>-<sp/>line_bundle_2.degree<sp/>+<sp/>2,<sp/>2)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>0,<sp/>rank3)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>degree_dif<sp/>&lt;<sp/>3:</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank0<sp/>=<sp/>math.comb(degree_dif<sp/>+<sp/>2,<sp/>2)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rank0,<sp/>0,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>&gt;=<sp/>3:</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank0<sp/>=<sp/>math.comb(degree_dif<sp/>+<sp/>2,<sp/>2)</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank1<sp/>=<sp/>math.comb(degree_dif<sp/>-<sp/>1,<sp/>2)</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rank0,<sp/>rank1,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank2<sp/>=<sp/>math.comb(line_bundle_1.degree<sp/>-<sp/>line_bundle_2.degree<sp/>-1,<sp/>2)</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank3<sp/>=<sp/>math.comb(line_bundle_1.degree<sp/>-<sp/>line_bundle_2.degree<sp/>+<sp/>2,<sp/>2)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>rank2,<sp/>rank3)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1ad116867ac212aa843b4e6d6051436472" kindref="member">_dimHom_LineBundlesK3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>degree_K3):</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1687"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>which<sp/>computes<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>hom<sp/>spaces<sp/>between<sp/>line<sp/>bundles<sp/>on<sp/>a<sp/></highlight></codeline>
<codeline lineno="1688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>degree<sp/>d<sp/>K3<sp/>surface.<sp/>Since<sp/>the<sp/>only<sp/>K3s<sp/>we<sp/>consider<sp/>are<sp/>Picard<sp/>rank<sp/>1,<sp/>if<sp/>O(a)<sp/>and<sp/>O(b)<sp/>are</highlight></codeline>
<codeline lineno="1689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>distinct<sp/>then<sp/>either<sp/>O(b-a)<sp/>or<sp/>O(a-b)<sp/>must<sp/>be<sp/>ample;<sp/>by<sp/>Serre<sp/>duality<sp/>and<sp/>a<sp/>result<sp/>of<sp/>Huybrechts,</highlight></codeline>
<codeline lineno="1690"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>one<sp/>may<sp/>always<sp/>argue<sp/>that<sp/>Ext1(O(a),<sp/>O(b))<sp/>=<sp/>0.<sp/>In<sp/>fact,<sp/>Serre<sp/>duality<sp/>implies<sp/>that<sp/>the<sp/>complex<sp/>must</highlight></codeline>
<codeline lineno="1691"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>be<sp/>concentrated<sp/>in<sp/>a<sp/>single<sp/>degree,<sp/>which<sp/>is<sp/>either<sp/>0<sp/>or<sp/>2<sp/>and<sp/>corresponds<sp/>to<sp/>the<sp/>cases<sp/>that<sp/>b<sp/>&gt;<sp/>a<sp/>and</highlight></codeline>
<codeline lineno="1692"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>&lt;<sp/>b,<sp/>respectively.<sp/></highlight></codeline>
<codeline lineno="1693"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1694"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>We<sp/>return<sp/>a<sp/>tuple<sp/>of<sp/>the<sp/>form<sp/>(n0,n1,n2)<sp/>indicating<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>graded<sp/>RHom<sp/>space.<sp/>Aside<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="1695"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>instance<sp/>that<sp/>a=b,<sp/>this<sp/>will<sp/>only<sp/>include<sp/>one<sp/>nonzero<sp/>element.<sp/>Hirzebruch-Riemann-Roch<sp/>shows<sp/>that</highlight></codeline>
<codeline lineno="1696"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1697"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dim<sp/>RHom(O(a),<sp/>O(b))<sp/>=<sp/>1<sp/>+<sp/>d(b-a)^2<sp/></highlight></codeline>
<codeline lineno="1698"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1699"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>first<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1700"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>second<sp/>line<sp/>bundle<sp/>in<sp/>the<sp/>Hom<sp/>space</highlight></codeline>
<codeline lineno="1701"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree_K3<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface</highlight></codeline>
<codeline lineno="1702"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1703"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1704"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1705"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1706"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1707"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>degree_K3<sp/>is<sp/>not<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="1708"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree_K3,<sp/>int):</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>degree_dif<sp/>=<sp/>line_bundle_2.degree<sp/>-<sp/>line_bundle_1.degree</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>degree_dif<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1,<sp/>0,<sp/>1)</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>degree_dif<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(degree_K3<sp/>*<sp/>degree_dif**2<sp/>+<sp/>2,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>degree_K3<sp/>*<sp/>degree_dif**2<sp/>+<sp/>2)</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1a8d4c5f90a3a32982ba929fae740b1736" kindref="member">_dimHom_Line_and_SingleTwist</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3,<sp/>degree_K3):</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>method<sp/>which<sp/>computes<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>hom<sp/>spaces<sp/>between<sp/>a<sp/>line<sp/>bundle<sp/>and<sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>single<sp/>spherical<sp/>twist<sp/>of<sp/>line<sp/>bundles.<sp/>This<sp/>is<sp/>a<sp/>wrapper<sp/>for<sp/>the<sp/>specific<sp/>implementations</highlight></codeline>
<codeline lineno="1732"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>P1,<sp/>P2,<sp/>and<sp/>K3<sp/>surfaces.</highlight></codeline>
<codeline lineno="1733"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1734"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>line<sp/>bundle<sp/>to<sp/>twist<sp/>around:<sp/>i.e.<sp/>O(a)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="1735"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>line<sp/>bundle<sp/>which<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>being<sp/>applied<sp/>to:<sp/>i.e.<sp/>O(b)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="1736"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_3:<sp/>The<sp/>line<sp/>bundle<sp/>which<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>being<sp/>applied<sp/>to:<sp/>i.e.<sp/>O(c)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(c)</highlight></codeline>
<codeline lineno="1737"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree_K3:<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface,<sp/>as<sp/>an<sp/>optional<sp/>argument.<sp/>This<sp/>only<sp/>affects</highlight></codeline>
<codeline lineno="1738"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>K3<sp/>implementation.<sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="1739"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1740"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1741"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1742"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1743"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_3<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>line<sp/>bundles<sp/>are<sp/>not<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>catagory</highlight></codeline>
<codeline lineno="1746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_3,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_3<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundle.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_2.catagory<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>!=<sp/>line_bundle_3.catagory:</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;Line<sp/>bundles<sp/>must<sp/>be<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>variety&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.catagory<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacesrc_1_1_spherical_twist_1ace1a7dca89c709b900186dca644a49da" kindref="member">_dimHom_Line_and_SingleTwistK3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3,<sp/>degree_K3)</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError(</highlight><highlight class="stringliteral">&quot;Double<sp/>spherical<sp/>twist<sp/>is<sp/>currently<sp/>only<sp/>implemented<sp/>for<sp/>K3<sp/>surfaces.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacesrc_1_1_spherical_twist_1ace1a7dca89c709b900186dca644a49da" kindref="member">_dimHom_Line_and_SingleTwistK3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>line_bundle_3,<sp/>degree_K3):</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;!</highlight></codeline>
<codeline lineno="1772"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Helper<sp/>function<sp/>which<sp/>computes<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>derived<sp/>hom<sp/>spaces<sp/>between<sp/>a<sp/>line<sp/>bundle<sp/></highlight></codeline>
<codeline lineno="1773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>and<sp/>a<sp/>spherical<sp/>twist<sp/>of<sp/>line<sp/>bundles;<sp/>that<sp/>is,<sp/>this<sp/>function<sp/>computes<sp/>the<sp/>dimensions<sp/>of<sp/></highlight></codeline>
<codeline lineno="1774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RHom(O(a),<sp/>Tw_{O(b)}<sp/>O(c))</highlight></codeline>
<codeline lineno="1776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1777"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>which<sp/>is<sp/>necessarily<sp/>concentrated<sp/>in<sp/>cohomological<sp/>degrees<sp/>-1<sp/>through<sp/>3.<sp/>As<sp/>a<sp/>consequence,<sp/>this<sp/></highlight></codeline>
<codeline lineno="1778"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>returns<sp/>a<sp/>tuple<sp/>of<sp/>five<sp/>integers<sp/>(hom-1,<sp/>hom0,<sp/>hom1,<sp/>hom2,<sp/>hom3)<sp/>corresponding<sp/>to<sp/>the<sp/></highlight></codeline>
<codeline lineno="1779"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dimensions<sp/>of<sp/>the<sp/>higher-ext<sp/>groups.<sp/></highlight></codeline>
<codeline lineno="1780"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1781"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_1<sp/>The<sp/>line<sp/>bundle<sp/>to<sp/>twist<sp/>around:<sp/>i.e.<sp/>O(a)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="1782"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_2<sp/>The<sp/>line<sp/>bundle<sp/>which<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>being<sp/>applied<sp/>to:<sp/>i.e.<sp/>O(b)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(b)</highlight></codeline>
<codeline lineno="1783"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>LineBundle<sp/>line_bundle_3<sp/>The<sp/>line<sp/>bundle<sp/>which<sp/>the<sp/>spherical<sp/>twist<sp/>is<sp/>being<sp/>applied<sp/>to:<sp/>i.e.<sp/>O(c)<sp/>where<sp/>we<sp/>are<sp/>computing<sp/>Tw_a<sp/>O(c)</highlight></codeline>
<codeline lineno="1784"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\param<sp/>int<sp/>degree_K3:<sp/>The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface,<sp/>as<sp/>an<sp/>optional<sp/>argument.<sp/>This<sp/>only<sp/>affects</highlight></codeline>
<codeline lineno="1785"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>K3<sp/>implementation.<sp/>Default<sp/>is<sp/>1.</highlight></codeline>
<codeline lineno="1786"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1787"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\return<sp/>tuple<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>Hom<sp/>spaces<sp/>between<sp/>the<sp/>pushforwards<sp/>of<sp/>the<sp/>line<sp/>bundles</highlight></codeline>
<codeline lineno="1788"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1789"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_1<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1790"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_2<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1791"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>TypeError<sp/>If<sp/>line_bundle_3<sp/>is<sp/>not<sp/>an<sp/>instance<sp/>of<sp/>LineBundle</highlight></codeline>
<codeline lineno="1792"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>ValueError<sp/>If<sp/>the<sp/>line<sp/>bundles<sp/>are<sp/>not<sp/>defined<sp/>on<sp/>the<sp/>same<sp/>catagory</highlight></codeline>
<codeline lineno="1793"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>\throws<sp/>NotImplementedError<sp/>If<sp/>the<sp/>catagory<sp/>of<sp/>the<sp/>object<sp/>is<sp/>not<sp/>P1,<sp/>P2,<sp/>or<sp/>K3</highlight></codeline>
<codeline lineno="1794"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1795"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(degree_K3,<sp/>int):</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>an<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>degree_K3<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&quot;The<sp/>degree<sp/>of<sp/>the<sp/>K3<sp/>surface<sp/>must<sp/>be<sp/>a<sp/>positive<sp/>integer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_1,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_1<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP2.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_2,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_2<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP2.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(line_bundle_3,<sp/>LineBundle):</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>TypeError(</highlight><highlight class="stringliteral">&quot;line_bundle_3<sp/>must<sp/>be<sp/>an<sp/>instance<sp/>of<sp/>LineBundleP2.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/>dif_12<sp/>=<sp/>degree_K3<sp/>*<sp/>(line_bundle_2.degree<sp/>-<sp/>line_bundle_1.degree)**2<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/>dif_23<sp/>=<sp/>degree_K3<sp/>*<sp/>(line_bundle_3.degree<sp/>-<sp/>line_bundle_2.degree)**2<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/>dif_13<sp/>=<sp/>degree_K3<sp/>*<sp/>(line_bundle_3.degree<sp/>-<sp/>line_bundle_1.degree)**2<sp/>+<sp/>2</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_2.degree<sp/>&lt;<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&lt;<sp/>line_bundle_2.degree:</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dif_12<sp/>*<sp/>dif_23<sp/>&gt;=<sp/>dif_13:</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dif_12<sp/>*<sp/>dif_23<sp/>-<sp/>dif_13,<sp/>0,<sp/>0,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>There<sp/>is<sp/>an<sp/>edge<sp/>case<sp/>when<sp/>(b-c)(b-a)<sp/>=<sp/>-1;<sp/>this<sp/>reduces<sp/>to<sp/>Tw_{n+1}<sp/>Tw_n<sp/>O(n-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>Tw_{n-1}<sp/>Tw_n<sp/>O(n+1).<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Hom<sp/>space<sp/>is<sp/>concentrated<sp/>in<sp/>degree<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>dif_13<sp/>-<sp/>dif_12*dif_23,<sp/>0,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>==<sp/>line_bundle_2.degree:</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>dif_23,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&gt;<sp/>line_bundle_2.degree<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&lt;<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>dif_13,<sp/>dif_12*dif_23,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>==<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>1,<sp/>dif_23<sp/>-<sp/>1,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line_bundle_1.deg<sp/>&gt;<sp/>line_bundle_3.deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dif_12<sp/>*<sp/>dif_23<sp/>&gt;=<sp/>dif_13:</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>dif_23*dif_12-dif_13,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>There<sp/>is<sp/>an<sp/>edge<sp/>case<sp/>when<sp/>(b-c)(b-a)<sp/>=<sp/>-1;<sp/>this<sp/>reduces<sp/>to<sp/>Tw_{n+1}<sp/>Tw_n<sp/>O(n-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>or<sp/>Tw_{n-1}<sp/>Tw_n<sp/>O(n+1).<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Hom<sp/>space<sp/>is<sp/>concentrated<sp/>in<sp/>degree<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>However,<sp/>this<sp/>theoretically<sp/>should<sp/>not<sp/>occur<sp/>here<sp/>since<sp/>we<sp/>are<sp/>considering<sp/>the<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>where<sp/>a<sp/>&gt;<sp/>c<sp/>&gt;<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>0,<sp/>dif_13<sp/>-<sp/>dif_12*dif_23,<sp/>0)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_2.degree<sp/>==<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>b<sp/>=<sp/>c,<sp/>then<sp/>Tw_b<sp/>O(c)<sp/>=<sp/>O(c)[-1].<sp/>Thus,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hom(O(a),<sp/>Tw_b<sp/>O(c))<sp/>=<sp/>Hom(O(a),<sp/>O(c)[-1])<sp/>=<sp/>Hom(O(a),<sp/>O(c))[-1]<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a,b,c)<sp/>=<sp/><ref refid="namespacesrc_1_1_spherical_twist_1ad116867ac212aa843b4e6d6051436472" kindref="member">_dimHom_LineBundlesK3</ref>(line_bundle_1,<sp/>line_bundle_2,<sp/>degree_K3)</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>a,<sp/>b,<sp/>c)</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line_bundle_2.deg<sp/>&gt;<sp/>line_bundle_3.deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&gt;<sp/>line_bundle_2.degree:</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>0,<sp/>dif_13,<sp/>dif_23*dif_13)</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>==<sp/>line_bundle_2.degree:</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>0,<sp/>0,<sp/>dif_23)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&lt;<sp/>line_bundle_2.degree<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>&gt;<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dif_12<sp/>*<sp/>dif_23<sp/>&gt;=<sp/>dif_13:</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>dif_23*dif_12<sp/>-<sp/>dif_13,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>0,<sp/>0,<sp/>dif_13<sp/>-<sp/>dif_12*dif_23,<sp/>0)</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>line_bundle_1.degree<sp/>==<sp/>line_bundle_3.degree:</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>1,<sp/>dif_12*dif_23<sp/>-<sp/>1,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line_bundle_1.deg<sp/>&lt;<sp/>line_bundle_3.deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0,<sp/>dif_13,<sp/>dif_12*dif_23,<sp/>0,<sp/>0)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lb1<sp/>=<sp/>LineBundle(-1,<sp/>catagory=&apos;P2&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lb2<sp/>=<sp/>LineBundle(0,<sp/>catagory=&apos;P2&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lb3<sp/>=<sp/>LineBundle(5,<sp/>catagory=&apos;P2&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>from<sp/>LocalP2<sp/>import<sp/>LePotier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>DLP<sp/>=<sp/>LePotier(granularity=3,<sp/>width=5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sph<sp/>=<sp/>SphericalTwist(line_bundle_1=lb1,<sp/>line_bundle_2=lb3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>5,<sp/>150)<sp/><sp/>#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>y_vals<sp/>=<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>x<sp/>in<sp/>x_vals:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_min<sp/>=DLP.curve_estimate(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_max<sp/>=<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(y_min,<sp/>y_max,<sp/>100)<sp/><sp/>#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/>#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>160)<sp/><sp/>#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>masses<sp/>=<sp/>np.array([sph.mass(x,<sp/>y)<sp/>for<sp/>x,<sp/>y<sp/>in<sp/>zip(x_vals,<sp/>y_vals)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=masses,<sp/>x=x_vals,<sp/>y=y_vals,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=&apos;markers&apos;,<sp/>marker=dict(size=3,<sp/>color=masses,<sp/>colorscale=&apos;viridis&apos;))])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>fig.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lb4<sp/>=<sp/>LineBundle(-5,<sp/>catagory=&apos;P1&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>lb5<sp/>=<sp/>LineBundle(2,<sp/>catagory=&apos;P1&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sph2<sp/>=<sp/>SphericalTwist(line_bundle_1=lb4,<sp/>line_bundle_2=lb5,<sp/>degree=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(sph2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>lb6<sp/>=<sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(1,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>lb7<sp/>=<sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(2,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/>lb8<sp/>=<sp/><ref refid="classsrc_1_1_coherent_sheaf_1_1_line_bundle" kindref="compound">LineBundle</ref>(4,<sp/>catagory=</highlight><highlight class="stringliteral">&apos;K3&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sph_sum<sp/>=<sp/>SphericalTwistSum([(lb6,<sp/>lb7),<sp/>(lb8,<sp/>lb9),<sp/>(lb6,<sp/>lb9),<sp/>(lb6,<sp/>lb7)],<sp/>[1,<sp/>5,<sp/>0,<sp/>10],<sp/>[-1,<sp/>2,<sp/>-5,<sp/>-1],<sp/>degree=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(sph_sum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(sph_sum.chernCharacter())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>sph3<sp/>=<sp/>SphericalTwist(lb7,<sp/>lb8,<sp/>degree=2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(sph3.shift(3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(&quot;Is<sp/>semistable:<sp/>&quot;,<sp/>sph3.is_semistable(1,<sp/>2,<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/>K3_deg<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/>sph4<sp/>=<sp/><ref refid="classsrc_1_1_spherical_twist_1_1_double_spherical_twist" kindref="compound">DoubleSphericalTwist</ref>(lb6,<sp/>lb7,<sp/>lb8,<sp/>degree=K3_deg)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print(sph4.mass(2,<sp/>3,<sp/>K3_deg))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.linspace(-5,<sp/>11.10,<sp/>200)<sp/><sp/></highlight><highlight class="comment">#<sp/>X<sp/>values<sp/>from<sp/>-2<sp/>to<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Generate<sp/>y<sp/>values<sp/>satisfying<sp/>y<sp/>&gt;<sp/>x^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>x_vals:</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_range<sp/>=<sp/>np.linspace(0,<sp/>5,<sp/>100)<sp/><sp/></highlight><highlight class="comment">#<sp/>50<sp/>points<sp/>per<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_vals.append(y_range)</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Convert<sp/>to<sp/>numpy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>y_vals<sp/>=<sp/>np.array(y_vals).flatten()<sp/><sp/></highlight><highlight class="comment">#<sp/>Flatten<sp/>the<sp/>y<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Repeat<sp/>x<sp/>values<sp/>to<sp/>match<sp/>the<sp/>shape<sp/>of<sp/>y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>x_vals<sp/>=<sp/>np.repeat(x_vals,<sp/>100)<sp/><sp/></highlight><highlight class="comment">#<sp/>Each<sp/>x<sp/>value<sp/>repeats<sp/>10<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>masses<sp/>=<sp/>np.array([sph4.mass(x,<sp/>y,<sp/>K3_deg)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x,<sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(x_vals,<sp/>y_vals)])</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Plot<sp/>the<sp/>surface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>fig<sp/>=<sp/>go.Figure(data=[go.Scatter3d(z=masses,<sp/>x=x_vals,<sp/>y=y_vals,</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode=</highlight><highlight class="stringliteral">&apos;markers&apos;</highlight><highlight class="normal">,<sp/>marker=dict(size=3,<sp/>color=masses,<sp/>colorscale=</highlight><highlight class="stringliteral">&apos;viridis&apos;</highlight><highlight class="normal">))])</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.update_layout(scene<sp/>=<sp/>dict(xaxis<sp/>=<sp/>dict(nticks=4,<sp/>range=[-5,5])))</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/>fig.show()</highlight></codeline>
    </programlisting>
    <location file="src/SphericalTwist.py"/>
  </compounddef>
</doxygen>
